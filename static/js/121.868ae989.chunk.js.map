{"version":3,"file":"static/js/121.868ae989.chunk.js","mappings":"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","sources":["Button.styled.js","components/Navigation/Navigation.styled.js","components/Navigation/Navigation.js","components/Header/Header.styled.js","components/Logo/Logo.styled.js","components/Logo/Logo.js","components/MobileMenu/MobileMenu.styled.js","components/MobileMenu/MobileMenu.js","components/Header/Header.js","components/UserInfo/UserInfo.styled.jsx","components/UserInfo/UserInfo.js"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Button = styled.button`\r\n  display: inline-block;\r\n  background: ${props =>\r\n    props.primary ? props.theme.BUTTON_COLOR : 'transparent'};\r\n  color: ${props => (props.primary ? '#fff' : props.theme.BUTTON_COLOR)};\r\n  box-shadow: ${props =>\r\n    props.primary ? '0 4px 10px rgba(252, 132, 45, .5)' : null};\r\n  border: 2px solid #fc842d;\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n  padding: 13px 25px;\r\n  border-radius: 30px;\r\n  transition: background 200ms linear, color 200ms linear;\r\n  cursor: pointer;\r\n  letter-spacing: 0.04em;\r\n\r\n  :hover {\r\n    background: ${props =>\r\n      props.primary ? 'transparent' : props.theme.BUTTON_COLOR};\r\n    color: ${props => (props.primary ? props.theme.BUTTON_COLOR : '#fff')};\r\n  }\r\n\r\n  :disabled {\r\n    pointer-events: none;\r\n    opacity: 0.7;\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\nimport { NavLink } from 'react-router-dom';\r\nimport * as palette from '../../variables/Variables';\r\n\r\nexport const Nav = styled.nav`\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: flex-end;\r\n  @media screen and (min-width: 1280px) {\r\n    width: 100%;\r\n    height: 26px;\r\n    padding-bottom: 5px;\r\n  }\r\n`;\r\n\r\nexport const NavWrap = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: flex-end;\r\n  @media screen and (min-width: 1280px) {\r\n    width: 100%;\r\n    height: 26px;\r\n  }\r\n`;\r\n\r\nexport const LoggedNav = styled.nav`\r\n  display: none;\r\n  @media screen and (min-width: 1280px) {\r\n    display: block;\r\n    align-items: center;\r\n    width: 268px;\r\n    height: 26px;\r\n  }\r\n`;\r\n\r\nexport const Link = styled(NavLink)`\r\n  font-size: ${palette.TEXT_FONTSIZE};\r\n  text-transform: uppercase;\r\n  letter-spacing: 0.04em;\r\n  font-family: 'GothamPro';\r\n  font-weight: 700;\r\n  margin-right: 16px;\r\n  color: ${props => props.theme.SECONDARY_COLOR};\r\n  &:hover {\r\n    color: ${props => props.theme.MAIN_COLOR};\r\n    transition: color 0.5s cubic-bezier(0.4, 0, 0.2, 1);\r\n  }\r\n  &.active {\r\n    color: ${props => props.theme.MAIN_COLOR};\r\n  }\r\n\r\n  &:last-child {\r\n    margin-right: 0px;\r\n  }\r\n\r\n  @media screen and (min-width: 1280px) {\r\n    border: none;\r\n    &:first-child {\r\n      margin-left: 20px;\r\n    }\r\n  }\r\n`;\r\n","import { Nav, Link, LoggedNav, NavWrap } from './Navigation.styled';\r\nimport { useSelector } from 'react-redux';\r\nimport { getIsLoggedIn } from '../../redux/auth/authSelectors';\r\n\r\nexport default function Navigation() {\r\n  const isLoggedIn = useSelector(getIsLoggedIn);\r\n  return (\r\n    <NavWrap>\r\n      {isLoggedIn ? (\r\n        <>\r\n          <LoggedNav>\r\n            <Link to=\"/diary\">Щоденник</Link>\r\n            <Link to=\"/calculator\">Калькулятор</Link>\r\n          </LoggedNav>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Nav>\r\n            <Link to=\"/signin\">Увійти</Link>\r\n            <Link to=\"/registration\">Реєстрація</Link>\r\n          </Nav>\r\n        </>\r\n      )}\r\n    </NavWrap>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\n// import * as palette from '../../variables/Variables';\r\n\r\nexport const HeaderEl = styled.header`\r\n  border-bottom: 2px solid;\r\n  color: ${props => props.theme.LINE_COLOR};\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 20px 20px 16px 20px;\r\n  @media screen and (min-width: 768px) {\r\n    padding: 20px 32px 16px 20px;\r\n  }\r\n  @media screen and (min-width: 1280px) {\r\n    border: none;\r\n    padding: 60px 16px 0px 16px;\r\n    flex-direction: row;\r\n    justify-content: flex-start;\r\n    align-items: flex-end;\r\n  }\r\n`;\r\n\r\nexport const HeaderDivider = styled.div`\r\n  display: none;\r\n  @media screen and (min-width: 1280px) {\r\n    display: block;\r\n    height: 32px;\r\n    border-right: 2px solid;\r\n    border-color: ${props => props.theme.SECONDARY_COLOR};\r\n  }\r\n`;\r\n\r\nexport const UserInfoWrap = styled.div`\r\n  display: none;\r\n  @media screen and (min-width: 768px) {\r\n    display: flex;\r\n    align-items: center;\r\n    margin-right: 53px;\r\n  }\r\n  @media screen and (min-width: 1280px) {\r\n    margin-right: 0;\r\n  }\r\n`;\r\n\r\nexport const BurgerWrap = styled.button`\r\n  background-color: transparent;\r\n  @media screen and (min-width: 1280px) {\r\n    display: none;\r\n  }\r\n`;\r\nexport const HeaderWrap = styled.div`\r\n  @media screen and (min-width: 768px) {\r\n    display: flex;\r\n  }\r\n  @media screen and (min-width: 1280px) {\r\n    width: 100%;\r\n    align-items: flex-end;\r\n    flex-direction: row-reverse;\r\n    justify-content: space-between;\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport const LogoWrap = styled.div`\r\n  @media screen and (min-width: 1280px) {\r\n    margin-right: 60px;\r\n  }\r\n`;\r\n\r\nexport const LogoLink = styled(NavLink)`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 105.3px;\r\n  font-size: 16px;\r\n  letter-spacing: 0.04em;\r\n  font-weight: 100;\r\n  margin-right: 16px;\r\n  color: ${props => props.theme.MAIN_COLOR};\r\n`;\r\n\r\nexport const LogoImg = styled.div`\r\n  background-image: url(${props => props.theme.LOGO_MOBILE});\r\n  width: 44px;\r\n  height: 46.6px;\r\n  margin-right: 10.3px;\r\n  @media screen and (min-width: 1280px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const LogoText = styled.div`\r\n  display: none;\r\n  @media screen and (min-width: 768px) {\r\n    background-image: url(${props => props.theme.LOGO_TABLET});\r\n    display: block;\r\n    width: 105.3px;\r\n    height: 16px;\r\n  }\r\n\r\n  @media screen and (min-width: 1280px) {\r\n    background-image: url(${props => props.theme.LOGO_DESKTOP});\r\n    display: block;\r\n    align-items: center;\r\n    width: 167px;\r\n    height: 66px;\r\n  }\r\n`;\r\n\r\nexport const LogoTextWrap = styled.div`\r\n  @media screen and (min-width: 1280px) {\r\n    display: block;\r\n    width: 167px;\r\n    margin-right: 20px;\r\n    padding-bottom: 3px;\r\n  }\r\n`;\r\n\r\nexport const LogoTextLogged = styled.div`\r\n  background-image: url(${props => props.theme.LOGO_TABLET});\r\n  width: 105.3px;\r\n  height: 16px;\r\n\r\n  @media screen and (min-width: 1280px) {\r\n    background-image: url(${props => props.theme.LOGO_DESKTOP});\r\n    align-items: center;\r\n    width: 167px;\r\n    height: 66px;\r\n  }\r\n`;\r\n","import { useSelector } from 'react-redux';\r\nimport { getIsLoggedIn } from '../../redux/auth/authSelectors';\r\nimport {\r\n  LogoLink,\r\n  LogoImg,\r\n  LogoText,\r\n  LogoWrap,\r\n  LogoTextWrap,\r\n  LogoTextLogged,\r\n} from './Logo.styled';\r\n\r\nexport default function Logo() {\r\n  const isLoggedIn = useSelector(getIsLoggedIn);\r\n\r\n  return (\r\n    <LogoWrap>\r\n      <LogoLink to={isLoggedIn ? '/diary' : '/'}>\r\n        <div>\r\n          <LogoImg />\r\n        </div>\r\n        <LogoTextWrap>\r\n          {isLoggedIn ? <LogoTextLogged /> : <LogoText />}\r\n        </LogoTextWrap>\r\n      </LogoLink>\r\n    </LogoWrap>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\nimport { NavLink } from 'react-router-dom';\r\nimport * as palette from '../../variables/Variables';\r\n\r\nexport const MenuWrap = styled.div`\r\n  @media screen and (max-width: 1279px) {\r\n    width: 24px;\r\n    height: 24px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    align-self: center;\r\n  }\r\n`;\r\n\r\nexport const MenuNav = styled.nav`\r\n  display: none;\r\n  @media screen and (max-width: 1279px) {\r\n    height: 100vh;\r\n    position: fixed;\r\n    z-index: 100;\r\n    opacity: 0;\r\n    width: 0;\r\n    transition: all 0.8s cubic-bezier(0.68, -0.55, 0.265, 1.55);\r\n    top: 84px;\r\n    right: 0;\r\n    flex-direction: column;\r\n    background: ${props => props.theme.INTAKE_DAILY_COLOR};\r\n    align-items: center;\r\n    padding-top: 100px;\r\n    display: flex;\r\n    gap: 15px;\r\n    margin-bottom: 2px;\r\n  }\r\n  @media screen and (max-width: 480px) {\r\n    padding-top: 60px;\r\n  }\r\n`;\r\n\r\nexport const MenuLink = styled(NavLink)`\r\n  font-family: 'GothamPro';\r\n  font-weight: 700;\r\n  font-size: 24px;\r\n  line-height: 29px;\r\n  text-align: center;\r\n  letter-spacing: 0.04em;\r\n  text-transform: uppercase;\r\n  color: ${props => props.theme.MOBILE_MENU_TEXT_COLOR};\r\n\r\n  &.active {\r\n    color: ${props => props.theme.MOBILE_MENU_ACTIVE_TEXT_COLOR};\r\n  }\r\n\r\n  @media screen and (min-width: 1280px) {\r\n    font-size: ${palette.TEXT_FONTSIZE};\r\n    text-transform: uppercase;\r\n    letter-spacing: 0.04em;\r\n    font-family: 'GothamPro';\r\n    font-weight: 700;\r\n    margin-right: 16px;\r\n    color: ${props => props.theme.MOBILE_MENU_TEXT_COLOR};\r\n    &:hover {\r\n      color: ${props => props.theme.MAIN_COLOR};\r\n      transition: color 0.5s cubic-bezier(0.4, 0, 0.2, 1);\r\n    }\r\n    &.active {\r\n      color: ${props => props.theme.MAIN_COLOR};\r\n    }\r\n    &:first-child {\r\n      margin-left: 20px;\r\n    }\r\n  }\r\n  @media screen and (max-width: 1279px) {\r\n    font-size: 24px;\r\n    line-height: 1.2;\r\n    color: ${props => props.theme.MOBILE_MENU_TEXT_COLOR};\r\n    &.active {\r\n      color: ${props => props.theme.MOBILE_MENU_ACTIVE_TEXT_COLOR};\r\n    }\r\n  }\r\n  @media screen and (max-width: 480px) {\r\n    font-size: 18px;\r\n  }\r\n`;\r\n\r\nexport const BurgerIcon = styled.span`\r\n  @media screen and (max-width: 1279px) {\r\n    display: block;\r\n    width: 18px;\r\n    height: 2px;\r\n    background-color: ${props => props.theme.MAIN_COLOR};\r\n    transition: top 0.3s;\r\n    position: relative;\r\n    &:before,\r\n    &:after {\r\n      width: 100%;\r\n      height: 2px;\r\n      background-color: ${props => props.theme.MAIN_COLOR};\r\n      display: inline-block;\r\n      margin: 0;\r\n      transition: top 0.3s;\r\n      content: '';\r\n      position: absolute;\r\n      left: 0;\r\n    }\r\n    &::before {\r\n      top: -6px;\r\n    }\r\n    &::after {\r\n      top: 6px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const BurgerButton = styled.button`\r\n  display: none;\r\n  @media screen and (max-width: 1279px) {\r\n    display: block;\r\n    background-color: transparent;\r\n    user-select: none;\r\n    outline: none;\r\n    border: 0 none;\r\n    width: 24px;\r\n    height: 24px;\r\n  }\r\n  &.close {\r\n    span {\r\n      background-color: transparent;\r\n      &:before,\r\n      &:after {\r\n        top: 0;\r\n      }\r\n      &:before {\r\n        transform: rotate(45deg);\r\n      }\r\n      &:after {\r\n        transform: rotate(-45deg);\r\n      }\r\n    }\r\n    ~ ${MenuNav} {\r\n      width: 100%;\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n","import React, { useState } from 'react';\r\nimport {\r\n  MenuWrap,\r\n  MenuLink,\r\n  MenuNav,\r\n  BurgerIcon,\r\n  BurgerButton,\r\n} from './MobileMenu.styled';\r\n\r\nexport default function MobileMenu() {\r\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\r\n  isMenuOpen\r\n    ? document.body.classList.add('no-scroll')\r\n    : document.body.classList.remove('no-scroll');\r\n\r\n  const toggleMenu = () => {\r\n    setIsMenuOpen(!isMenuOpen);\r\n  };\r\n\r\n  return (\r\n    <MenuWrap>\r\n      <BurgerButton\r\n        className={isMenuOpen ? 'close' : 'open'}\r\n        onClick={() => toggleMenu()}\r\n      >\r\n        <BurgerIcon />\r\n      </BurgerButton>\r\n      <MenuNav className={isMenuOpen ? 'add-pointer' : 'remove-pointer'}>\r\n        <MenuLink to=\"/diary\">Щоденник</MenuLink>\r\n        <MenuLink to=\"/calculator\">Калькулятор</MenuLink>\r\n      </MenuNav>\r\n    </MenuWrap>\r\n  );\r\n}\r\n","import Navigation from '../Navigation/Navigation';\r\nimport {\r\n  HeaderEl,\r\n  HeaderDivider,\r\n  UserInfoWrap,\r\n  HeaderWrap,\r\n} from './Header.styled';\r\nimport Logo from '../Logo/Logo';\r\nimport { useSelector } from 'react-redux';\r\nimport { getIsLoggedIn } from '../../redux/auth/authSelectors';\r\nimport MobileMenu from '../MobileMenu/MobileMenu';\r\nimport UserInfo from '../UserInfo/UserInfo';\r\nimport { useLocation } from 'react-router-dom';\r\nexport default function Header() {\r\n  const isLoggedIn = useSelector(getIsLoggedIn);\r\n  let location = useLocation();\r\n  let currentLocation = location.pathname;\r\n  return (\r\n    <HeaderEl>\r\n      <Logo />\r\n      <HeaderDivider />\r\n      <HeaderWrap>\r\n        <UserInfoWrap>{isLoggedIn ? <UserInfo /> : <></>}</UserInfoWrap>\r\n        {currentLocation === '/signin' ||\r\n        currentLocation === '/registration' ||\r\n        currentLocation === '/' ? (\r\n          <></>\r\n        ) : (\r\n          <MobileMenu />\r\n        )}\r\n        <Navigation />\r\n      </HeaderWrap>\r\n    </HeaderEl>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\nimport * as palette from '../../variables/Variables';\r\nimport { Box } from '@mui/material';\r\nimport { Button } from '../../Button.styled';\r\nexport const UserInfoWrap = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  @media screen and (min-width: 1280px) {\r\n    z-index: 1;\r\n    align-items: unset;\r\n  }\r\n`;\r\n\r\nexport const UserText = styled.h2`\r\n  font-style: normal;\r\n  font-weight: 700;\r\n  font-size: ${palette.TEXT_FONTSIZE};\r\n  line-height: 2.2;\r\n  text-align: right;\r\n  letter-spacing: 0.04em;\r\n\r\n  color: ${props => props.theme.MAIN_COLOR};\r\n  white-space: nowrap;\r\n  margin-right: 15px;\r\n  @media screen and (min-width: 1280px) {\r\n    margin-left: 20px;\r\n  }\r\n`;\r\n\r\nexport const VerticalLine = styled.div`\r\n  display: block;\r\n  height: 32px;\r\n  border-right: 2px solid;\r\n  border-color: ${props => props.theme.SECONDARY_COLOR};\r\n`;\r\n\r\nexport const UserExit = styled.button`\r\n  background-color: transparent;\r\n  font-style: normal;\r\n  padding: 0;\r\n  cursor: pointer;\r\n  font-weight: 700;\r\n  font-size: 14px;\r\n  line-height: 2.2;\r\n  letter-spacing: 0.04em;\r\n  color: ${props => props.theme.SECONDARY_COLOR};\r\n  margin-left: 15px;\r\n  &:hover {\r\n    color: ${props => props.theme.MAIN_COLOR};\r\n    transition: color 0.5s cubic-bezier(0.4, 0, 0.2, 1);\r\n  }\r\n\r\n  cursor: pointer;\r\n\r\n  @media screen and (min-width: 1280px) {\r\n    margin-left: 20px;\r\n  }\r\n`;\r\n\r\nexport const Wrap = styled(Box)`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  width: 300px;\r\n  background: ${props => props.theme.TEXT_COLOR};\r\n  padding: 40px;\r\n  @media screen and (min-width: 768px) {\r\n    width: 400px;\r\n  }\r\n`;\r\nexport const BtnWrap = styled.div`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  margin-top: 50px;\r\n`;\r\nexport const ModalTxt = styled.p`\r\n  text-align: center;\r\n  font-size: 22px;\r\n  font-weight: 700;\r\n  color: ${props => props.theme.MAIN_COLOR};\r\n  @media screen and (min-width: 768px) {\r\n    font-size: ${palette.SUBTITLE_FONTSIZE_DESC};\r\n  }\r\n`;\r\nexport const Btn = styled(Button)`\r\n  padding: 13px 30px;\r\n  @media screen and (min-width: 768px) {\r\n    padding: 13px 45px;\r\n  }\r\n`;\r\n","import { useState } from 'react';\r\nimport { Modal } from '@mui/material';\r\nimport {\r\n  UserInfoWrap,\r\n  UserText,\r\n  UserExit,\r\n  VerticalLine,\r\n  Wrap,\r\n  BtnWrap,\r\n  ModalTxt,\r\n  Btn,\r\n} from './UserInfo.styled';\r\nimport { getUserName } from '../../redux/auth/authSelectors';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { logOut } from '../../redux/auth/authOperations';\r\n\r\nexport default function UserInfo() {\r\n  const name = useSelector(getUserName);\r\n  const dispatch = useDispatch();\r\n\r\n  let sliced = name.slice(0,18);\r\n  if (sliced.length < name.length) {\r\n  sliced += '...';\r\n  }\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  return (\r\n    <UserInfoWrap>\r\n      <UserText>{sliced}</UserText>\r\n      <VerticalLine />\r\n      <UserExit onClick={handleOpen}>Вихід</UserExit>\r\n      <Modal open={open} onClose={handleClose}>\r\n        <Wrap>\r\n          <ModalTxt>Бажаєте вийти?</ModalTxt>\r\n          <BtnWrap>\r\n            <Btn onClick={() => dispatch(logOut())}>Так</Btn>\r\n            <Btn onClick={handleClose}>Ні</Btn>\r\n          </BtnWrap>\r\n        </Wrap>\r\n      </Modal>\r\n    </UserInfoWrap>\r\n  );\r\n}\r\n"],"names":["Button","styled","props","primary","theme","BUTTON_COLOR","Nav","NavWrap","LoggedNav","Link","NavLink","palette","SECONDARY_COLOR","MAIN_COLOR","Navigation","isLoggedIn","useSelector","getIsLoggedIn","to","HeaderEl","LINE_COLOR","HeaderDivider","UserInfoWrap","HeaderWrap","LogoWrap","LogoLink","LogoImg","LOGO_MOBILE","LogoText","LOGO_TABLET","LOGO_DESKTOP","LogoTextWrap","LogoTextLogged","Logo","MenuWrap","MenuNav","INTAKE_DAILY_COLOR","MenuLink","MOBILE_MENU_TEXT_COLOR","MOBILE_MENU_ACTIVE_TEXT_COLOR","BurgerIcon","BurgerButton","MobileMenu","useState","isMenuOpen","setIsMenuOpen","document","body","classList","add","remove","className","onClick","Header","currentLocation","useLocation","pathname","UserInfo","UserText","VerticalLine","UserExit","Wrap","Box","TEXT_COLOR","BtnWrap","ModalTxt","Btn","name","getUserName","dispatch","useDispatch","sliced","slice","length","open","setOpen","handleClose","Modal","onClose","logOut"],"sourceRoot":""}