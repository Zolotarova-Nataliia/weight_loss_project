{"version":3,"file":"static/js/673.a88d66ae.chunk.js","mappings":"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","sources":["Container.styled.js","components/RegistrationForm/RegistrationForm.styled.js","pages/Login/LoginPage.styled.jsx","pages/PreviewPage/PrewiewPage.styled.js","components/RegistrationForm/RegistrationForm.js","pages/Register/RegisterPage.js","validators/authValidation.js"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  @media screen and (min-width: 320px) {\r\n    padding: 20px;\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    padding: 80px 32px 55px 32px;\r\n  }\r\n\r\n  @media screen and (min-width: 1280px) {\r\n    padding: 7% 16px 0 16px;\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\nimport { NavLink } from 'react-router-dom';\r\nimport * as palette from '../../variables/Variables';\r\nimport { Button } from '../../Button.styled';\r\n// import desctop from '../../images/desktop/desctop_min.png';\r\n// import tablet from '../../images/tablet/bg-2-tablet.png';\r\nimport RemoveRedEyeOutlinedIcon from '@mui/icons-material/RemoveRedEyeOutlined';\r\nimport VisibilityOffOutlinedIcon from '@mui/icons-material/VisibilityOffOutlined';\r\n\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    align-items: flex-start;\r\n  }\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n  font-family: 'GothamPro';\r\n  font-weight: 700;\r\n  font-size: ${palette.TEXT_FONTSIZE};\r\n  line-height: 13px;\r\n  letter-spacing: 0.04em;\r\n  text-transform: uppercase;\r\n  padding-top: 40px;\r\n  margin-bottom: 60px;\r\n  color: ${props => props.theme.BUTTON_COLOR};\r\n`;\r\n\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  align-items: flex-start;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  &:not(:first-child) {\r\n    margin-top: 20px;\r\n  }\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  border-bottom: 1px solid #e0e0e0;\r\n  width: 280px;\r\n  height: 40px;\r\n  padding-bottom: 20px;\r\n  font-family: 'Verdana';\r\n  font-weight: 700;\r\n  font-size: ${palette.TEXT_FONTSIZE};\r\n  line-height: 17px;\r\n  letter-spacing: 0.04em;\r\n  color: ${props => props.theme.MAIN_COLOR};\r\n  border-bottom: 1px solid ${props => props.theme.LINE_COLOR};\r\n  transition: border-color 0.3s;\r\n  background-color: rgba(117, 190, 218, 0);\r\n\r\n  ::placeholder {\r\n    color: ${props => props.theme.SECONDARY_COLOR};\r\n  }\r\n\r\n  &:focus {\r\n    border-bottom-color: ${props => props.theme.MAIN_COLOR};\r\n  }\r\n\r\n  &.active {\r\n    color: ${props => props.theme.MAIN_COLOR};\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    width: 315px;\r\n  }\r\n`;\r\n\r\nexport const ButtonWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  margin-top: 40px;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    flex-direction: row;\r\n  }\r\n`;\r\n\r\nexport const AuthButton = styled(Button)`\r\n  width: 182px;\r\n\r\n  :hover,\r\n  :focus {\r\n    background: ${props => props.theme.BUTTON_COLOR};\r\n    color: #fff;\r\n  }\r\n\r\n  &:not(:last-child) {\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    &:not(:last-child) {\r\n      margin-bottom: 0;\r\n      margin-right: 32px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const LinkButton = styled(NavLink)`\r\n  display: inline-block;\r\n  text-align: center;\r\n  background: ${props =>\r\n    props.primary ? palette.BUTTON_COLOR : 'transparent'};\r\n  color: ${props => (props.primary ? '#fff' : palette.BUTTON_COLOR)};\r\n  box-shadow: ${props =>\r\n    props.primary ? '0 4px 10px rgba(252, 132, 45, .5)' : null};\r\n  border: 2px solid #fc842d;\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n  width: 182px;\r\n  padding: 13px 25px;\r\n  border-radius: 30px;\r\n  transition: background 200ms linear, color 200ms linear;\r\n  cursor: pointer;\r\n\r\n  :hover,\r\n  :focus {\r\n    background: ${props => (props.primary ? '#fff' : palette.BUTTON_COLOR)};\r\n    color: ${props => (props.primary ? palette.BUTTON_COLOR : '#fff')};\r\n    outline: none;\r\n  }\r\n\r\n  :disabled {\r\n    pointer-events: none;\r\n    opacity: 0.7;\r\n  }\r\n`;\r\n\r\nexport const Text = styled.span`\r\n  @media screen and (max-width: 767px) {\r\n    font-size: 0.67em;\r\n  }\r\n\r\n  color: #e10000;\r\n  font-size: 0.77em;\r\n  margin-top: 5px;\r\n  position: relative;\r\n`;\r\n\r\nexport const Stub = styled.div`\r\n  height: 20px;\r\n  position: relative;\r\n`;\r\n\r\nexport const ShowPasswIcon = styled(RemoveRedEyeOutlinedIcon)`\r\n  position: absolute;\r\n  right: 15px;\r\n  color: ${props => props.theme.SECONDARY_COLOR};\r\n  cursor: pointer;\r\n`;\r\nexport const HidePasswIcon = styled(VisibilityOffOutlinedIcon)`\r\n  position: absolute;\r\n  right: 15px;\r\n  color: ${props => props.theme.SECONDARY_COLOR};\r\n  cursor: pointer;\r\n`;\r\n","import styled from 'styled-components';\r\nimport bgImageTabletBanana from '../../images/tablet/banana-tablet-login.png';\r\nimport bgImageTabletStrawberry from '../../images/desktop/strawberry-desc.png';\r\nimport bgImageTabletLeaves from '../../images/tablet/leave-tablet-login.png';\r\n\r\nconst BgBananaTablet = styled.div`\r\n  display: none;\r\n  @media screen and (min-width: 768px) and (max-width: 1279px) {\r\n    display: block;\r\n    position: absolute;\r\n    bottom: 0;\r\n    right: 0;\r\n    background-image: url(${bgImageTabletBanana});\r\n    background-repeat: no-repeat;\r\n    background-position: right bottom;\r\n    height: 530px;\r\n    width: 740px;\r\n  }\r\n`;\r\n\r\nconst BgStrawberryTablet = styled.div`\r\n  display: none;\r\n  @media screen and (min-width: 768px) and (max-width: 1279px) {\r\n    display: block;\r\n    position: absolute;\r\n    right: -55px;\r\n    bottom: 230px;\r\n    background-image: url(${bgImageTabletStrawberry});\r\n    background-repeat: no-repeat;\r\n    background-position: bottom right;\r\n    width: 100%;\r\n    height: 340px;\r\n  }\r\n`;\r\n\r\nconst BgLeavesTablet = styled.div`\r\n  display: none;\r\n  @media screen and (min-width: 768px) and (max-width: 1279px) {\r\n    display: block;\r\n    position: absolute;\r\n    right: 135px;\r\n    bottom: 100px;\r\n    background-image: url(${bgImageTabletLeaves});\r\n    background-repeat: no-repeat;\r\n    background-size: contain;\r\n    background-position: center;\r\n    width: 600px;\r\n    height: 100%;\r\n  }\r\n`;\r\n\r\nconst BgFigureTablet = styled.div`\r\n  display: none;\r\n  @media screen and (min-width: 768px) and (max-width: 1279px) {\r\n    display: block;\r\n    position: absolute;\r\n    bottom: 0;\r\n    right: 0;\r\n    background-image: url(${props => props.theme.BG_FIGURE_TABLET});\r\n    background-repeat: no-repeat;\r\n    background-size: contain;\r\n    background-position: right bottom;\r\n    width: 553px;\r\n    height: 700px;\r\n    z-index: -2;\r\n  }\r\n`;\r\n\r\nexport { BgBananaTablet, BgStrawberryTablet, BgLeavesTablet, BgFigureTablet };\r\n","import styled from 'styled-components';\r\n\r\nimport bgImageDesktopBanana from '../../images/desktop/banana-desk.png';\r\nimport bgImageDesktopStrawberry from '../../images/desktop/strawberry-desc.png';\r\nimport bgImageDesktopLeaves from '../../images/desktop/leaves-desc.png';\r\nconst Main = styled.main`\r\n  @media screen and (min-width: 320px) and (max-width: 1279px) {\r\n    /* position: relative; */\r\n  }\r\n`;\r\n\r\nconst BgBoxDesctop = styled.div`\r\n  @media screen and (max-width: 1279px) {\r\n    display: none;\r\n  }\r\n  @media screen and (min-width: 1280px) {\r\n    overflow: hidden;\r\n    display: block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    height: 100vh;\r\n    width: 100vw;\r\n    z-index: -1;\r\n  }\r\n`;\r\n\r\nconst BgBanana = styled.div`\r\n  @media screen and (max-width: 1279px) {\r\n    display: none;\r\n  }\r\n  @media screen and (min-width: 1280px) {\r\n    display: block;\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    background-image: url(${bgImageDesktopBanana});\r\n    background-repeat: no-repeat;\r\n    background-position: top right;\r\n    height: 100%;\r\n    width: 100%;\r\n    z-index: -1;\r\n  }\r\n`;\r\n\r\nconst BgStrawberry = styled.div`\r\n  @media screen and (max-width: 1279px) {\r\n    display: none;\r\n  }\r\n  @media screen and (min-width: 1280px) {\r\n    display: block;\r\n    position: absolute;\r\n    right: 25px;\r\n    bottom: 35px;\r\n    background-image: url(${bgImageDesktopStrawberry});\r\n    background-repeat: no-repeat;\r\n    background-size: contain;\r\n    background-position: right;\r\n    width: 100%;\r\n    height: 38%;\r\n    z-index: -1;\r\n  }\r\n`;\r\n\r\nconst BgLeaves = styled.div`\r\n  @media screen and (max-width: 1279px) {\r\n    display: none;\r\n  }\r\n  @media screen and (min-width: 1280px) {\r\n    display: block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 30%;\r\n    background-image: url(${bgImageDesktopLeaves});\r\n    background-repeat: no-repeat;\r\n    background-size: contain;\r\n    width: 100%;\r\n    height: 100%;\r\n    z-index: -1;\r\n  }\r\n`;\r\n\r\nconst BgFigure = styled.div`\r\n  @media screen and (max-width: 1279px) {\r\n    display: none;\r\n  }\r\n  @media screen and (min-width: 1280px) {\r\n    \r\n    display: block;\r\n    position: absolute;\r\n    bottom: 0;\r\n    right: 0;\r\n    background-image: url(${props => props.theme.BG_FIGURE});\r\n    background-repeat: no-repeat;\r\n    background-size: contain;\r\n    background-position: right;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    z-index: -2;\r\n  }\r\n`;\r\n\r\nconst BgBoxTablet = styled.div`\r\n  display: none;\r\n  @media screen and (min-width: 768px) and (max-width: 1279px) {\r\n    display: block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    overflow: hidden;\r\n    height: 100vh;\r\n    width: 100%;\r\n    z-index: -1;\r\n  }\r\n`;\r\n\r\nexport {\r\n  Main,\r\n  BgBoxDesctop,\r\n  BgBanana,\r\n  BgStrawberry,\r\n  BgLeaves,\r\n  BgFigure,\r\n  BgBoxTablet,\r\n};\r\n","import { useDispatch } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useState } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport { register } from '../../redux/auth/authOperations';\r\nimport {\r\n  nameValidation,\r\n  emailValidation,\r\n  passwordValidation,\r\n} from '../../validators/authValidation';\r\nimport {\r\n  Wrapper,\r\n  Title,\r\n  Form,\r\n  Label,\r\n  Input,\r\n  ButtonWrapper,\r\n  AuthButton,\r\n  LinkButton,\r\n  Text,\r\n  Stub,\r\n  ShowPasswIcon,\r\n  HidePasswIcon,\r\n} from './RegistrationForm.styled';\r\n\r\nconst validationSchema = yup.object({\r\n  name: nameValidation,\r\n  email: emailValidation,\r\n  password: passwordValidation,\r\n});\r\n\r\nexport default function RegistrationForm() {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const [showPassw, setShowPassw] = useState(false);\r\n  const toggleShowPassw = () => {\r\n    setShowPassw(!showPassw);\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: '',\r\n      email: '',\r\n      password: '',\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: async (values, { resetForm }) => {\r\n      await dispatch(register(values));\r\n      navigate('/signin', { replace: true });\r\n      resetForm();\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Title>Реєстрація</Title>\r\n      <Form onSubmit={formik.handleSubmit}>\r\n        <Label htmlFor=\"name\"></Label>\r\n        <Input\r\n          placeholder=\"Ім'я *\"\r\n          id=\"name\"\r\n          name=\"name\"\r\n          type=\"text\"\r\n          onChange={formik.handleChange}\r\n          value={formik.values.name}\r\n          autoComplete=\"name\"\r\n        />\r\n        {formik.touched.name && Boolean(formik.errors.name) ? (\r\n          <Text>{formik.touched.name && formik.errors.name}</Text>\r\n        ) : (\r\n          <Stub />\r\n        )}\r\n\r\n        <Label htmlFor=\"email\"></Label>\r\n        <Input\r\n          placeholder=\"Пошта *\"\r\n          id=\"email\"\r\n          name=\"email\"\r\n          type=\"email\"\r\n          onChange={formik.handleChange}\r\n          value={formik.values.email}\r\n          autoComplete=\"email\"\r\n        />\r\n        {formik.touched.email && Boolean(formik.errors.email) ? (\r\n          <Text>{formik.touched.email && formik.errors.email}</Text>\r\n        ) : (\r\n          <Stub />\r\n        )}\r\n\r\n        <Label htmlFor=\"password\" style={{ position: 'relative' }}>\r\n          <Input\r\n            placeholder=\"Пароль *\"\r\n            id=\"password\"\r\n            name=\"password\"\r\n            type={showPassw ? 'text' : 'password'}\r\n            onChange={formik.handleChange}\r\n            value={formik.values.password.trim()}\r\n            autoComplete=\"current-password\"\r\n          />\r\n          {showPassw ? (\r\n            <HidePasswIcon\r\n              onClick={() => {\r\n                toggleShowPassw();\r\n              }}\r\n            />\r\n          ) : (\r\n            <ShowPasswIcon\r\n              onClick={() => {\r\n                toggleShowPassw();\r\n              }}\r\n            />\r\n          )}\r\n        </Label>\r\n        {formik.touched.password && Boolean(formik.errors.password) ? (\r\n          <Text>{formik.touched.password && formik.errors.password}</Text>\r\n        ) : (\r\n          <Stub />\r\n        )}\r\n\r\n        <ButtonWrapper>\r\n          <AuthButton primary type=\"submit\">\r\n            Зареєструватися\r\n          </AuthButton>\r\n          <LinkButton to={'/signin'}>Вхід</LinkButton>\r\n        </ButtonWrapper>\r\n      </Form>\r\n    </Wrapper>\r\n  );\r\n}\r\n","import RegistrationForm from '../../components/RegistrationForm';\r\nimport { Container } from '../../Container.styled';\r\nimport Header from '../../components/Header/Header';\r\nimport {\r\n  BgBoxDesctop,\r\n  BgBanana,\r\n  BgStrawberry,\r\n  BgLeaves,\r\n  BgFigure,\r\n  BgBoxTablet,\r\n} from '../PreviewPage/PrewiewPage.styled';\r\nimport {\r\n  BgBananaTablet,\r\n  BgStrawberryTablet,\r\n  BgLeavesTablet,\r\n  BgFigureTablet,\r\n} from '../Login/LoginPage.styled';\r\n\r\nfunction RegisterPage() {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <BgBoxTablet>\r\n        <BgBananaTablet />\r\n        <BgStrawberryTablet />\r\n        <BgLeavesTablet />\r\n        <BgFigureTablet />\r\n      </BgBoxTablet>\r\n\r\n      <BgBoxDesctop>\r\n        <BgBanana />\r\n        <BgStrawberry />\r\n        <BgLeaves />\r\n        <BgFigure />\r\n      </BgBoxDesctop>\r\n\r\n      <Container>\r\n        <RegistrationForm />\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default RegisterPage;\r\n","import * as yup from 'yup';\r\n\r\nconst REG_EXP = '^[A-Za-z0-9]+$';\r\n\r\nexport const nameValidation = yup\r\n  .string(`Введіть своє ім'я`)\r\n  .min(3, 'Довжина імені має бути мінімум 3 символи')\r\n  .max(254, 'Надто довго!')\r\n  .required(`Необхідно вказати ім'я`);\r\n\r\nexport const emailValidation = yup\r\n  .string('Введіть адресу електронної пошти')\r\n  .min(3, 'Довжина пошти має бути мінімум 3 символи')\r\n  .max(254, 'Надто довго!')\r\n  .email(`Повинна обов'язково містити знак \"@\" і \"крапку\"`)\r\n  .required('Необхідно вказати адресу електронної пошти');\r\n\r\nexport const passwordValidation = yup\r\n  .string('Введіть ваш пароль')\r\n  .matches(REG_EXP, 'Може містити лише латинський алфавіт та цифри')\r\n  .min(8, 'Довжина повинна бути мінімум 8 символів')\r\n  .max(100, 'Надто довго!')\r\n  .required('Необхідно ввести пароль');\r\n"],"names":["Container","styled","Wrapper","Title","palette","props","theme","BUTTON_COLOR","Form","Label","Input","MAIN_COLOR","LINE_COLOR","SECONDARY_COLOR","ButtonWrapper","AuthButton","Button","LinkButton","NavLink","primary","Text","Stub","ShowPasswIcon","RemoveRedEyeOutlinedIcon","HidePasswIcon","VisibilityOffOutlinedIcon","BgBananaTablet","bgImageTabletBanana","BgStrawberryTablet","bgImageTabletStrawberry","BgLeavesTablet","bgImageTabletLeaves","BgFigureTablet","BG_FIGURE_TABLET","Main","BgBoxDesctop","BgBanana","bgImageDesktopBanana","BgStrawberry","bgImageDesktopStrawberry","BgLeaves","bgImageDesktopLeaves","BgFigure","BG_FIGURE","BgBoxTablet","validationSchema","yup","name","nameValidation","email","emailValidation","password","passwordValidation","RegistrationForm","dispatch","useDispatch","navigate","useNavigate","useState","showPassw","setShowPassw","toggleShowPassw","formik","useFormik","initialValues","onSubmit","values","resetForm","register","replace","handleSubmit","htmlFor","placeholder","id","type","onChange","handleChange","value","autoComplete","touched","Boolean","errors","style","position","trim","onClick","to","Header","min","max","required","matches"],"sourceRoot":""}