{"version":3,"file":"static/js/87.302e18e7.chunk.js","mappings":"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","sources":["Container.styled.js","components/MobileSidebar/MobileSidebar.styled.js","components/MobileSidebar/MobileSidebar.js","components/RightSidebar/RightSidebar.styled.js","redux/dailyRate/dailyRateSelectors.js","components/RightSidebar/RightSidebar.js","helpers/translate.js","components/DairyProductForm/DairyProductForm.styled.js","pages/DairyPage/DiaryPage.styled.js","components/DairyProductForm/DairyProductForm.js","components/DairyProductListItem/DairyProductListItem.styled.jsx","components/DairyProductListItem/DairyProductListItem.js","components/DairyProductList/DairyProductList.styled.jsx","components/DairyProductList/DairyProductList.js","pages/DairyPage/DiaryPage.js","product_dictionary.js","redux/products/productsSelectors.js"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  @media screen and (min-width: 320px) {\r\n    padding: 20px;\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    padding: 80px 32px 55px 32px;\r\n  }\r\n\r\n  @media screen and (min-width: 1280px) {\r\n    padding: 140px 16px 0 16px;\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\nimport * as palette from '../../variables/Variables';\r\n\r\nexport const MobileSidebarWrap = styled.div`\r\n  width: 100%;\r\n  height: 40px;\r\n  background-color: ${palette.SIDEBAR_COLOR};\r\n  display: flex;\r\n  padding: 4px 20px;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 40px;\r\n  @media screen and (min-width: 768px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const MobileSidebarBtn = styled.button`\r\n  display: block;\r\n  width: 20px;\r\n  height: 20px;\r\n  cursor: pointer;\r\n  background-color: transparent;\r\n  border: none;\r\n  padding: 1px;\r\n`;\r\n\r\nexport const MobileSidebarInfoWrap = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-top: 0;\r\n  padding: 0;\r\n  border-radius: 100%;\r\n  width: 48px;\r\n  height: 48px;\r\n  flex-shrink: 0;\r\n  flex-grow: 0;\r\n`;\r\n","import UserInfo from '../UserInfo/UserInfo';\r\nimport { BsArrowReturnLeft } from 'react-icons/bs';\r\nimport { MobileSidebarWrap, MobileSidebarBtn } from './MobileSidebar.styled';\r\n\r\nexport default function MobileSidebar({ onGoBack, mobileAddSelected }) {\r\n  return (\r\n    <MobileSidebarWrap>\r\n      <MobileSidebarBtn onClick={() => onGoBack()}>\r\n        <BsArrowReturnLeft\r\n          size={12}\r\n          className={!mobileAddSelected ? 'hideOnMobile' : ''}\r\n        />\r\n      </MobileSidebarBtn>\r\n      <div>\r\n        <UserInfo />\r\n      </div>\r\n    </MobileSidebarWrap>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\nimport * as palette from '../../variables/Variables';\r\nimport bgImageDesktop from '../../images/desktop/bg-3-health-calculator.png';\r\nimport bgImageTablet from '../../images/tablet/bg-1-tablet.png';\r\n\r\nexport const Container = styled.aside`\r\n  background-color: ${palette.SIDEBAR_COLOR};\r\n  background-size: contain;\r\n  background-repeat: no-repeat;\r\n  overflow: hidden;\r\n  line-height: 1.2;\r\n  font-size: 14px;\r\n  color: ${palette.MAIN_COLOR};\r\n  padding: 40px 20px;\r\n  letter-spacing: 0.04em;\r\n  @media (min-width: 481px) {\r\n    padding: 80px 30px;\r\n  }\r\n  @media (min-width: 481px) and (max-width: 1279px) {\r\n    background-image: url(${bgImageTablet});\r\n    background-position: bottom right;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    gap: 30px;\r\n    > div {\r\n      flex: 0 0 45%;\r\n    }\r\n  }\r\n  @media screen and (min-width: 1280px) {\r\n    flex-direction: column;\r\n    max-width: 520px;\r\n    width: 35%;\r\n    position: fixed;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    padding: 292px 8% 50px 5%;\r\n    background-image: url(${bgImageDesktop});\r\n    background-position: center right;\r\n  }\r\n`;\r\n\r\nexport const Head = styled.h3`\r\n  margin-bottom: 20px;\r\n  @media screen and (min-width: 481px) {\r\n    margin-bottom: 30px;\r\n  }\r\n`;\r\n\r\nexport const CalloriesList = styled.ul`\r\n  color: ${palette.SECONDARY_COLOR};\r\n  margin-bottom: 30px;\r\n  @media (min-width: 481px) and (max-width: 1279px) {\r\n    margin-bottom: 0;\r\n  }\r\n  @media screen and (min-width: 1280px) {\r\n    margin-bottom: 50px;\r\n  }\r\n  li {\r\n    margin-bottom: 15px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: flex-end;\r\n    gap: 10px;\r\n    span:last-child {\r\n      white-space: nowrap;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ProductsList = styled.div`\r\n  color: ${palette.SECONDARY_COLOR};\r\n  line-height: 1.4;\r\n  :first-letter {\r\n    text-transform: uppercase;\r\n  }\r\n`;\r\n\r\nexport const EmptyProducts = styled.div`\r\n  color: ${palette.SECONDARY_COLOR};\r\n`;\r\n","export const getCalories = state => state.dailyRate.dailyCalories;\r\nexport const getProducts = state => state.dailyRate.uniqCategories;\r\n","import { Fragment } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { translate } from '../../helpers/translate';\r\n\r\nimport product_dictionary from '../../product_dictionary';\r\nimport {\r\n  Container,\r\n  Head,\r\n  CalloriesList,\r\n  ProductsList,\r\n  EmptyProducts,\r\n} from './RightSidebar.styled';\r\nimport {\r\n  getCalories,\r\n  getProducts,\r\n} from '../../redux/dailyRate/dailyRateSelectors';\r\nimport {\r\n  getIsLoading,\r\n  getProductsList,\r\n} from '../../redux/products/productsSelectors';\r\nimport Loader from '../Loader/Loader';\r\nimport moment from 'moment';\r\n\r\nvar currentDate = moment().format('DD.MM.yyyy');\r\n\r\nexport default function RightSidebar({ date = currentDate }) {\r\n  const products = useSelector(getProducts) || [];\r\n  const dailyNormCalories = useSelector(getCalories);\r\n  const productsList = useSelector(getProductsList);\r\n  const isLoading = useSelector(getIsLoading);\r\n\r\n  const totalDayCalories = productsList.reduce(\r\n    (total, x) => total + x.calories_kcal,\r\n    0\r\n  );\r\n  let left = dailyNormCalories - totalDayCalories;\r\n  let leftCalories =\r\n    left < 0\r\n      ? 'Ви вжили більше норми'\r\n      : left === 0\r\n      ? 'Ви вжили свою норму калорій'\r\n      : `${left} кКал`;\r\n  const norm_persent =\r\n    dailyNormCalories > 0\r\n      ? ((totalDayCalories * 100) / dailyNormCalories).toFixed(1)\r\n      : 0;\r\n\r\n  return (\r\n    <Container>\r\n      {isLoading ? (\r\n        <Loader />\r\n      ) : (\r\n        <>\r\n          <div>\r\n            <Head>Всього за {date}</Head>\r\n            {dailyNormCalories !== null ? (\r\n              <CalloriesList>\r\n                <li>\r\n                  <span>Залишилось</span>\r\n                  <span>{dailyNormCalories === 0 ? 0 : leftCalories}</span>\r\n                </li>\r\n                <li>\r\n                  <span>Вжито</span>\r\n                  <span>\r\n                    {dailyNormCalories === 0 ? 0 : totalDayCalories} кКал\r\n                  </span>\r\n                </li>\r\n                <li>\r\n                  <span>Добова норма</span>\r\n                  <span>{dailyNormCalories} кКал</span>\r\n                </li>\r\n                <li>\r\n                  <span>n% від норми</span>\r\n                  <span>{norm_persent} %</span>\r\n                </li>\r\n              </CalloriesList>\r\n            ) : (\r\n              <Head> Необхідно ввести дані в форму!</Head>\r\n            )}\r\n          </div>\r\n          <div>\r\n            <Head>Не рекомендовано вживати</Head>\r\n            {products.length > 0 ? (\r\n              <ProductsList>\r\n                {products.map((product, index) => {\r\n                  return (\r\n                    <Fragment key={index}>\r\n                      {translate(product_dictionary, product)}\r\n                      {index !== products.length - 1 && ', '}\r\n                    </Fragment>\r\n                  );\r\n                })}\r\n              </ProductsList>\r\n            ) : (\r\n              <EmptyProducts>Тут відображатиметься ваша дієта</EmptyProducts>\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n","export function translate(dictionary, product) {\r\n    for (const [key, value] of Object.entries(dictionary)) {\r\n        if(product === key){\r\n            return value.ua;\r\n        }\r\n    }\r\n}","import styled from 'styled-components';\r\nimport * as palette from '../../variables/Variables';\r\n\r\nimport AsyncSelect from 'react-select/async';\r\n\r\nexport const StyledForm = styled.form`\r\n  display: flex;\r\n  margin-top: 60px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  @media screen and (min-width: 768px) {\r\n    flex-direction: row;\r\n    justify-content: flex-start;\r\n  }\r\n`;\r\n\r\nexport const FormLabel = styled.label`\r\n  width: 100%;\r\n  @media screen and (min-width: 768px) {\r\n    width: auto;\r\n  }\r\n`;\r\n\r\nexport const FormInputProduct = styled(AsyncSelect)`\r\n  font-size: ${palette.TEXT_FONTSIZE};\r\n  font-family: 'Verdana';\r\n  font-weight: 700;\r\n  letter-spacing: 0.04em;\r\n  color: ${palette.MAIN_COLOR};\r\n  margin-bottom: 32px;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    margin-right: 22px;\r\n    margin-bottom: 0;\r\n    width: 240px;\r\n  }\r\n\r\n  @media screen and (min-width: 1280px) {\r\n    margin-right: 48px;\r\n  }\r\n\r\n  .react-select__control {\r\n    border: none;\r\n    border-bottom: 1px solid ${palette.LINE_COLOR};\r\n    border-radius: 0;\r\n    &:hover {\r\n      border-bottom-color: ${palette.MAIN_COLOR};\r\n    }\r\n    &--is-focused {\r\n      outline: none;\r\n      border-bottom-color: ${palette.MAIN_COLOR};\r\n      box-shadow: none;\r\n    }\r\n  }\r\n  .react-select__value-container {\r\n    margin: 0;\r\n    padding: 8px 0;\r\n\r\n    @media screen and (min-width: 768px) {\r\n      padding-bottom: 20px;\r\n    }\r\n  }\r\n\r\n  .react-select__input-container {\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n\r\n  .react-select__placeholder {\r\n    color: ${palette.SECONDARY_COLOR};\r\n  }\r\n  .react-select__indicators {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const FormInputWeight = styled.input`\r\n  margin-bottom: 60px;\r\n  font-size: ${palette.TEXT_FONTSIZE};\r\n  font-family: 'Verdana';\r\n  font-weight: 700;\r\n  font-size: 14px;\r\n  letter-spacing: 0.04em;\r\n  color: ${palette.MAIN_COLOR};\r\n  width: 100%;\r\n  padding: 8px 0;\r\n  border-bottom: 1px solid ${palette.LINE_COLOR};\r\n  outline: none;\r\n  transition: border-color 0.3s;\r\n  ::placeholder {\r\n    color: ${palette.SECONDARY_COLOR};\r\n  }\r\n  &:focus {\r\n    border-bottom-color: ${palette.MAIN_COLOR};\r\n  }\r\n  @media screen and (min-width: 768px) {\r\n    width: 106px;\r\n    margin-bottom: 0;\r\n    padding-bottom: 20px;\r\n    text-align: end;\r\n    margin-right: 87px;\r\n  }\r\n  @media screen and (min-width: 1280px) {\r\n    margin-right: 60px;\r\n  }\r\n`;\r\n\r\nexport const FormBtnBase = styled.button`\r\n  font-family: 'Verdana';\r\n  display: inline-block;\r\n  background: ${props => (props.primary ? palette.BUTTON_COLOR : '#fff')};\r\n  color: ${props => (props.primary ? '#fff' : palette.BUTTON_COLOR)};\r\n  box-shadow: ${props =>\r\n    props.primary ? '0 4px 10px rgba(252, 132, 45, .5)' : null};\r\n  border: 2px solid ${palette.BUTTON_COLOR};\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n  width: 176px;\r\n  height: 44px;\r\n  border-radius: 30px;\r\n  transition: background 200ms linear, color 200ms linear;\r\n  cursor: pointer;\r\n  letter-spacing: 0.04em;\r\n  margin-top: 60px;\r\n  :hover {\r\n    background: ${props => (props.primary ? '#fff' : palette.BUTTON_COLOR)};\r\n    color: ${props => (props.primary ? palette.BUTTON_COLOR : '#fff')};\r\n    box-shadow: 0px 4px 10px rgba(252, 132, 45, 0.5);\r\n  }\r\n  :disabled {\r\n    pointer-events: none;\r\n    opacity: 0.7;\r\n  }\r\n`;\r\n\r\nexport const FormBtnMobile = styled(FormBtnBase)`\r\n  display: block;\r\n  @media screen and (min-width: 768px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const FormBtn = styled(FormBtnBase)`\r\n  display: none;\r\n  border-radius: 100%;\r\n  width: 48px;\r\n  height: 48px;\r\n  flex-shrink: 0;\r\n  flex-grow: 0;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin-top: 0;\r\n    padding: 0;\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\nimport { FormBtnBase } from '../../components/DairyProductForm/DairyProductForm.styled';\r\nimport * as palette from '../../variables/Variables';\r\n\r\nimport Datetime from 'react-datetime';\r\n\r\nimport 'react-datetime/css/react-datetime.css';\r\n\r\nexport const CalendarWrap = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 116px;\r\n  height: 20px;\r\n  margin-bottom: 32px;\r\n  @media screen and (min-width: 768px) {\r\n    width: 219px;\r\n    height: 38px;\r\n  }\r\n`;\r\n\r\nexport const PageWrap = styled.div`\r\n  @media screen and (max-width: 1279px) {\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: calc(100vh - 85px);\r\n  }\r\n`;\r\nexport const SidebarWrap = styled.div`\r\n  margin-top: auto;\r\n\r\n  @media screen and (min-width: 1280px) {\r\n    margin-top: 0;\r\n    overflow: hidden;\r\n  }\r\n`;\r\n\r\nexport const Calendar = styled(Datetime)`\r\n  .rdtPicker {\r\n    width: 100px;\r\n    left: -105px;\r\n    top: 30px;\r\n  }\r\n\r\n  .rdtPicker td.rdtToday:before {\r\n    border-bottom: 7px solid ${palette.BUTTON_COLOR};\r\n  }\r\n  .rdtPicker td.rdtActive,\r\n  .rdtPicker td.rdtActive:hover {\r\n    background-color: ${palette.BUTTON_COLOR};\r\n    text-shadow: 0 -1px 0 ${palette.BUTTON_COLOR};\r\n  }\r\n  @media screen and (min-width: 768px) {\r\n    width: 219px;\r\n  }\r\n`;\r\n\r\nexport const CalendarTitle = styled.h1`\r\n  font-family: 'Verdana';\r\n  font-style: normal;\r\n  font-weight: 700;\r\n  font-size: 18px;\r\n  line-height: 22px;\r\n  display: flex;\r\n  align-items: center;\r\n  margin-right: 21px;\r\n  color: ${palette.MAIN_COLOR};\r\n  @media screen and (min-width: 768px) {\r\n    font-size: 34px;\r\n    line-height: 41px;\r\n  }\r\n  @media screen and (min-width: 1280px) {\r\n    font-size: 34px;\r\n    line-height: 41px;\r\n  }\r\n`;\r\n\r\nexport const ListWrap = styled.div`\r\n  display: flex;\r\n  justify-items: start;\r\n  @media screen and (min-width: 768px) {\r\n    padding: 60px 0 0 0;\r\n  }\r\n`;\r\n\r\nexport const AddBtnMobile = styled(FormBtnBase)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin: 60px auto;\r\n  padding: 0;\r\n  border-radius: 100%;\r\n  width: 48px;\r\n  height: 48px;\r\n  flex-shrink: 0;\r\n  flex-grow: 0;\r\n  right: 0;\r\n  left: 0;\r\n`;\r\n","import { useState, Fragment } from 'react';\r\nimport { BsPlusLg } from 'react-icons/bs';\r\nimport {\r\n  StyledForm,\r\n  FormBtnMobile,\r\n  FormBtn,\r\n  FormLabel,\r\n  FormInputWeight,\r\n  FormInputProduct,\r\n} from './DairyProductForm.styled';\r\nimport { getProductByQuery } from '../../services/productsApi';\r\n\r\nconst loadOptions = async (inputValue, callback) => {\r\n  const { products } = await getProductByQuery(inputValue);\r\n  callback(\r\n    products.map(product => {\r\n      const title = product.title.ua;\r\n      return { label: title, value: title };\r\n    })\r\n  );\r\n};\r\n\r\nexport default function DiaryProductForm({ onSubmit, className }) {\r\n  let [selectedProduct, setSelectedProduct] = useState(null);\r\n  let [weight, setWeight] = useState('');\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    const weightNumber = parseInt(weight);\r\n    if (!selectedProduct || isNaN(weightNumber)) return;\r\n    onSubmit({\r\n      product: selectedProduct.value,\r\n      weight: weightNumber,\r\n    });\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setSelectedProduct(null);\r\n    setWeight('');\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <StyledForm onSubmit={handleSubmit} className={className}>\r\n        <FormLabel>\r\n          <FormInputProduct\r\n            classNamePrefix={'react-select'}\r\n            value={selectedProduct}\r\n            isClearable\r\n            backspaceRemovesValue\r\n            escapeClearsValue\r\n            onChange={option => setSelectedProduct(option)}\r\n            loadOptions={loadOptions}\r\n            placeholder=\"Введіть назву продукту\"\r\n            noOptionsMessage={({ selectedProduct }) =>\r\n              !selectedProduct\r\n                ? 'Введіть назву продукту'\r\n                : 'Такого продукту нема'\r\n            }\r\n            loadingMessage={({ selectedProduct }) =>\r\n              !selectedProduct ? 'Шукаю...' : 'Такого продукту нема'\r\n            }\r\n          />\r\n        </FormLabel>\r\n        <FormLabel>\r\n          <FormInputWeight\r\n            type=\"number\"\r\n            min={1}\r\n            name=\"weight\"\r\n            title=\"Введіть кількість вжитого продукту\"\r\n            required\r\n            value={weight}\r\n            onChange={e => setWeight(e.target.value)}\r\n            placeholder=\"Грами\"\r\n          />\r\n        </FormLabel>\r\n        <FormBtnMobile type=\"submit\">Додати</FormBtnMobile>\r\n\r\n        <FormBtn\r\n          type=\"submit\"\r\n          disabled={selectedProduct === null || weight === '' ? true : false}\r\n        >\r\n          <BsPlusLg size={14} />\r\n        </FormBtn>\r\n      </StyledForm>\r\n    </Fragment>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\nimport {\r\n  LINE_COLOR,\r\n  TEXT_FONTSIZE,\r\n  MAIN_COLOR,\r\n} from '../../variables/Variables';\r\n\r\nexport const Product = styled.li`\r\n  display: flex;\r\n  align-items: baseline;\r\n  justify-content: space-between;\r\n  width: 280px;\r\n  margin-bottom: 20px;\r\n  color: ${MAIN_COLOR};\r\n  > button {\r\n    background-color: transparent;\r\n    padding: 0;\r\n    height: 10px;\r\n    width: 10px;\r\n    cursor: pointer;\r\n\r\n    > svg {\r\n      display: block;\r\n      width: 100%;\r\n      height: 100%;\r\n      object-fit: contain;  \r\n    }\r\n    }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    width: 565px;\r\n    & > button {\r\n      height: 12px;\r\n      width: 12px;\r\n    }\r\n  }\r\n`;\r\nexport const ProductInfo = styled.div`\r\n  display: flex;\r\n  > div {\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    border-bottom: 1px solid ${LINE_COLOR};\r\n    padding-bottom: 8px;\r\n    font-size: ${TEXT_FONTSIZE};\r\n    line-height: 17px;\r\n    text-align: start;\r\n    letter-spacing: 0.04em;\r\n    :first-child {\r\n      width: 130px;\r\n    }\r\n    width: 49px;\r\n    :last-child{\r\n      width: 59px;\r\n    }\r\n    :not(:last-child) {\r\n      margin-right: 8px;\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    width: 520px;\r\n    justify-content: space-between;\r\n    > div {\r\n      padding-bottom: 20px;\r\n      margin-right: 0;\r\n      width: 106px;\r\n      margin: 0;\r\n      text-align: end;\r\n      :first-child {\r\n        width: 240px;\r\n        text-align: start;\r\n      }\r\n      :last-child{\r\n        width: 106px;\r\n    }\r\n    }\r\n  }\r\n`;\r\n","import { GrClose } from 'react-icons/gr';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Product, ProductInfo } from './DairyProductListItem.styled';\r\nimport { deleteProduct } from '../../redux/products/productsOperations';\r\n\r\nexport const DairyProductListItem = ({ product, date }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { title, weight_g, calories_kcal, _id } = product;\r\n  return (\r\n    <Product>\r\n      <ProductInfo>\r\n        <div title={title}>{title}</div>\r\n        <div>{weight_g} г</div>\r\n        <div>{calories_kcal} Ккал</div>\r\n      </ProductInfo>\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => dispatch(deleteProduct({ date, _id }))}\r\n      >\r\n        <GrClose />\r\n      </button>\r\n    </Product>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\nimport { SIDEBAR_COLOR } from '../../variables/Variables';\r\nexport const ProductsListThumb = styled.div`\r\n  position: relative;\r\n  @media screen and (min-width: 768px) {\r\n    max-height: 240px;\r\n    :before {\r\n      width: 634px;\r\n      position: absolute;\r\n      bottom: 0;\r\n      height: 50px;\r\n      left: 0;\r\n      right: 0;\r\n      background: linear-gradient(0, #fff, transparent);\r\n      content: '';\r\n    }\r\n  }\r\n`;\r\nexport const ProductsList = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n    max-height: 230px;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    overflow-y: scroll;\r\n   \r\n    width: 640px;\r\n    align-items: flex-start;\r\n    ::-webkit-scrollbar {\r\n      width: 6px;\r\n    }\r\n    ::-webkit-scrollbar-thumb {\r\n      background: rgb(38, 64, 97);\r\n    }\r\n    ::-webkit-scrollbar-track {\r\n      background: ${SIDEBAR_COLOR};\r\n    }\r\n    \r\n  \r\n  }\r\n`;\r\n","import { DairyProductListItem } from '../DairyProductListItem/DairyProductListItem';\r\nimport { ProductsList, ProductsListThumb } from './DairyProductList.styled';\r\nexport const DairyProductList = ({ products, date }) => {\r\n  // якщо продуктів більше шести з'являється скрол\r\n  // useSelector для isLoading\r\n  // useEffect який при виборі дати буде з беку брати список продуктів на вибране число в іншому випадку буде підгружати продукти на поточну дату\r\n  return (\r\n    <>\r\n      {/* {isLoading && \"...підставити компонент лоадер\"} */}\r\n      {products.length !== 0 && (\r\n        <ProductsListThumb>\r\n          <ProductsList>\r\n            {products.map(product => (\r\n              <DairyProductListItem\r\n                key={product._id}\r\n                product={product}\r\n                date={date}\r\n              />\r\n            ))}\r\n          </ProductsList>\r\n        </ProductsListThumb>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import moment from 'moment';\r\nimport { Fragment, useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { IconContext } from 'react-icons';\r\nimport { BsPlusLg } from 'react-icons/bs';\r\nimport { RiCalendar2Line } from 'react-icons/ri';\r\nimport { Container } from '../../Container.styled';\r\nimport {\r\n  CalendarWrap,\r\n  CalendarTitle,\r\n  ListWrap,\r\n  AddBtnMobile,\r\n  Calendar,\r\n  PageWrap,\r\n  SidebarWrap,\r\n} from './DiaryPage.styled';\r\nimport DiaryProductForm from '../../components/DairyProductForm/DairyProductForm';\r\nimport { DairyProductList } from '../../components/DairyProductList/DairyProductList';\r\nimport RightSidebar from '../../components/RightSidebar/RightSidebar';\r\nimport {\r\n  getIsLoading,\r\n  getProductsList,\r\n} from '../../redux/products/productsSelectors';\r\nimport {\r\n  addProduct,\r\n  getProductsListByDate,\r\n} from '../../redux/products/productsOperations';\r\nimport Header from '../../components/Header/Header';\r\nimport MobileSidebar from '../../components/MobileSidebar/MobileSidebar';\r\nimport { useDetectClickOutside } from 'react-detect-click-outside';\r\nimport Loader from '../../components/Loader/Loader';\r\n\r\n\r\nexport default function DiaryPage() {\r\n  const [date, setDate] = useState(new Date());\r\n  const [open, setOpen] = useState(false);\r\n  const isLoading = useSelector(getIsLoading);\r\n  const [mobileAddSelected, setMobileAddSelected] = useState(false);\r\n  const productsList = useSelector(getProductsList);\r\n  const dispatch = useDispatch();\r\n  const today = moment();\r\n  const disableFutureDt = current => {\r\n    return current.isBefore(today);\r\n  };\r\n  \r\n  const formatedDate = moment(date).format('DD.MM.yyyy');\r\n  \r\n  useEffect(() => {\r\n   \r\n    dispatch(getProductsListByDate(date));\r\n  }, [date]);\r\n\r\n  const closeDropdown = () => {\r\n    setOpen(false);\r\n  };\r\n  const ref = useDetectClickOutside({ onTriggered: closeDropdown });\r\n\r\n  const formSubmitHandler = data => {\r\n    const { product, weight } = data;\r\n    dispatch(\r\n      addProduct({\r\n        diary_day: formatedDate,\r\n        meal: { title: product, weight_g: weight },\r\n      })\r\n    );\r\n    setMobileAddSelected(false);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Header />\r\n      <PageWrap>\r\n        <MobileSidebar\r\n          onGoBack={() => setMobileAddSelected(false)}\r\n          mobileAddSelected={mobileAddSelected}\r\n        />\r\n        <Container>\r\n          <CalendarWrap className={mobileAddSelected ? 'hideOnMobile' : ''}>\r\n            <CalendarTitle>{formatedDate}</CalendarTitle>\r\n            <div ref={ref}>\r\n              <Calendar\r\n                open={open}\r\n                value={date}\r\n                isValidDate={disableFutureDt}\r\n                renderInput={() => (\r\n                  <IconContext.Provider\r\n                    value={{\r\n                      style: {\r\n                        color: '#9B9FAA',\r\n                        width: '18px',\r\n                        height: '20px',\r\n                        verticalAlign: 'middle',\r\n                        cursor: 'pointer',\r\n                      },\r\n                    }}\r\n                  >\r\n                    <RiCalendar2Line\r\n                      onClick={() => setOpen(!open)}\r\n                      color=\"#9B9FAA\"\r\n                    />\r\n                  </IconContext.Provider>\r\n                )}\r\n                timeFormat={false}\r\n                onChange={momentObj => {\r\n                  setDate(momentObj.toDate());\r\n                  setOpen(false);\r\n                }}\r\n              />\r\n            </div>\r\n          </CalendarWrap>\r\n          <div>\r\n            <DiaryProductForm\r\n              onSubmit={formSubmitHandler}\r\n              className={mobileAddSelected ? '' : 'hideOnMobile'}\r\n            />\r\n          </div>\r\n\r\n          <ListWrap className={mobileAddSelected ? 'hideOnMobile' : ''}>\r\n            {isLoading ? (\r\n              <Loader />\r\n            ) : (\r\n              <DairyProductList products={productsList} date={date} />\r\n            )}\r\n          </ListWrap>\r\n          {!mobileAddSelected && (\r\n            <AddBtnMobile\r\n              className={'showOnMobile'}\r\n              onClick={() => setMobileAddSelected(true)}\r\n            >\r\n              <BsPlusLg size={14} />\r\n            </AddBtnMobile>\r\n          )}\r\n        </Container>\r\n        <SidebarWrap className={mobileAddSelected ? 'hideOnMobile' : ''}>\r\n          <RightSidebar date={formatedDate} />\r\n        </SidebarWrap>\r\n      </PageWrap>\r\n    </Fragment>\r\n  );\r\n}\r\n","const product_dictionary = {\r\n    \"алкогольные напитки\": {\r\n        \"ua\": \"алкогольні напої\",\r\n        \"en\": \"alcoholic drinks\"\r\n    },\r\n    \"безалкогольные напитки\": {\r\n        \"ua\": \"безалкогольні напої\",\r\n        \"en\": \"soft drinks\"\r\n    },\r\n    \"грибы\": {\r\n        \"ua\": \"гриби\",\r\n        \"en\": \"mushrooms\"\r\n    },\r\n    \"зерновые\": {\r\n        \"ua\": \"зернові\",\r\n        \"en\": \"cereals\"\r\n    },\r\n    \"колбаса\": {\r\n        \"ua\": \"ковбаса\",\r\n        \"en\": \"sausage\"\r\n    },\r\n    \"кунжут\": {\r\n        \"ua\": \"кунжут\",\r\n        \"en\": \"sesame\"\r\n    },\r\n    \"мак\": {\r\n        \"ua\": \"мак\",\r\n        \"en\": \"poppy\"\r\n    },\r\n    \"молочные\": {\r\n        \"ua\": \"молочні\",\r\n        \"en\": \"dairy products\"\r\n    },\r\n    \"масла и жиры\": {\r\n        \"ua\": \"олії та жири\",\r\n        \"en\": \"oils and fats\"\r\n    },\r\n    \"мучные\": {\r\n        \"ua\": \"борошняні\",\r\n        \"en\": \"flour products\"\r\n    },\r\n    \"мясо\": {\r\n        \"ua\": \"м'ясо\",\r\n        \"en\": \"meat\"\r\n    },\r\n    \"орехи\": {\r\n        \"ua\": \"горіхи\",\r\n        \"en\": \"nuts\"\r\n    },\r\n    \"овощи и зелень\": {\r\n        \"ua\": \"овочі та зелень\",\r\n        \"en\": \"vegetables and herbs\"\r\n    },\r\n    \"рыба\": {\r\n        \"ua\": \"риба\",\r\n        \"en\": \"fish\"\r\n    },\r\n    \"семена\": {\r\n        \"ua\": \"насіння\",\r\n        \"en\": \"seeds\"\r\n    },\r\n    \"фрукты\": {\r\n        \"ua\": \"фрукти\",\r\n        \"en\": \"fruit\"\r\n    },\r\n    \"сухофрукты\": {\r\n        \"ua\": \"сухофрукти\",\r\n        \"en\": \"dried fruits\"\r\n    },\r\n    \"ягоды\": {\r\n        \"ua\": \"ягоди\",\r\n        \"en\": \"berries\"\r\n    },\r\n    \"яйца\": {\r\n        \"ua\": \"яйця\",\r\n        \"en\": \"eggs\"\r\n    }\r\n}\r\n\r\nexport default product_dictionary;","export const getProductsList = state => state.products.meal;\r\n\r\nexport const getIsLoading = state => state.products.isLoading;\r\n"],"names":["Container","styled","MobileSidebarWrap","palette","MobileSidebarBtn","MobileSidebar","onGoBack","mobileAddSelected","onClick","size","className","UserInfo","bgImageTablet","bgImageDesktop","Head","CalloriesList","ProductsList","EmptyProducts","getCalories","state","dailyRate","dailyCalories","getProducts","uniqCategories","currentDate","moment","format","RightSidebar","date","products","useSelector","dailyNormCalories","productsList","getProductsList","isLoading","getIsLoading","totalDayCalories","reduce","total","x","calories_kcal","left","leftCalories","norm_persent","toFixed","Loader","length","map","product","index","Fragment","translate","product_dictionary","dictionary","Object","entries","key","value","ua","StyledForm","FormLabel","FormInputProduct","AsyncSelect","FormInputWeight","FormBtnBase","props","primary","FormBtnMobile","FormBtn","CalendarWrap","PageWrap","SidebarWrap","Calendar","Datetime","CalendarTitle","ListWrap","AddBtnMobile","loadOptions","inputValue","callback","getProductByQuery","title","label","DiaryProductForm","onSubmit","useState","selectedProduct","setSelectedProduct","weight","setWeight","reset","event","preventDefault","weightNumber","parseInt","isNaN","classNamePrefix","isClearable","backspaceRemovesValue","escapeClearsValue","onChange","option","placeholder","noOptionsMessage","loadingMessage","type","min","name","required","e","target","disabled","Product","MAIN_COLOR","ProductInfo","LINE_COLOR","TEXT_FONTSIZE","DairyProductListItem","dispatch","useDispatch","weight_g","_id","deleteProduct","ProductsListThumb","SIDEBAR_COLOR","DairyProductList","DiaryPage","Date","setDate","open","setOpen","setMobileAddSelected","today","formatedDate","useEffect","getProductsListByDate","ref","useDetectClickOutside","onTriggered","Header","isValidDate","current","isBefore","renderInput","style","color","width","height","verticalAlign","cursor","timeFormat","momentObj","toDate","data","addProduct","diary_day","meal"],"sourceRoot":""}