{"version":3,"file":"static/js/865.db404a65.chunk.js","mappings":"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","sources":["pages/DairyPage/DiaryPage.styled.js","pages/DairyPage/DiaryPage.js","styles/Container.styled.js"],"sourcesContent":["import styled from 'styled-components';\r\nimport { Button } from '../../styles/Button.styled';\r\nimport Datetime from 'react-datetime';\r\nimport 'react-datetime/css/react-datetime.css';\r\n\r\nexport const CalendarWrap = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 116px;\r\n  height: 20px;\r\n  margin-bottom: 32px;\r\n  @media screen and (min-width: 768px) {\r\n    width: 219px;\r\n    height: 38px;\r\n    margin-bottom: 60px;\r\n  }\r\n`;\r\n\r\nexport const PageWrap = styled.div`\r\n  @media screen and (max-width: 1279px) {\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: calc(100vh - 85px);\r\n  }\r\n`;\r\nexport const SidebarWrap = styled.div`\r\n  margin-top: auto;\r\n\r\n  @media screen and (min-width: 1280px) {\r\n    margin-top: 0;\r\n    overflow: hidden;\r\n  }\r\n`;\r\n\r\nexport const Calendar = styled(Datetime)`\r\n  .rdtPicker {\r\n    width: 100px;\r\n    left: -105px;\r\n    top: 30px;\r\n  }\r\n\r\n  .rdtPicker td.rdtToday:before {\r\n    border-bottom: 7px solid ${props => props.theme.BUTTON_COLOR};\r\n  }\r\n  .rdtPicker td.rdtActive,\r\n  .rdtPicker td.rdtActive:hover {\r\n    background-color: ${props => props.theme.BUTTON_COLOR};\r\n    text-shadow: 0 -1px 0 ${props => props.theme.BUTTON_COLOR};\r\n  }\r\n  @media screen and (min-width: 768px) {\r\n    width: 219px;\r\n  }\r\n`;\r\n\r\nexport const CalendarTitle = styled.h1`\r\n  font-size: 18px;\r\n  margin-right: 21px;\r\n  color: ${props => props.theme.MAIN_COLOR};\r\n  @media screen and (min-width: 768px) {\r\n    font-size: 32px;\r\n  }\r\n`;\r\n\r\nexport const ListWrap = styled.div`\r\n  display: flex;\r\n  justify-items: start;\r\n`;\r\n\r\nexport const AddBtnMobile = styled(Button)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin: 60px auto;\r\n  padding: 0;\r\n  border-radius: 100%;\r\n  width: 48px;\r\n  height: 48px;\r\n  flex-shrink: 0;\r\n  flex-grow: 0;\r\n  right: 0;\r\n  left: 0;\r\n  /* background: transparent; */\r\n`;\r\n","import moment from 'moment';\r\nimport { useState, useEffect } from 'react';\r\nimport { useSearchParams } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { IconContext } from 'react-icons';\r\nimport { BsPlusLg } from 'react-icons/bs';\r\nimport { RiCalendar2Line } from 'react-icons/ri';\r\nimport { Container } from '../../styles/Container.styled';\r\nimport {\r\n  CalendarWrap,\r\n  CalendarTitle,\r\n  ListWrap,\r\n  AddBtnMobile,\r\n  Calendar,\r\n  PageWrap,\r\n  SidebarWrap,\r\n} from './DiaryPage.styled';\r\nimport {DiaryProductForm, DairyProductList, RightSidebar, Header, MobileSidebar, Loader} from '../../components/index';\r\nimport {\r\n  getIsLoading,\r\n  getProductsList,\r\n} from '../../redux/products/productsSelectors';\r\nimport {\r\n  addProduct,\r\n  getProductsListByDate,\r\n} from '../../redux/products/productsOperations';\r\nimport { useDetectClickOutside } from 'react-detect-click-outside';\r\n\r\nexport default function DiaryPage() {\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const [date, setDate] = useState(\r\n    searchParams.has('date')\r\n      ? new Date(parseInt(searchParams.get('date')))\r\n      : new Date()\r\n  );\r\n  const [open, setOpen] = useState(false);\r\n  const isLoading = useSelector(getIsLoading);\r\n  const [mobileAddSelected, setMobileAddSelected] = useState(false);\r\n  const productsList = useSelector(getProductsList);\r\n  const dispatch = useDispatch();\r\n  const today = moment();\r\n  const disableFutureDt = current => {\r\n    return current.isBefore(today);\r\n  };\r\n  const formatedDate = moment(date).format('DD.MM.yyyy');\r\n\r\n  useEffect(() => {\r\n    dispatch(getProductsListByDate(formatedDate));\r\n    setSearchParams({ date: date.valueOf() });\r\n  }, [date]);\r\n\r\n  const closeDropdown = () => {\r\n    setOpen(false);\r\n  };\r\n  const ref = useDetectClickOutside({ onTriggered: closeDropdown });\r\n\r\n  const formSubmitHandler = data => {\r\n    const { product, weight } = data;\r\n    const payload = {\r\n      diary_day: formatedDate,\r\n      meal: { title: product, weight_g: weight },\r\n    };\r\n    dispatch(addProduct(payload));\r\n    setMobileAddSelected(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <PageWrap>\r\n        <MobileSidebar\r\n          onGoBack={() => setMobileAddSelected(false)}\r\n          mobileAddSelected={mobileAddSelected}\r\n        />\r\n        <Container>\r\n          <CalendarWrap className={mobileAddSelected ? 'hideOnMobile' : ''}>\r\n            <CalendarTitle>{formatedDate}</CalendarTitle>\r\n            <div ref={ref}>\r\n              <Calendar\r\n                open={open}\r\n                value={date}\r\n                isValidDate={disableFutureDt}\r\n                renderInput={() => (\r\n                  <IconContext.Provider\r\n                    value={{\r\n                      style: {\r\n                        color: '#9B9FAA',\r\n                        width: '18px',\r\n                        height: '20px',\r\n                        verticalAlign: 'middle',\r\n                        cursor: 'pointer',\r\n                      },\r\n                    }}\r\n                  >\r\n                    <RiCalendar2Line\r\n                      onClick={() => setOpen(!open)}\r\n                      color=\"#9B9FAA\"\r\n                    />\r\n                  </IconContext.Provider>\r\n                )}\r\n                timeFormat={false}\r\n                onChange={momentObj => {\r\n                  setDate(momentObj.toDate());\r\n                  setOpen(false);\r\n                }}\r\n              />\r\n            </div>\r\n          </CalendarWrap>\r\n          <div>\r\n            <DiaryProductForm\r\n              onSubmit={formSubmitHandler}\r\n              className={mobileAddSelected ? '' : 'hideOnMobile'}\r\n            />\r\n          </div>\r\n\r\n          <ListWrap className={mobileAddSelected ? 'hideOnMobile' : ''}>\r\n            {isLoading ? (\r\n              <Loader />\r\n            ) : (\r\n              <DairyProductList products={productsList} date={date} />\r\n            )}\r\n          </ListWrap>\r\n          {!mobileAddSelected && (\r\n            <AddBtnMobile\r\n              primary\r\n              className={'showOnMobile'}\r\n              onClick={() => setMobileAddSelected(true)}\r\n            >\r\n              <BsPlusLg size={14} />\r\n            </AddBtnMobile>\r\n          )}\r\n        </Container>\r\n        <SidebarWrap className={mobileAddSelected ? 'hideOnMobile' : ''}>\r\n          <RightSidebar date={formatedDate} />\r\n        </SidebarWrap>\r\n      </PageWrap>\r\n    </>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  @media screen and (min-width: 320px) {\r\n    padding: 20px;\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    padding: 80px 32px 55px 32px;\r\n  }\r\n\r\n  @media screen and (min-width: 1280px) {\r\n    padding: 7% 16px 0 16px;\r\n  }\r\n`;\r\n"],"names":["CalendarWrap","styled","PageWrap","SidebarWrap","Calendar","Datetime","props","theme","BUTTON_COLOR","CalendarTitle","MAIN_COLOR","ListWrap","AddBtnMobile","Button","DiaryPage","useSearchParams","searchParams","setSearchParams","useState","has","Date","parseInt","get","date","setDate","open","setOpen","isLoading","useSelector","getIsLoading","mobileAddSelected","setMobileAddSelected","productsList","getProductsList","dispatch","useDispatch","today","moment","formatedDate","format","useEffect","getProductsListByDate","valueOf","ref","useDetectClickOutside","onTriggered","onGoBack","className","value","isValidDate","current","isBefore","renderInput","style","color","width","height","verticalAlign","cursor","onClick","timeFormat","onChange","momentObj","toDate","onSubmit","data","product","weight","payload","diary_day","meal","title","weight_g","addProduct","products","primary","size","Container"],"sourceRoot":""}