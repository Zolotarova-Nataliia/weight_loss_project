{"version":3,"file":"static/js/935.5274f2d0.chunk.js","mappings":"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","sources":["Container.styled.js","components/RegistrationForm/RegistrationForm.styled.js","components/LoginForm/LoginForm.js","pages/LoginPage.js","validators/authValidation.js"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  @media screen and (min-width: 320px) {\r\n    padding: 20px;\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    padding: 80px 32px 55px 32px;\r\n  }\r\n\r\n  @media screen and (min-width: 1280px) {\r\n    padding: 140px 16px 0 16px;\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\nimport { NavLink } from 'react-router-dom';\r\nimport * as palette from '../../variables/Variables';\r\nimport { Button } from '../../Button.styled';\r\nimport { Container } from '../../Container.styled';\r\nimport desctop from '../../images/desktop/desctop_min.png';\r\nimport tablet from '../../images/tablet/bg-2-tablet.png';\r\nimport RemoveRedEyeOutlinedIcon from '@mui/icons-material/RemoveRedEyeOutlined';\r\nimport VisibilityOffOutlinedIcon from '@mui/icons-material/VisibilityOffOutlined';\r\n\r\nexport const WrapperLoginPage = styled(Container)`\r\n  @media screen and (min-width: 320px) {\r\n    padding-top: 40px;\r\n    padding-bottom: 175px;\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    padding-top: 160px;\r\n    padding-bottom: 250px;\r\n  }\r\n\r\n  @media screen and (min-width: 1280px) {\r\n    padding-top: 160px;\r\n    padding-bottom: 240px;\r\n  }\r\n`;\r\n\r\nexport const WrapperRegisterPage = styled(Container)`\r\n  @media screen and (min-width: 320px) {\r\n    padding-top: 40px;\r\n    padding-bottom: 100px;\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    padding-top: 160px;\r\n    padding-bottom: 200px;\r\n  }\r\n\r\n  @media screen and (min-width: 1280px) {\r\n    padding-top: 160px;\r\n    padding-bottom: 180px;\r\n  }\r\n`;\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    align-items: flex-start;\r\n  }\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n  font-family: 'GothamPro';\r\n  font-weight: 700;\r\n  font-size: ${palette.TEXT_FONTSIZE};\r\n  line-height: 13px;\r\n  letter-spacing: 0.04em;\r\n  text-transform: uppercase;\r\n  margin-bottom: 60px;\r\n  color: ${palette.BUTTON_COLOR};\r\n`;\r\n\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  align-items: flex-start;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  &:not(:first-child) {\r\n    margin-top: 20px;\r\n  }\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  border-bottom: 1px solid #e0e0e0;\r\n  width: 280px;\r\n  height: 40px;\r\n  padding-bottom: 20px;\r\n  font-family: 'Verdana';\r\n  font-weight: 700;\r\n  font-size: ${palette.TEXT_FONTSIZE};\r\n  line-height: 17px;\r\n  letter-spacing: 0.04em;\r\n  color: ${palette.MAIN_COLOR};\r\n  border-bottom: 1px solid ${palette.LINE_COLOR};\r\n  transition: border-color 0.3s;\r\n\r\n  ::placeholder {\r\n    color: ${palette.SECONDARY_COLOR};\r\n  }\r\n\r\n  &:focus {\r\n    border-bottom-color: ${palette.MAIN_COLOR};\r\n  }\r\n\r\n  &.active {\r\n    color: ${palette.MAIN_COLOR};\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    width: 240px;\r\n  }\r\n`;\r\n\r\nexport const ButtonWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  margin-top: 40px;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    flex-direction: row;\r\n  }\r\n`;\r\n\r\nexport const AuthButton = styled(Button)`\r\n  width: 182px;\r\n\r\n  &:not(:last-child) {\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    &:not(:last-child) {\r\n      margin-bottom: 0;\r\n      margin-right: 32px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const LinkButton = styled(NavLink)`\r\n  display: inline-block;\r\n  text-align: center;\r\n  background: ${props => (props.primary ? palette.BUTTON_COLOR : '#fff')};\r\n  color: ${props => (props.primary ? '#fff' : palette.BUTTON_COLOR)};\r\n  box-shadow: ${props =>\r\n    props.primary ? '0 4px 10px rgba(252, 132, 45, .5)' : null};\r\n  border: 2px solid #fc842d;\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n  width: 182px;\r\n  padding: 13px 25px;\r\n  border-radius: 30px;\r\n  transition: background 200ms linear, color 200ms linear;\r\n  cursor: pointer;\r\n\r\n  :hover {\r\n    background: ${props => (props.primary ? '#fff' : palette.BUTTON_COLOR)};\r\n    color: ${props => (props.primary ? palette.BUTTON_COLOR : '#fff')};\r\n  }\r\n\r\n  :disabled {\r\n    pointer-events: none;\r\n    opacity: 0.7;\r\n  }\r\n`;\r\n\r\nexport const Text = styled.span`\r\n  color: #e10000;\r\n  font-size: 0.77em;\r\n  margin-top: 5px;\r\n  position: relative;\r\n`;\r\n\r\nexport const Stub = styled.div`\r\n  height: 20px;\r\n  position: relative;\r\n`;\r\n\r\nexport const BackgroundImage = styled.div`\r\n  display: block;\r\n  position: absolute;\r\n  right: 0;\r\n  z-index: -1;\r\n  width: 100vw;\r\n  height: 100vh;\r\n\r\n  @media screen and (min-width: 768px) and (max-width: 1279px) {\r\n    top: 245;\r\n    background-image: url(${tablet});\r\n    background-repeat: no-repeat;\r\n    background-position: right;\r\n    background-size: contain;\r\n  }\r\n\r\n  @media screen and (min-width: 1280px) {\r\n    top: 0;\r\n    background-image: url(${desctop});\r\n    background-size: contain;\r\n    background-position: right;\r\n    background-repeat: no-repeat;\r\n  }\r\n`;\r\n\r\nexport const ShowPasswIcon = styled(RemoveRedEyeOutlinedIcon)`\r\nposition: absolute;\r\nright: 15px;\r\ncolor: #9B9FAA;\r\ncursor: pointer;\r\n`\r\nexport const HidePasswIcon = styled(VisibilityOffOutlinedIcon)`\r\nposition: absolute;\r\nright: 15px;\r\ncolor: #9B9FAA;\r\ncursor: pointer;\r\n`","import { useDispatch } from 'react-redux';\r\nimport { useState } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport { logIn } from '../../redux/auth/authOperations';\r\nimport {\r\n  emailValidation,\r\n  passwordValidation,\r\n} from '../../validators/authValidation';\r\nimport {\r\n  Wrapper,\r\n  Title,\r\n  Form,\r\n  Label,\r\n  Input,\r\n  ButtonWrapper,\r\n  AuthButton,\r\n  LinkButton,\r\n  Text,\r\n  Stub,\r\n  ShowPasswIcon,\r\n  HidePasswIcon\r\n} from '../RegistrationForm/RegistrationForm.styled';\r\n\r\nconst validationSchema = yup.object({\r\n  email: emailValidation,\r\n  password: passwordValidation,\r\n});\r\n\r\nexport default function LoginForm() {\r\n  const dispatch = useDispatch();\r\n\r\n  const [showPassw, setShowPassw] = useState(false);\r\n  const toggleShowPassw = () => {\r\n        setShowPassw(!showPassw)\r\n    };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: '',\r\n      password: '',\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values, { resetForm }) => {\r\n      dispatch(logIn(values));\r\n\r\n      resetForm();\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Title>Вхід</Title>\r\n      <Form onSubmit={formik.handleSubmit}>\r\n        <Label htmlFor=\"email\"></Label>\r\n        <Input\r\n          placeholder=\"Пошта *\"\r\n          id=\"email\"\r\n          name=\"email\"\r\n          type=\"email\"\r\n          onChange={formik.handleChange}\r\n          value={formik.values.email}\r\n          autoComplete=\"email\"\r\n        />\r\n        {formik.touched.email && Boolean(formik.errors.email) ? (\r\n          <Text>{formik.touched.email && formik.errors.email}</Text>\r\n        ) : (\r\n          <Stub />\r\n        )}\r\n\r\n        <Label htmlFor=\"password\" style={{position: \"relative\"}}>\r\n        <Input\r\n          placeholder=\"Пароль *\"\r\n          id=\"password\"\r\n          name=\"password\"\r\n          type={showPassw ? \"text\" : \"password\"}\r\n          onChange={formik.handleChange}\r\n          value={formik.values.password}\r\n          autoComplete=\"current-password\"\r\n          />\r\n          {showPassw ? <HidePasswIcon onClick={() => { toggleShowPassw() }} /> : <ShowPasswIcon onClick={() => { toggleShowPassw() }} />}\r\n          </Label>\r\n        {formik.touched.password && Boolean(formik.errors.password) ? (\r\n          <Text>{formik.touched.password && formik.errors.password}</Text>\r\n        ) : (\r\n          <Stub />\r\n        )}\r\n\r\n        <ButtonWrapper>\r\n          <AuthButton type=\"submit\">Вхід</AuthButton>\r\n          <LinkButton to={'/registration'}>Зареєструватися </LinkButton>\r\n        </ButtonWrapper>\r\n      </Form>\r\n    </Wrapper>\r\n  );\r\n}\r\n","import LoginForm from '../components/LoginForm';\r\nimport {\r\n  WrapperLoginPage,\r\n  BackgroundImage,\r\n} from '../components/RegistrationForm/RegistrationForm.styled';\r\nimport Header from '../components/Header/Header';\r\n\r\nfunction LoginPage() {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <WrapperLoginPage>\r\n        <BackgroundImage alt=\"backgroundImage\" />\r\n        <LoginForm />\r\n      </WrapperLoginPage>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n","import * as yup from 'yup';\r\n\r\nexport const nameValidation = yup\r\n  .string(`Введіть своє ім'я`)\r\n  .min(3, 'Довжина імені має бути мінімум 3 символи')\r\n  .max(254, 'Надто довго!')\r\n  .required(`Необхідно вказати ім'я`);\r\n\r\nexport const emailValidation = yup\r\n  .string('Введіть адресу електронної пошти')\r\n  .min(3, 'Довжина емейлу має бути мінімум 3 символи')\r\n  .max(254, 'Надто довго!')\r\n  .email(\r\n    `Введіть дійсний емейл, повинен обов'язково містити знак \"@\" і \"крапку\"`\r\n  )\r\n  .required('Необхідно вказати адресу електронної пошти');\r\n\r\nexport const passwordValidation = yup\r\n  .string('Введіть ваш пароль')\r\n  .min(8, 'Довжина пароля повинна бути мінімум 8 символів')\r\n  .max(100, 'Надто довго!')\r\n  .required('Необхідно ввести пароль');\r\n"],"names":["Container","styled","WrapperLoginPage","WrapperRegisterPage","Wrapper","Title","palette","Form","Label","Input","ButtonWrapper","AuthButton","Button","LinkButton","NavLink","props","primary","Text","Stub","BackgroundImage","tablet","desctop","ShowPasswIcon","RemoveRedEyeOutlinedIcon","HidePasswIcon","VisibilityOffOutlinedIcon","validationSchema","yup","email","emailValidation","password","passwordValidation","LoginForm","dispatch","useDispatch","useState","showPassw","setShowPassw","toggleShowPassw","formik","useFormik","initialValues","onSubmit","values","resetForm","logIn","handleSubmit","htmlFor","placeholder","id","name","type","onChange","handleChange","value","autoComplete","touched","Boolean","errors","style","position","onClick","to","Header","alt","nameValidation","min","max","required"],"sourceRoot":""}