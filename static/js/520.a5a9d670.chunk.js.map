{"version":3,"file":"static/js/520.a5a9d670.chunk.js","mappings":"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","sources":["validators/dailyCaloriesFormValidator.js","components/DailyCaloriesForm/DailyCaloriesForm.styled.js","components/DailyCaloriesForm/DailyCaloriesForm.js","helpers/translate.js","pages/PreviewPage/PrewiewPage.styled.js","components/Modal/Modal.styled.jsx","components/Modal/Portal.js","components/DailyCalorieIntake/DailyCalorieIntake.slyled.js","components/DailyCalorieIntake/DailyCalorieIntake.js","components/Modal/Modal.jsx","pages/PreviewPage/PreviewPage.js","product_dictionary.js"],"sourcesContent":["import * as yup from 'yup';\r\n\r\nconst validationSchema = yup.object().shape({\r\n  height: yup\r\n    .number()\r\n    .min(100, 'Ріст має бути від 100 см')\r\n    .max(250, 'Ріст має бути до 250 см')\r\n    .typeError('Ріст має бути числом')\r\n    .required(`Обов'язкове поле`),\r\n  age: yup\r\n    .number()\r\n    .min(18, 'Вік має бути від 18 лет')\r\n    .max(100, 'Вік має бути до 100 лет')\r\n    .typeError('Вік має бути числом')\r\n    .required(`Обов'язкове поле`),\r\n  currentWeight: yup\r\n    .number()\r\n    .min(20, 'Вага має бути від 20 кг')\r\n    .max(500, 'Вага має бути до 500 кг')\r\n    .typeError('Вага має бути числом')\r\n    .required(`Обов'язкове поле`),\r\n  goalWeight: yup\r\n    .number()\r\n    .min(20, 'Вага має бути від 20 кг')\r\n    .max(500, 'Вага має бути до 500 кг')\r\n    .typeError('Вага має бути числом')\r\n    .required(`Обов'язкове поле`)\r\n    .when('currentWeight', (currentWeight, schema) => {\r\n      return schema.test({\r\n        test: goalWeight => !!currentWeight && goalWeight < currentWeight,\r\n        message: 'Бажана вага має бути меншою за поточний',\r\n      });\r\n    }),\r\n  bloodType: yup.number().required(`Обов'язково`),\r\n});\r\n\r\nexport default validationSchema;\r\n","import styled from 'styled-components';\r\nimport { Field } from 'formik';\r\nimport * as palette from '../../variables/Variables';\r\n\r\nconst MainPageContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding-top: 32px;\r\n  margin-left: 10px;\r\n  margin-right: auto;\r\n  width: 280px;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    margin-left: 30px;\r\n    padding-top: 100px;\r\n    width: 545px;\r\n    align-items: start;\r\n  }\r\n\r\n  @media screen and (min-width: 1280px) {\r\n    padding-top: 140px;\r\n  }\r\n`;\r\n\r\nconst FormTitle = styled.h2`\r\n  margin: 0 0 32px;\r\n  font-family: 'Verdana';\r\n  font-weight: 700;\r\n  font-size: ${palette.TITLE_FONTSIZE_MOB};\r\n  line-height: 1.44;\r\n  color: ${palette.MAIN_COLOR};\r\n\r\n  @media screen and (min-width: 768px) {\r\n    font-size: ${palette.TITLE_FONTSIZE};\r\n    line-height: 1.2;\r\n    margin: 0 0 68px;\r\n  }\r\n`;\r\n\r\nconst FormWrapper = styled.div`\r\n  @media screen and (min-width: 768px) {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    margin-top: -32px;\r\n    margin-left: -32px;\r\n  }\r\n`;\r\n\r\nconst InputWrapper = styled.div`\r\n  height: 40px;\r\n  :last-child {\r\n    position: relative;\r\n  }\r\n  @media screen and (max-width: 767px) {\r\n    :not(:last-child) {\r\n      margin-bottom: 32px;\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    flex-basis: calc((100% - 64px) / 2);\r\n    margin-top: 32px;\r\n    margin-left: 32px;\r\n\r\n    :first-child {\r\n      order: 1;\r\n    }\r\n    :nth-child(2) {\r\n      order: 3;\r\n    }\r\n    :nth-child(3) {\r\n      order: 5;\r\n    }\r\n    :nth-child(4) {\r\n      order: 2;\r\n    }\r\n    :nth-child(5) {\r\n      order: 4;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Input = styled(Field)`\r\n  padding: 0;\r\n  width: 240px;\r\n  height: 40px;\r\n  border: none;\r\n  border-bottom: 1px solid ${palette.LINE_COLOR};\r\n\r\n  font-family: Verdana, Geneva, Tahoma, sans-serif;\r\n  font-size: ${palette.TEXT_FONTSIZE};\r\n  font-weight: 700;\r\n  line-height: 1.21;\r\n  color: ${palette.MAIN_COLOR};\r\n  background-color: rgba(117, 190, 218, 0);\r\n\r\n  ::placeholder {\r\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\r\n    font-weight: 700;\r\n    font-size: ${palette.TEXT_FONTSIZE};\r\n    line-height: 1.21;\r\n    color: ${palette.SECONDARY_COLOR};\r\n  }\r\n\r\n  :hover,\r\n  :focus {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nconst ErrorDescr = styled.p`\r\n  font-size: ${palette.TEXT_FONTSIZE};\r\n  color: #ec2a2a;\r\n  margin: 4px 0 0;\r\n`;\r\n\r\nconst LabelRadioBoxes = styled.div`\r\n  height: 40px;\r\n  display: flex;\r\n  align-items: center;\r\n  font-family: Verdana;\r\n  font-style: normal;\r\n  font-weight: 700;\r\n  font-size: ${palette.TEXT_FONTSIZE};\r\n  line-height: 1.21;\r\n  color: ${palette.SECONDARY_COLOR};\r\n\r\n  @media screen and (min-width: 768px) {\r\n    border-bottom: 1px solid ${palette.LINE_COLOR};\r\n  }\r\n`;\r\n\r\nconst RadioFieldWrapper = styled.div`\r\n  position: absolute;\r\n  top: 30px;\r\n  left: -5px;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    top: 40px;\r\n  }\r\n`;\r\n\r\nconst RadioField = styled(Field)`\r\n  appearance: none;\r\n  display: inline-block;\r\n  position: relative;\r\n  top: 4px;\r\n  color: ${palette.LINE_COLOR};\r\n  height: 18px;\r\n  width: 18px;\r\n  border: 1px solid ${palette.SECONDARY_COLOR};\r\n  border-radius: 10px;\r\n  cursor: pointer;\r\n  outline: none;\r\n\r\n  &:checked::before {\r\n    content: '';\r\n    position: absolute;\r\n    width: 10px;\r\n    height: 10px;\r\n    background: ${palette.BUTTON_COLOR};\r\n\r\n    border-radius: 100%;\r\n    left: 3px;\r\n    top: 3px;\r\n  }\r\n`;\r\n\r\nconst LabelRadioInputs = styled.label`\r\n  margin-left: 8px;\r\n\r\n  font-family: Verdana;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  font-size: ${palette.TEXT_FONTSIZE};\r\n  line-height: 1.21;\r\n  color: ${palette.SECONDARY_COLOR};\r\n\r\n  &:not(:last-of-type) {\r\n    margin-right: 24px;\r\n  }\r\n\r\n  ${RadioField}:checked + & {\r\n    color: orange;\r\n  }\r\n`;\r\n\r\nconst SubmitButton = styled.button`\r\n  margin-top: 65px;\r\n  display: block;\r\n  padding: 0;\r\n  width: 210px;\r\n  height: 44px;\r\n  font-family: Verdana;\r\n  font-weight: 700;\r\n  font-size: ${palette.TEXT_FONTSIZE};\r\n  line-height: 1.21;\r\n  letter-spacing: 0.04em;\r\n  color: ${palette.TEXT_COLOR};\r\n  background: ${palette.BUTTON_COLOR};\r\n  box-shadow: 0 4px 10px rgb(252 132 45 / 50%);\r\n  border: 2px solid ${palette.BUTTON_COLOR};\r\n  border-radius: 30px;\r\n  cursor: pointer;\r\n  transition: color 250ms ease-in;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  @media screen and (min-width: 768px) {\r\n    margin-top: 60px;\r\n    margin-left: 0;\r\n    margin-right: 0;\r\n  }\r\n\r\n  @media screen and (min-width: 1280px) {\r\n    margin-left: auto;\r\n  }\r\n\r\n  :disabled {\r\n    background: #edb084;\r\n    pointer-events: none;\r\n    border: none;\r\n  }\r\n\r\n  :hover {\r\n    background: #ea7827;\r\n  }\r\n`;\r\n\r\nexport {\r\n  MainPageContainer,\r\n  FormWrapper,\r\n  FormTitle,\r\n  InputWrapper,\r\n  Input,\r\n  ErrorDescr,\r\n  LabelRadioBoxes,\r\n  LabelRadioInputs,\r\n  RadioFieldWrapper,\r\n  RadioField,\r\n  SubmitButton,\r\n};\r\n","import React from 'react';\r\nimport { Formik, Form } from 'formik';\r\nimport validationSchema from '../../validators/dailyCaloriesFormValidator';\r\nimport {\r\n  MainPageContainer,\r\n  FormWrapper,\r\n  FormTitle,\r\n  InputWrapper,\r\n  Input,\r\n  ErrorDescr,\r\n  LabelRadioBoxes,\r\n  LabelRadioInputs,\r\n  RadioFieldWrapper,\r\n  RadioField,\r\n  SubmitButton,\r\n} from './DailyCaloriesForm.styled';\r\nimport { dailyRateOperations } from '../../redux/dailyRate';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getIsLoggedIn } from '../../redux/auth/authSelectors';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst DailyCaloriesForm = ({ onOpen, getData }) => {\r\n  const initialValues = {\r\n    height: '',\r\n    age: '',\r\n    currentWeight: '',\r\n    goalWeight: '',\r\n    bloodType: '1',\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const isLoggedIn = useSelector(getIsLoggedIn);\r\n\r\n  const handleSubmit = (values, { resetForm }) => {\r\n    try {\r\n      if (isLoggedIn) {\r\n        dispatch(dailyRateOperations.fetchDailyRateAuthorized(values));\r\n        navigate('/diary');\r\n      } else {\r\n        getData(values);\r\n        onOpen();\r\n      }\r\n    } catch (error) {\r\n      toast.error('Помилка серверу, спробуйте пізніше!');\r\n    } finally {\r\n      resetForm();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <MainPageContainer>\r\n      <FormTitle>Порахуй свою денну норму калорій прямо зараз</FormTitle>\r\n\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={validationSchema}\r\n        onSubmit={handleSubmit}\r\n        validateOnBlur\r\n      >\r\n        {({ errors, touched, isValid, dirty }) => (\r\n          <Form>\r\n            <FormWrapper>\r\n              <InputWrapper>\r\n                <Input name=\"height\" placeholder=\"Зріст *\" />\r\n                {touched.height && errors.height && (\r\n                  <ErrorDescr>{errors.height}</ErrorDescr>\r\n                )}\r\n              </InputWrapper>\r\n\r\n              <InputWrapper>\r\n                <Input id=\"age\" name=\"age\" placeholder=\"Вік *\" />\r\n                {touched.age && errors.age && (\r\n                  <ErrorDescr>{errors.age}</ErrorDescr>\r\n                )}\r\n              </InputWrapper>\r\n\r\n              <InputWrapper>\r\n                <Input\r\n                  id=\"currentWeight\"\r\n                  name=\"currentWeight\"\r\n                  placeholder=\"Поточна вага *\"\r\n                />\r\n                {touched.currentWeight && errors.currentWeight && (\r\n                  <ErrorDescr>{errors.currentWeight}</ErrorDescr>\r\n                )}\r\n              </InputWrapper>\r\n\r\n              <InputWrapper>\r\n                <Input\r\n                  id=\"goalWeight\"\r\n                  name=\"goalWeight\"\r\n                  placeholder=\"Бажана вага *\"\r\n                />\r\n                {touched.goalWeight && errors.goalWeight && (\r\n                  <ErrorDescr>{errors.goalWeight}</ErrorDescr>\r\n                )}\r\n              </InputWrapper>\r\n\r\n              <InputWrapper>\r\n                <LabelRadioBoxes id=\"blood-group\">\r\n                  Група крові *\r\n                </LabelRadioBoxes>\r\n                <RadioFieldWrapper role=\"group\" aria-labelledby=\"blood-group\">\r\n                  <RadioField\r\n                    type=\"radio\"\r\n                    id=\"bloodType1\"\r\n                    name=\"bloodType\"\r\n                    value=\"1\"\r\n                    checked\r\n                  />\r\n                  <LabelRadioInputs htmlFor=\"bloodType1\">1</LabelRadioInputs>\r\n\r\n                  <RadioField\r\n                    type=\"radio\"\r\n                    id=\"bloodType2\"\r\n                    name=\"bloodType\"\r\n                    value=\"2\"\r\n                  />\r\n                  <LabelRadioInputs htmlFor=\"bloodType2\">2</LabelRadioInputs>\r\n\r\n                  <RadioField\r\n                    type=\"radio\"\r\n                    id=\"bloodType3\"\r\n                    name=\"bloodType\"\r\n                    value=\"3\"\r\n                  />\r\n                  <LabelRadioInputs htmlFor=\"bloodType3\">3</LabelRadioInputs>\r\n\r\n                  <RadioField\r\n                    type=\"radio\"\r\n                    id=\"bloodType4\"\r\n                    name=\"bloodType\"\r\n                    value=\"4\"\r\n                  />\r\n                  <LabelRadioInputs htmlFor=\"bloodType4\">4</LabelRadioInputs>\r\n                </RadioFieldWrapper>\r\n              </InputWrapper>\r\n            </FormWrapper>\r\n            <SubmitButton type=\"submit\" disabled={!isValid || !dirty}>\r\n              Почати худнути\r\n            </SubmitButton>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </MainPageContainer>\r\n  );\r\n};\r\n\r\nexport default DailyCaloriesForm;\r\n","export function translate(dictionary, product) {\r\n    for (const [key, value] of Object.entries(dictionary)) {\r\n        if(product === key){\r\n            return value.ua;\r\n        }\r\n    }\r\n}","import styled from 'styled-components';\r\nimport bgImageForTablet from '../../images/tablet/bg-tablet.png';\r\nimport bgImageForDesctop from '../../images/desktop/desctop_min.png';\r\n\r\nconst Main = styled.main`\r\n  @media screen and (min-width: 320px) and (max-width: 1279px) {\r\n    position: relative;\r\n  }\r\n`;\r\n\r\nconst BgBoxTablet = styled.div`\r\n  display: none;\r\n  @media screen and (min-width: 768px) and (max-width: 1279px) {\r\n    display: block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    background-image: url(${bgImageForTablet});\r\n    background-repeat: no-repeat;\r\n    background-position: right bottom;\r\n    height: 100vh;\r\n    width: 100vw;\r\n    z-index: -1;\r\n  }\r\n`;\r\n\r\nconst BgBoxDesctop = styled.div`\r\n  @media screen and (max-width: 1279px) {\r\n    display: none;\r\n  }\r\n  @media screen and (min-width: 1280px) {\r\n    display: block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    background-image: url(${bgImageForDesctop});\r\n    background-repeat: no-repeat;\r\n    background-size: contain;\r\n    background-position: right;\r\n    height: 100vh;\r\n    width: 100vw;\r\n    z-index: -1;\r\n  }\r\n`;\r\n\r\nexport { Main, BgBoxTablet, BgBoxDesctop };\r\n","import styled from \"styled-components\";\r\nimport * as palette from '../../variables/Variables';\r\nimport { GrClose } from \"react-icons/gr\";\r\nimport { IoMdReturnLeft } from 'react-icons/io';\r\n\r\nexport const Overlay = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: white;\r\n  z-index: 1200;\r\n  @media screen and (min-width: 768px) {\r\n    background-color: rgba(33, 33, 33, 0.12);\r\n  }\r\n`\r\n\r\nexport const ModalContainer = styled.div`\r\nposition: relative;\r\nbackground-color: white;\r\n@media screen and (min-width: 120px) and (max-width: 767px) {\r\n    max-width: 350px;\r\n    border: 1px solid ${palette.LINE_COLOR};\r\n}\r\n@media screen and (min-width: 768px) {\r\n    max-width: 672px;\r\n  }\r\n`\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding-right: 20px;\r\n  padding-left: 20px;\r\n  padding-bottom: 120px;\r\n  @media screen and (min-width: 768px) {\r\n    padding: 72px 130px 72px 130px;\r\n  }\r\n  @media screen and (min-width: 1280px) {\r\n    padding-top: 64px;\r\n  }\r\n`\r\nexport const MobileBloc = styled.div`\r\n@media screen and (min-width: 768px) {\r\n    display: none;\r\n  }\r\n`\r\nexport const ExitMobile = styled.div`\r\n  width: 100%;\r\n  height: 40px;\r\n  background: #eff1f3;\r\n  margin-bottom: 40px;\r\n`\r\nexport const CloseBtn = styled(GrClose)`\r\n  position: absolute;\r\n  right: 13px;\r\n  top: 20px;\r\n  width: 12px;\r\n  height: 12px;\r\n  cursor: pointer;\r\n  transition: 0.5s;\r\n  @media screen and (min-width: 320px) and (max-width: 767px) {\r\n    display: none;\r\n}\r\n :hover {\r\n      transform: scale(1.3);  \r\n    }\r\n`\r\nexport const ExitMobBtn = styled(IoMdReturnLeft)`\r\nmargin-top: 12px;\r\nmargin-left: 15px;\r\ncursor: pointer;\r\n`\r\n","import { Component } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nconst modalRoot = document.querySelector(\"#modal-root\");\r\n\r\nclass Portal extends Component {\r\n    componentDidMount() {\r\n    window.addEventListener(\"keydown\", this.handleKeyDown);\r\n    }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\r\n    }\r\n    \r\n    render() {\r\n        return createPortal(\r\n            <>\r\n                {this.props.children}\r\n            </>, modalRoot\r\n        );\r\n    }\r\n}\r\n\r\nexport default Portal;","import styled from 'styled-components';\r\nimport * as palette from '../../variables/Variables';\r\nimport { Button } from '../../Button.styled';\r\n\r\nexport const CalorieIntake = styled.div`\r\n  color: ${palette.MAIN_COLOR};\r\n  line-height: 1.2;\r\n  max-width: 410px;\r\n`;\r\n\r\nexport const Head = styled.h2`\r\n  font-size: ${palette.SUBTITLE_FONTSIZE_MOB};\r\n  margin-bottom: 20px;\r\n  text-align: center;\r\n  color: ${palette.MAIN_COLOR};\r\n  @media screen and (min-width: 768px) {\r\n    font-size: ${palette.SUBTITLE_FONTSIZE_DESC}\r\n  }\r\n`;\r\n\r\nexport const DailyNorm = styled.div`\r\n  font-size: 16px;\r\n  font-weight: 700;\r\n  margin-bottom: 30px;\r\n  text-align: center;\r\n  letter-spacing: 0.04em;\r\n  color: ${palette.INTAKE_DAILY_COLOR};\r\n`;\r\n\r\nexport const DailyNormValue = styled.span`\r\n  font-size: 48px;\r\n`;\r\n\r\nexport const HeadProducts = styled.h3`\r\n  font-size: 14px;\r\n  padding-top: 12px;\r\n  border-top: 1px solid ${palette.LINE_COLOR};\r\n  letter-spacing: 0.04em;\r\n`;\r\n\r\nexport const ProductsList = styled.ol`\r\n  font-size: 14px;\r\n  list-style: auto;\r\n  padding: 0 0 0 23px;\r\n  color: ${palette.SECONDARY_COLOR};\r\n  letter-spacing: 0.04em;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n  margin-top: 20px;\r\n  margin-bottom: 40px;\r\n  max-height: 125px;\r\n  overflow: auto;\r\n  ::-webkit-scrollbar {\r\n    width: 6px;\r\n  }\r\n  ::-webkit-scrollbar-track {\r\n    background: ${palette.SIDEBAR_COLOR}; \r\n  }  \r\n  ::-webkit-scrollbar-thumb {\r\n    background: ${palette.INTAKE_DAILY_COLOR}; \r\n  }\r\n`;\r\n\r\nexport const EmptyProducts = styled.div`\r\n  color: ${palette.SECONDARY_COLOR};\r\n  margin: 20px 0 40px;\r\n`;\r\n\r\nexport const ButtonStart = styled(Button)`\r\n  margin: 0 auto;\r\n  display: block;\r\n  width: 210px;\r\n`;","import { NavLink } from 'react-router-dom';\r\nimport { translate } from '../../helpers/translate';\r\nimport product_dictionary from '../../product_dictionary';\r\nimport {\r\n  CalorieIntake,\r\n  Head,\r\n  DailyNorm,\r\n  DailyNormValue,\r\n  HeadProducts,\r\n  ProductsList,\r\n  EmptyProducts,\r\n  ButtonStart,\r\n} from './DailyCalorieIntake.slyled';\r\n\r\nexport default function DailyCalorieIntake({ dailyRate }) {\r\n  const products = dailyRate.uniqCategories;\r\n  const dailyCalories = dailyRate.dailyCalories;\r\n\r\n  return (\r\n    <CalorieIntake>\r\n      <Head>Ваша рекомендована добова норма споживання калорій становить</Head>\r\n      <DailyNorm>\r\n        <DailyNormValue>{dailyCalories}</DailyNormValue> кКал\r\n      </DailyNorm>\r\n      <HeadProducts>Не рекомендовано вживати</HeadProducts>\r\n      {products.length > 0 ? (\r\n        <ProductsList>\r\n          {products.map((product, index) => {\r\n            return <li key={index}>{translate(product_dictionary, product)}</li>;\r\n          })}\r\n        </ProductsList>\r\n      ) : (\r\n        <EmptyProducts>Тут відображатиметься ваша дієта</EmptyProducts>\r\n      )}\r\n      <NavLink to={'/registration'}>\r\n        <ButtonStart primary>Почати худнути</ButtonStart>\r\n      </NavLink>\r\n    </CalorieIntake>\r\n  );\r\n}\r\n","import {\r\n  Content,\r\n  ModalContainer,\r\n  MobileBloc,\r\n  ExitMobile,\r\n  CloseBtn,\r\n  ExitMobBtn,\r\n  Overlay,\r\n} from './Modal.styled';\r\nimport Header from '../Header/Header';\r\nimport Portal from './Portal';\r\nimport DailyCalorieIntake from '../DailyCalorieIntake/DailyCalorieIntake';\r\n\r\nconst Modal = ({ isOpen, onCancel, dailyRate }) => {\r\n  return (\r\n    <>\r\n      {isOpen && (\r\n        <Portal>\r\n          <Overlay onClick={onCancel}>\r\n            <ModalContainer\r\n              onClick={e => {\r\n                e.stopPropagation();\r\n              }}\r\n            >\r\n              <MobileBloc>\r\n                <Header />\r\n                <ExitMobile>\r\n                  <button type=\"button\" onClick={onCancel}>\r\n                    <ExitMobBtn />\r\n                  </button>\r\n                </ExitMobile>\r\n              </MobileBloc>\r\n              <CloseBtn onClick={onCancel} />\r\n              <Content>\r\n                <DailyCalorieIntake dailyRate={dailyRate} />\r\n              </Content>\r\n            </ModalContainer>\r\n          </Overlay>\r\n        </Portal>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import { React, Fragment } from 'react';\r\nimport DailyCaloriesForm from '../../components/DailyCaloriesForm/DailyCaloriesForm';\r\nimport { Main, BgBoxTablet, BgBoxDesctop } from './PrewiewPage.styled';\r\nimport Header from '../../components/Header/Header';\r\nimport { useEffect, useState } from 'react';\r\nimport Modal from '../../components/Modal/Modal';\r\nimport { fetchDailyRate } from '../../services/dailyRateApi';\r\nimport { toast } from 'react-toastify';\r\n\r\n\r\nconst PreviewPage = () => {\r\n  const [modalShow, setModalShow] = useState(false);\r\n  const [dailyRate, setDailyRate] = useState(null);\r\n\r\n  const handleOpen = () => setModalShow(true);\r\n  const handleClose = () => setModalShow(false);\r\n\r\n  useEffect(() => {\r\n    const close = e => {\r\n      if (e.key === 'Escape') {\r\n        setModalShow(false);\r\n      }\r\n    };\r\n    window.addEventListener('keydown', close);\r\n    return () => window.removeEventListener('keydown', close);\r\n  }, []);\r\n\r\n  const handleFetchDailyRate = async userData => {\r\n    setDailyRate(null);\r\n    try {\r\n      const { data } = await fetchDailyRate(userData);\r\n      setDailyRate(data);\r\n    } catch (error) {\r\n      toast.error('Помилка серверу, спробуйте пізніше');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Header />\r\n      \r\n      <Main>\r\n        <DailyCaloriesForm onOpen={handleOpen} getData={handleFetchDailyRate} />\r\n        <BgBoxTablet />\r\n        <BgBoxDesctop />\r\n        {dailyRate && (\r\n          <Modal\r\n            isOpen={modalShow}\r\n            onCancel={handleClose}\r\n            dailyRate={dailyRate}\r\n          />\r\n        )}\r\n      </Main>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default PreviewPage;\r\n","const product_dictionary = {\r\n    \"алкогольные напитки\": {\r\n        \"ua\": \"алкогольні напої\",\r\n        \"en\": \"alcoholic drinks\"\r\n    },\r\n    \"безалкогольные напитки\": {\r\n        \"ua\": \"безалкогольні напої\",\r\n        \"en\": \"soft drinks\"\r\n    },\r\n    \"грибы\": {\r\n        \"ua\": \"гриби\",\r\n        \"en\": \"mushrooms\"\r\n    },\r\n    \"зерновые\": {\r\n        \"ua\": \"зернові\",\r\n        \"en\": \"cereals\"\r\n    },\r\n    \"колбаса\": {\r\n        \"ua\": \"ковбаса\",\r\n        \"en\": \"sausage\"\r\n    },\r\n    \"кунжут\": {\r\n        \"ua\": \"кунжут\",\r\n        \"en\": \"sesame\"\r\n    },\r\n    \"мак\": {\r\n        \"ua\": \"мак\",\r\n        \"en\": \"poppy\"\r\n    },\r\n    \"молочные\": {\r\n        \"ua\": \"молочні\",\r\n        \"en\": \"dairy products\"\r\n    },\r\n    \"масла и жиры\": {\r\n        \"ua\": \"олії та жири\",\r\n        \"en\": \"oils and fats\"\r\n    },\r\n    \"мучные\": {\r\n        \"ua\": \"борошняні\",\r\n        \"en\": \"flour products\"\r\n    },\r\n    \"мясо\": {\r\n        \"ua\": \"м'ясо\",\r\n        \"en\": \"meat\"\r\n    },\r\n    \"орехи\": {\r\n        \"ua\": \"горіхи\",\r\n        \"en\": \"nuts\"\r\n    },\r\n    \"овощи и зелень\": {\r\n        \"ua\": \"овочі та зелень\",\r\n        \"en\": \"vegetables and herbs\"\r\n    },\r\n    \"рыба\": {\r\n        \"ua\": \"риба\",\r\n        \"en\": \"fish\"\r\n    },\r\n    \"семена\": {\r\n        \"ua\": \"насіння\",\r\n        \"en\": \"seeds\"\r\n    },\r\n    \"фрукты\": {\r\n        \"ua\": \"фрукти\",\r\n        \"en\": \"fruit\"\r\n    },\r\n    \"сухофрукты\": {\r\n        \"ua\": \"сухофрукти\",\r\n        \"en\": \"dried fruits\"\r\n    },\r\n    \"ягоды\": {\r\n        \"ua\": \"ягоди\",\r\n        \"en\": \"berries\"\r\n    },\r\n    \"яйца\": {\r\n        \"ua\": \"яйця\",\r\n        \"en\": \"eggs\"\r\n    }\r\n}\r\n\r\nexport default product_dictionary;"],"names":["yup","shape","height","min","max","typeError","required","age","currentWeight","goalWeight","when","schema","test","message","bloodType","MainPageContainer","styled","FormTitle","palette","FormWrapper","InputWrapper","Input","Field","ErrorDescr","LabelRadioBoxes","RadioFieldWrapper","RadioField","LabelRadioInputs","SubmitButton","onOpen","getData","dispatch","useDispatch","navigate","useNavigate","isLoggedIn","useSelector","getIsLoggedIn","initialValues","validationSchema","onSubmit","values","resetForm","dailyRateOperations","fetchDailyRateAuthorized","error","toast","validateOnBlur","errors","touched","isValid","dirty","name","placeholder","id","role","type","value","checked","htmlFor","disabled","translate","dictionary","product","Object","entries","key","ua","Main","BgBoxTablet","bgImageForTablet","BgBoxDesctop","bgImageForDesctop","Overlay","ModalContainer","Content","MobileBloc","ExitMobile","CloseBtn","GrClose","ExitMobBtn","IoMdReturnLeft","modalRoot","document","querySelector","Portal","window","addEventListener","this","handleKeyDown","removeEventListener","createPortal","props","children","Component","CalorieIntake","Head","DailyNorm","DailyNormValue","HeadProducts","ProductsList","EmptyProducts","ButtonStart","Button","DailyCalorieIntake","dailyRate","products","uniqCategories","dailyCalories","length","map","index","product_dictionary","to","primary","isOpen","onCancel","onClick","e","stopPropagation","Header","useState","modalShow","setModalShow","setDailyRate","useEffect","close","handleFetchDailyRate","userData","fetchDailyRate","data","Fragment","DailyCaloriesForm"],"sourceRoot":""}