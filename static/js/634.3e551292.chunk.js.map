{"version":3,"file":"static/js/634.3e551292.chunk.js","mappings":"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","sources":["validators/dailyCaloriesFormValidator.js","components/DailyCaloriesForm/DailyCaloriesForm.styled.js","components/DailyCaloriesForm/DailyCaloriesForm.js","components/MobileSidebar/MobileSidebar.styled.js","components/MobileSidebar/MobileSidebar.js","components/RightSidebar/RightSidebar.styled.js","redux/dailyRate/dailyRateSelectors.js","components/RightSidebar/RightSidebar.js","helpers/translate.js","pages/CalculatorPage/CalculatorPage.styled.js","pages/CalculatorPage/CalculatorPage.js","product_dictionary.js","redux/products/productsSelectors.js"],"sourcesContent":["import * as yup from 'yup';\r\n\r\nconst validationSchema = yup.object().shape({\r\n  height: yup\r\n    .number()\r\n    .min(100, 'Зріст має бути від 100 см')\r\n    .max(250, 'Зріст має бути до 250 см')\r\n    .typeError('Зріст має бути числом')\r\n    .required(`Обов'язкове поле`),\r\n  age: yup\r\n    .number()\r\n    .min(18, 'Вік має бути від 18 років')\r\n    .max(100, 'Вік має бути до 100 років')\r\n    .typeError('Вік має бути числом')\r\n    .required(`Обов'язкове поле`),\r\n  currentWeight: yup\r\n    .number()\r\n    .min(20, 'Вага має бути від 20 кг')\r\n    .max(500, 'Вага має бути до 500 кг')\r\n    .typeError('Вага має бути числом')\r\n    .required(`Обов'язкове поле`),\r\n  goalWeight: yup\r\n    .number()\r\n    .min(20, 'Вага має бути від 20 кг')\r\n    .max(500, 'Вага має бути до 500 кг')\r\n    .typeError('Вага має бути числом')\r\n    .required(`Обов'язкове поле`)\r\n    .when('currentWeight', (currentWeight, schema) => {\r\n      return schema.test({\r\n        test: goalWeight => !!currentWeight && goalWeight < currentWeight,\r\n        message: 'Бажана вага має бути меншою за поточний',\r\n      });\r\n    }),\r\n  bloodType: yup.number().required(`Обов'язково`),\r\n});\r\n\r\nexport default validationSchema;\r\n","import styled from 'styled-components';\r\nimport { Field } from 'formik';\r\nimport * as palette from '../../variables/Variables';\r\n\r\nconst MainPageContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding-top: 32px;\r\n  margin-left: 20px;\r\n  margin-right: auto;\r\n  width: 280px;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    margin-left: 32px;\r\n    padding-top: 100px;\r\n    width: 545px;\r\n    align-items: start;\r\n  }\r\n\r\n  @media screen and (min-width: 1280px) {\r\n    padding-top: 7%;\r\n    margin-left: 16px;\r\n  }\r\n`;\r\n\r\nconst FormTitle = styled.h2`\r\n  margin: 0 0 32px;\r\n  font-family: 'Verdana';\r\n  font-weight: 700;\r\n  font-size: ${palette.TITLE_FONTSIZE_MOB};\r\n  line-height: 1.44;\r\n  color: ${props => props.theme.MAIN_COLOR};\r\n\r\n  @media screen and (min-width: 768px) {\r\n    font-size: ${palette.TITLE_FONTSIZE};\r\n    line-height: 1.2;\r\n    margin: 0 0 68px;\r\n  }\r\n`;\r\n\r\nconst FormWrapper = styled.div`\r\n  @media screen and (min-width: 768px) {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    margin-top: -32px;\r\n    margin-left: -32px;\r\n  }\r\n`;\r\n\r\nconst InputWrapper = styled.div`\r\n  height: 40px;\r\n  :last-child {\r\n    position: relative;\r\n  }\r\n  @media screen and (max-width: 767px) {\r\n    :not(:last-child) {\r\n      margin-bottom: 32px;\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    flex-basis: calc((100% - 64px) / 2);\r\n    margin-top: 32px;\r\n    margin-left: 32px;\r\n\r\n    :first-child {\r\n      order: 1;\r\n    }\r\n    :nth-child(2) {\r\n      order: 3;\r\n    }\r\n    :nth-child(3) {\r\n      order: 5;\r\n    }\r\n    :nth-child(4) {\r\n      order: 2;\r\n    }\r\n    :nth-child(5) {\r\n      order: 4;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Input = styled(Field)`\r\n  padding: 0;\r\n  width: 240px;\r\n  height: 40px;\r\n  border: none;\r\n  border-bottom: 1px solid ${props => props.theme.LINE_COLOR};\r\n\r\n  font-family: Verdana, Geneva, Tahoma, sans-serif;\r\n  font-size: ${palette.TEXT_FONTSIZE};\r\n  font-weight: 700;\r\n  line-height: 1.21;\r\n  color: ${props => props.theme.MAIN_COLOR};\r\n  background-color: rgba(117, 190, 218, 0);\r\n\r\n  ::placeholder {\r\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\r\n    font-weight: 700;\r\n    font-size: ${palette.TEXT_FONTSIZE};\r\n    line-height: 1.21;\r\n    color: ${props => props.theme.SECONDARY_COLOR};\r\n  }\r\n\r\n  :hover,\r\n  :focus {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nconst ErrorDescr = styled.p`\r\n  font-size: ${palette.TEXT_FONTSIZE};\r\n  color: #ec2a2a;\r\n  margin: 4px 0 0;\r\n`;\r\n\r\nconst LabelRadioBoxes = styled.div`\r\n  height: 40px;\r\n  width: 240px;\r\n  display: flex;\r\n  align-items: center;\r\n  font-family: Verdana;\r\n  font-style: normal;\r\n  font-weight: 700;\r\n  font-size: ${palette.TEXT_FONTSIZE};\r\n  line-height: 1.21;\r\n  color: ${props => props.theme.SECONDARY_COLOR};\r\n\r\n  @media screen and (min-width: 768px) {\r\n    border-bottom: 1px solid ${props => props.theme.LINE_COLOR};\r\n  }\r\n`;\r\n\r\nconst RadioFieldWrapper = styled.div`\r\n  position: absolute;\r\n  top: 30px;\r\n  left: -5px;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    top: 40px;\r\n  }\r\n`;\r\n\r\nconst RadioField = styled(Field)`\r\n  appearance: none;\r\n  display: inline-block;\r\n  position: relative;\r\n  top: 4px;\r\n  color: ${props => props.theme.LINE_COLOR};\r\n  height: 18px;\r\n  width: 18px;\r\n  border: 1px solid ${props => props.theme.SECONDARY_COLOR};\r\n  border-radius: 10px;\r\n  cursor: pointer;\r\n  outline: none;\r\n\r\n  &:checked::before {\r\n    content: '';\r\n    position: absolute;\r\n    width: 10px;\r\n    height: 10px;\r\n    background: ${props => props.theme.BUTTON_COLOR};\r\n\r\n    border-radius: 100%;\r\n    left: 3px;\r\n    top: 3px;\r\n  }\r\n`;\r\n\r\nconst LabelRadioInputs = styled.label`\r\n  margin-left: 8px;\r\n\r\n  font-family: Verdana;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  font-size: ${palette.TEXT_FONTSIZE};\r\n  line-height: 1.21;\r\n  color: ${props => props.theme.SECONDARY_COLOR};\r\n\r\n  &:not(:last-of-type) {\r\n    margin-right: 24px;\r\n  }\r\n\r\n  ${RadioField}:checked + & {\r\n    color: orange;\r\n  }\r\n`;\r\n\r\nconst SubmitButton = styled.button`\r\n  margin-top: 65px;\r\n  display: block;\r\n  padding: 0;\r\n  width: 210px;\r\n  height: 44px;\r\n  font-family: Verdana;\r\n  font-weight: 700;\r\n  font-size: ${palette.TEXT_FONTSIZE};\r\n  line-height: 1.21;\r\n  letter-spacing: 0.04em;\r\n  color: ${props => props.theme.TEXT_COLOR};\r\n  background: ${props => props.theme.BUTTON_COLOR};\r\n  box-shadow: 0 4px 10px rgb(252 132 45 / 50%);\r\n  border: 2px solid ${props => props.theme.BUTTON_COLOR};\r\n  border-radius: 30px;\r\n  cursor: pointer;\r\n  transition: color 250ms ease-in;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  @media screen and (min-width: 768px) {\r\n    margin-top: 60px;\r\n    margin-left: 0;\r\n    margin-right: 0;\r\n  }\r\n\r\n  @media screen and (min-width: 1280px) {\r\n    margin-left: auto;\r\n  }\r\n\r\n  :disabled {\r\n    background: #ffa05c;\r\n    box-shadow: none;\r\n    pointer-events: none;\r\n    border: none;\r\n  }\r\n\r\n  :hover {\r\n    background: #ea7827;\r\n  }\r\n`;\r\n\r\nexport {\r\n  MainPageContainer,\r\n  FormWrapper,\r\n  FormTitle,\r\n  InputWrapper,\r\n  Input,\r\n  ErrorDescr,\r\n  LabelRadioBoxes,\r\n  LabelRadioInputs,\r\n  RadioFieldWrapper,\r\n  RadioField,\r\n  SubmitButton,\r\n};\r\n","import React from 'react';\r\nimport { Formik, Form } from 'formik';\r\nimport validationSchema from '../../validators/dailyCaloriesFormValidator';\r\nimport {\r\n  MainPageContainer,\r\n  FormWrapper,\r\n  FormTitle,\r\n  InputWrapper,\r\n  Input,\r\n  ErrorDescr,\r\n  LabelRadioBoxes,\r\n  LabelRadioInputs,\r\n  RadioFieldWrapper,\r\n  RadioField,\r\n  SubmitButton,\r\n} from './DailyCaloriesForm.styled';\r\nimport { dailyRateOperations } from '../../redux/dailyRate';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getIsLoggedIn } from '../../redux/auth/authSelectors';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst DailyCaloriesForm = ({ onOpen, getData }) => {\r\n  const initialValues = {\r\n    height: '',\r\n    age: '',\r\n    currentWeight: '',\r\n    goalWeight: '',\r\n    bloodType: '1',\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const isLoggedIn = useSelector(getIsLoggedIn);\r\n\r\n  const handleSubmit = (values, { resetForm }) => {\r\n    try {\r\n      if (isLoggedIn) {\r\n        dispatch(dailyRateOperations.fetchDailyRateAuthorized(values));\r\n        navigate('/diary');\r\n      } else {\r\n        getData(values);\r\n        onOpen();\r\n      }\r\n    } catch (error) {\r\n      toast.error('Помилка серверу, спробуйте пізніше!');\r\n    } finally {\r\n      resetForm();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <MainPageContainer>\r\n      <FormTitle>Порахуй свою денну норму калорій прямо зараз</FormTitle>\r\n\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={validationSchema}\r\n        onSubmit={handleSubmit}\r\n        validateOnBlur\r\n      >\r\n        {({ errors, touched, isValid, dirty }) => (\r\n          <Form>\r\n            <FormWrapper>\r\n              <InputWrapper>\r\n                <Input name=\"height\" placeholder=\"Зріст *\" />\r\n                {touched.height && errors.height && (\r\n                  <ErrorDescr>{errors.height}</ErrorDescr>\r\n                )}\r\n              </InputWrapper>\r\n\r\n              <InputWrapper>\r\n                <Input id=\"age\" name=\"age\" placeholder=\"Вік *\" />\r\n                {touched.age && errors.age && (\r\n                  <ErrorDescr>{errors.age}</ErrorDescr>\r\n                )}\r\n              </InputWrapper>\r\n\r\n              <InputWrapper>\r\n                <Input\r\n                  id=\"currentWeight\"\r\n                  name=\"currentWeight\"\r\n                  placeholder=\"Поточна вага *\"\r\n                />\r\n                {touched.currentWeight && errors.currentWeight && (\r\n                  <ErrorDescr>{errors.currentWeight}</ErrorDescr>\r\n                )}\r\n              </InputWrapper>\r\n\r\n              <InputWrapper>\r\n                <Input\r\n                  id=\"goalWeight\"\r\n                  name=\"goalWeight\"\r\n                  placeholder=\"Бажана вага *\"\r\n                />\r\n                {touched.goalWeight && errors.goalWeight && (\r\n                  <ErrorDescr>{errors.goalWeight}</ErrorDescr>\r\n                )}\r\n              </InputWrapper>\r\n\r\n              <InputWrapper>\r\n                <LabelRadioBoxes id=\"blood-group\">\r\n                  Група крові *\r\n                </LabelRadioBoxes>\r\n                <RadioFieldWrapper role=\"group\" aria-labelledby=\"blood-group\">\r\n                  <RadioField\r\n                    type=\"radio\"\r\n                    id=\"bloodType1\"\r\n                    name=\"bloodType\"\r\n                    value=\"1\"\r\n                  />\r\n                  <LabelRadioInputs htmlFor=\"bloodType1\">1</LabelRadioInputs>\r\n\r\n                  <RadioField\r\n                    type=\"radio\"\r\n                    id=\"bloodType2\"\r\n                    name=\"bloodType\"\r\n                    value=\"2\"\r\n                  />\r\n                  <LabelRadioInputs htmlFor=\"bloodType2\">2</LabelRadioInputs>\r\n\r\n                  <RadioField\r\n                    type=\"radio\"\r\n                    id=\"bloodType3\"\r\n                    name=\"bloodType\"\r\n                    value=\"3\"\r\n                  />\r\n                  <LabelRadioInputs htmlFor=\"bloodType3\">3</LabelRadioInputs>\r\n\r\n                  <RadioField\r\n                    type=\"radio\"\r\n                    id=\"bloodType4\"\r\n                    name=\"bloodType\"\r\n                    value=\"4\"\r\n                  />\r\n                  <LabelRadioInputs htmlFor=\"bloodType4\">4</LabelRadioInputs>\r\n                </RadioFieldWrapper>\r\n              </InputWrapper>\r\n            </FormWrapper>\r\n            <SubmitButton type=\"submit\" disabled={!isValid || !dirty}>\r\n              Почати худнути\r\n            </SubmitButton>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </MainPageContainer>\r\n  );\r\n};\r\n\r\nexport default DailyCaloriesForm;\r\n","import styled from 'styled-components';\r\n\r\nexport const MobileSidebarWrap = styled.div`\r\n  width: 100%;\r\n  height: 40px;\r\n  background-color: ${props => props.theme.SIDEBAR_COLOR};\r\n  display: flex;\r\n  padding: 4px 20px;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 40px;\r\n  @media screen and (min-width: 768px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const MobileSidebarBtn = styled.button`\r\n  filter: ${props => props.theme.FILTER};\r\n  display: block;\r\n  width: 20px;\r\n  height: 20px;\r\n  cursor: pointer;\r\n  background-color: transparent;\r\n  border: none;\r\n  padding: 1px;\r\n`;\r\n\r\nexport const MobileSidebarInfoWrap = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-top: 0;\r\n  padding: 0;\r\n  border-radius: 100%;\r\n  width: 48px;\r\n  height: 48px;\r\n  flex-shrink: 0;\r\n  flex-grow: 0;\r\n`;\r\n","import UserInfo from '../UserInfo/UserInfo';\r\nimport { BsArrowReturnLeft } from 'react-icons/bs';\r\nimport { MobileSidebarWrap, MobileSidebarBtn } from './MobileSidebar.styled';\r\n\r\nexport default function MobileSidebar({ onGoBack, mobileAddSelected }) {\r\n  return (\r\n    <MobileSidebarWrap>\r\n      <MobileSidebarBtn onClick={() => onGoBack()}>\r\n        <BsArrowReturnLeft\r\n          size={12}\r\n          className={!mobileAddSelected ? 'hideOnMobile' : ''}\r\n        />\r\n      </MobileSidebarBtn>\r\n      <div>\r\n        <UserInfo />\r\n      </div>\r\n    </MobileSidebarWrap>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\nimport bgImageDesktop from '../../images/desktop/bg-3-health-calculator.png';\r\nimport bgImageTablet from '../../images/tablet/bg-1-tablet.png';\r\n\r\nexport const Container = styled.aside`\r\n  background-color: ${props => props.theme.SIDEBAR_COLOR};\r\n  background-size: contain;\r\n  background-repeat: no-repeat;\r\n  overflow: hidden;\r\n  line-height: 1.2;\r\n  font-size: 14px;\r\n  color: ${props => props.theme.MAIN_COLOR};\r\n  padding: 40px 20px;\r\n  letter-spacing: 0.04em;\r\n  @media (min-width: 481px) {\r\n    padding: 80px 30px;\r\n  }\r\n  @media (min-width: 481px) and (max-width: 1279px) {\r\n    background-image: url(${bgImageTablet});\r\n    background-position: bottom right;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    gap: 30px;\r\n    > div {\r\n      flex: 0 0 45%;\r\n    }\r\n  }\r\n  @media screen and (min-width: 1280px) {\r\n    flex-direction: column;\r\n    max-width: 520px;\r\n    width: 35%;\r\n    position: fixed;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    padding: 292px 8% 50px 5%;\r\n    background-image: url(${bgImageDesktop});\r\n    background-position: center right;\r\n  }\r\n`;\r\n\r\nexport const Head = styled.h3`\r\n  margin-bottom: 20px;\r\n  @media screen and (min-width: 481px) {\r\n    margin-bottom: 30px;\r\n  }\r\n`;\r\n\r\nexport const CalloriesList = styled.ul`\r\n  color: ${props => props.theme.SECONDARY_COLOR};\r\n  margin-bottom: 30px;\r\n  @media (min-width: 481px) and (max-width: 1279px) {\r\n    margin-bottom: 0;\r\n  }\r\n  @media screen and (min-width: 1280px) {\r\n    margin-bottom: 50px;\r\n  }\r\n  li {\r\n    margin-bottom: 15px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: flex-end;\r\n    gap: 10px;\r\n    span:last-child {\r\n      white-space: nowrap;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ProductsList = styled.div`\r\n  color: ${props => props.theme.SECONDARY_COLOR};\r\n  line-height: 1.4;\r\n  :first-letter {\r\n    text-transform: uppercase;\r\n  }\r\n`;\r\n\r\nexport const EmptyProducts = styled.div`\r\n  color: ${props => props.theme.SECONDARY_COLOR};\r\n`;\r\n","export const getCalories = state => state.dailyRate.dailyCalories;\r\nexport const getProducts = state => state.dailyRate.uniqCategories;\r\n","import { Fragment } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { translate } from '../../helpers/translate';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport product_dictionary from '../../product_dictionary';\r\nimport {\r\n  Container,\r\n  Head,\r\n  CalloriesList,\r\n  ProductsList,\r\n  EmptyProducts,\r\n} from './RightSidebar.styled';\r\nimport {\r\n  getCalories,\r\n  getProducts,\r\n} from '../../redux/dailyRate/dailyRateSelectors';\r\nimport {\r\n  getIsLoading,\r\n  getProductsList,\r\n} from '../../redux/products/productsSelectors';\r\nimport Loader from '../Loader/Loader';\r\nimport moment from 'moment';\r\n\r\nvar currentDate = moment().format('DD.MM.yyyy');\r\n\r\nexport default function RightSidebar({ date = currentDate }) {\r\n  const products = useSelector(getProducts) || [];\r\n  const dailyNormCalories = useSelector(getCalories);\r\n  const productsList = useSelector(getProductsList);\r\n  const isLoading = useSelector(getIsLoading);\r\n  const location = useLocation();\r\n\r\n  const totalDayCalories = productsList.reduce(\r\n    (total, x) => total + x.calories_kcal,\r\n    0\r\n  );\r\n  let left = dailyNormCalories - totalDayCalories;\r\n  let leftCalories =\r\n    left < 0\r\n      ? 'Ви вжили більше норми'\r\n      : left === 0\r\n      ? 'Ви вжили свою норму калорій'\r\n      : `${left} кКал`;\r\n  const norm_persent =\r\n    dailyNormCalories > 0\r\n      ? ((totalDayCalories * 100) / dailyNormCalories).toFixed(1)\r\n      : 0;\r\n\r\n  return (\r\n    <Container>\r\n      {isLoading ? (\r\n        <Loader />\r\n      ) : (\r\n        <>\r\n          <div>\r\n            <Head>Всього за {date}</Head>\r\n            {dailyNormCalories !== null ? (\r\n              <CalloriesList>\r\n                {location.pathname === '/calculator' ? (\r\n                  <></>\r\n                ) : (\r\n                  <li>\r\n                    <span>Залишилось</span>\r\n                    <span>{dailyNormCalories === 0 ? 0 : leftCalories}</span>\r\n                  </li>\r\n                )}\r\n\r\n                {location.pathname === '/calculator' ? (\r\n                  <></>\r\n                ) : (\r\n                  <li>\r\n                    <span>Вжито</span>\r\n                    <span>\r\n                      {dailyNormCalories === 0 ? 0 : totalDayCalories} кКал\r\n                    </span>\r\n                  </li>\r\n                )}\r\n                <li>\r\n                  <span>Добова норма</span>\r\n                  <span>{dailyNormCalories} кКал</span>\r\n                </li>\r\n                {location.pathname === '/calculator' ? (\r\n                  <></>\r\n                ) : (\r\n                  <li>\r\n                    <span>n% від норми</span>\r\n                    <span>{norm_persent} %</span>\r\n                  </li>\r\n                )}\r\n              </CalloriesList>\r\n            ) : (\r\n              <Head> Необхідно ввести дані в форму!</Head>\r\n            )}\r\n          </div>\r\n          <div>\r\n            <Head>Не рекомендовано вживати</Head>\r\n            {products.length > 0 ? (\r\n              <ProductsList>\r\n                {products.map((product, index) => {\r\n                  return (\r\n                    <Fragment key={index}>\r\n                      {translate(product_dictionary, product)}\r\n                      {index !== products.length - 1 && ', '}\r\n                    </Fragment>\r\n                  );\r\n                })}\r\n              </ProductsList>\r\n            ) : (\r\n              <EmptyProducts>Тут відображатиметься ваша дієта</EmptyProducts>\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n","export function translate(dictionary, product) {\r\n    for (const [key, value] of Object.entries(dictionary)) {\r\n        if(product === key){\r\n            return value.ua;\r\n        }\r\n    }\r\n}","import styled from 'styled-components';\r\n\r\nexport const Main = styled.main`\r\n  @media screen and (max-width: 1279px) {\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: calc(100vh - 85px);\r\n  }\r\n`;\r\n\r\nexport const SidebarWrapper = styled.div`\r\n  margin-top: auto;\r\n  @media screen and (max-width: 767px) {\r\n    padding-top: 40px;\r\n  }\r\n\r\n  @media screen and (min-width: 768px) and (max-width: 1279px) {\r\n    padding-top: 50px;\r\n  } ;\r\n`;\r\n","import React from 'react';\r\nimport DailyCaloriesForm from '../../components/DailyCaloriesForm/DailyCaloriesForm';\r\nimport Header from '../../components/Header/Header';\r\nimport MobileSidebar from '../../components/MobileSidebar/MobileSidebar';\r\nimport RightSidebar from '../../components/RightSidebar/RightSidebar';\r\nimport { Main, SidebarWrapper } from './CalculatorPage.styled';\r\n\r\nconst CalculatorPage = () => {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <MobileSidebar />\r\n      <Main>\r\n        <DailyCaloriesForm />\r\n\r\n        <SidebarWrapper>\r\n          <RightSidebar />\r\n        </SidebarWrapper>\r\n      </Main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CalculatorPage;\r\n","const product_dictionary = {\r\n    \"алкогольные напитки\": {\r\n        \"ua\": \"алкогольні напої\",\r\n        \"en\": \"alcoholic drinks\"\r\n    },\r\n    \"безалкогольные напитки\": {\r\n        \"ua\": \"безалкогольні напої\",\r\n        \"en\": \"soft drinks\"\r\n    },\r\n    \"грибы\": {\r\n        \"ua\": \"гриби\",\r\n        \"en\": \"mushrooms\"\r\n    },\r\n    \"зерновые\": {\r\n        \"ua\": \"зернові\",\r\n        \"en\": \"cereals\"\r\n    },\r\n    \"колбаса\": {\r\n        \"ua\": \"ковбаса\",\r\n        \"en\": \"sausage\"\r\n    },\r\n    \"кунжут\": {\r\n        \"ua\": \"кунжут\",\r\n        \"en\": \"sesame\"\r\n    },\r\n    \"мак\": {\r\n        \"ua\": \"мак\",\r\n        \"en\": \"poppy\"\r\n    },\r\n    \"молочные\": {\r\n        \"ua\": \"молочні\",\r\n        \"en\": \"dairy products\"\r\n    },\r\n    \"масла и жиры\": {\r\n        \"ua\": \"олії та жири\",\r\n        \"en\": \"oils and fats\"\r\n    },\r\n    \"мучные\": {\r\n        \"ua\": \"борошняні\",\r\n        \"en\": \"flour products\"\r\n    },\r\n    \"мясо\": {\r\n        \"ua\": \"м'ясо\",\r\n        \"en\": \"meat\"\r\n    },\r\n    \"орехи\": {\r\n        \"ua\": \"горіхи\",\r\n        \"en\": \"nuts\"\r\n    },\r\n    \"овощи и зелень\": {\r\n        \"ua\": \"овочі та зелень\",\r\n        \"en\": \"vegetables and herbs\"\r\n    },\r\n    \"рыба\": {\r\n        \"ua\": \"риба\",\r\n        \"en\": \"fish\"\r\n    },\r\n    \"семена\": {\r\n        \"ua\": \"насіння\",\r\n        \"en\": \"seeds\"\r\n    },\r\n    \"фрукты\": {\r\n        \"ua\": \"фрукти\",\r\n        \"en\": \"fruit\"\r\n    },\r\n    \"сухофрукты\": {\r\n        \"ua\": \"сухофрукти\",\r\n        \"en\": \"dried fruits\"\r\n    },\r\n    \"ягоды\": {\r\n        \"ua\": \"ягоди\",\r\n        \"en\": \"berries\"\r\n    },\r\n    \"яйца\": {\r\n        \"ua\": \"яйця\",\r\n        \"en\": \"eggs\"\r\n    }\r\n}\r\n\r\nexport default product_dictionary;","export const getProductsList = state => state.products.meal;\r\n\r\nexport const getIsLoading = state => state.products.isLoading;\r\n"],"names":["yup","shape","height","min","max","typeError","required","age","currentWeight","goalWeight","when","schema","test","message","bloodType","MainPageContainer","styled","FormTitle","palette","props","theme","MAIN_COLOR","FormWrapper","InputWrapper","Input","Field","LINE_COLOR","SECONDARY_COLOR","ErrorDescr","LabelRadioBoxes","RadioFieldWrapper","RadioField","BUTTON_COLOR","LabelRadioInputs","SubmitButton","TEXT_COLOR","onOpen","getData","dispatch","useDispatch","navigate","useNavigate","isLoggedIn","useSelector","getIsLoggedIn","initialValues","validationSchema","onSubmit","values","resetForm","dailyRateOperations","fetchDailyRateAuthorized","error","toast","validateOnBlur","errors","touched","isValid","dirty","name","placeholder","id","role","type","value","htmlFor","disabled","MobileSidebarWrap","SIDEBAR_COLOR","MobileSidebarBtn","FILTER","MobileSidebar","onGoBack","mobileAddSelected","onClick","size","className","UserInfo","Container","bgImageTablet","bgImageDesktop","Head","CalloriesList","ProductsList","EmptyProducts","getCalories","state","dailyRate","dailyCalories","getProducts","uniqCategories","currentDate","moment","format","RightSidebar","date","products","dailyNormCalories","productsList","getProductsList","isLoading","getIsLoading","location","useLocation","totalDayCalories","reduce","total","x","calories_kcal","left","leftCalories","norm_persent","toFixed","Loader","pathname","length","map","product","index","Fragment","translate","product_dictionary","dictionary","Object","entries","key","ua","Main","SidebarWrapper","Header","DailyCaloriesForm","meal"],"sourceRoot":""}