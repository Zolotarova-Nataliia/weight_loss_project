{"version":3,"file":"static/js/781.cdc03bc5.chunk.js","mappings":"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","sources":["components/RegistrationForm/RegistrationForm.styled.js","helpers/translate.js","data/product_dictionary.js","components/DailyCalorieIntake/DailyCalorieIntake.slyled.js","components/DailyCalorieIntake/DailyCalorieIntake.js","validators/dailyCaloriesFormValidator.js","components/DailyCaloriesForm/DailyCaloriesForm.styled.js","components/DailyCaloriesForm/DailyCaloriesForm.js","components/DairyProductForm/DairyProductForm.styled.js","components/DairyProductForm/DairyProductForm.js","components/DairyProductListItem/DairyProductListItem.styled.js","components/DairyProductListItem/DairyProductListItem.js","components/DairyProductList/DairyProductList.styled.js","data/quotes.js","components/DairyProductList/DairyProductList.js","components/Header/Header.styled.js","components/Header/Header.js","components/Logo/Logo.styled.js","components/Logo/Logo.js","components/Modal/Modal.styled.js","components/Modal/Portal.js","components/Modal/Modal.js","components/MobileMenu/MobileMenu.styled.js","components/MobileMenu/MobileMenu.js","components/UserInfo/UserInfo.styled.jsx","components/UserInfo/UserInfo.js","components/MobileSidebar/MobileSidebar.styled.js","components/MobileSidebar/MobileSidebar.js","components/RightSidebar/RightSidebar.styled.js","redux/dailyRate/dailyRateSelectors.js","components/RightSidebar/RightSidebar.js","components/Navigation/Navigation.styled.js","components/Navigation/Navigation.js","components/LoginForm/LoginForm.js","components/RegistrationForm/RegistrationForm.js","redux/products/productsSelectors.js","styles/Button.styled.js","validators/authValidation.js"],"sourcesContent":["import styled from 'styled-components';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport RemoveRedEyeOutlinedIcon from '@mui/icons-material/RemoveRedEyeOutlined';\r\nimport VisibilityOffOutlinedIcon from '@mui/icons-material/VisibilityOffOutlined';\r\nimport * as palette from '../../variables/Variables';\r\nimport { Button } from '../../styles/Button.styled';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    align-items: flex-start;\r\n  }\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n  font-family: 'GothamPro';\r\n  font-weight: 700;\r\n  font-size: ${palette.TEXT_FONTSIZE};\r\n  line-height: 13px;\r\n  letter-spacing: 0.04em;\r\n  text-transform: uppercase;\r\n  padding-top: 40px;\r\n  margin-bottom: 60px;\r\n  color: ${props => props.theme.BUTTON_COLOR};\r\n`;\r\n\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  align-items: flex-start;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  &:not(:first-child) {\r\n    margin-top: 20px;\r\n  }\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  border-bottom: 1px solid #e0e0e0;\r\n  width: 280px;\r\n  height: 40px;\r\n  padding-bottom: 20px;\r\n  font-family: 'Verdana';\r\n  font-weight: 700;\r\n  font-size: ${palette.TEXT_FONTSIZE};\r\n  line-height: 17px;\r\n  letter-spacing: 0.04em;\r\n  color: ${props => props.theme.MAIN_COLOR};\r\n  border-bottom: 1px solid ${props => props.theme.LINE_COLOR};\r\n  transition: border-color 0.3s;\r\n  background-color: rgba(117, 190, 218, 0);\r\n\r\n  ::placeholder {\r\n    color: ${props => props.theme.SECONDARY_COLOR};\r\n  }\r\n\r\n  &:focus {\r\n    border-bottom-color: ${props => props.theme.MAIN_COLOR};\r\n  }\r\n\r\n  &.active {\r\n    color: ${props => props.theme.MAIN_COLOR};\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    width: 315px;\r\n  }\r\n`;\r\n\r\nexport const ButtonWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  margin-top: 40px;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    flex-direction: row;\r\n  }\r\n`;\r\n\r\nexport const AuthButton = styled(Button)`\r\n  width: 182px;\r\n\r\n  &:not(:last-child) {\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    &:not(:last-child) {\r\n      margin-bottom: 0;\r\n      margin-right: 32px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const LinkButton = styled(NavLink)`\r\n  display: inline-block;\r\n  text-align: center;\r\n  background: ${props =>\r\n    props.primary ? palette.BUTTON_COLOR : 'transparent'};\r\n  color: ${props => (props.primary ? '#fff' : palette.BUTTON_COLOR)};\r\n  box-shadow: ${props =>\r\n    props.primary ? '0 4px 10px rgba(252, 132, 45, .5)' : null};\r\n  border: 2px solid #fc842d;\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n  width: 182px;\r\n  padding: 13px 25px;\r\n  border-radius: 30px;\r\n  transition: background 200ms linear, color 200ms linear;\r\n  cursor: pointer;\r\n\r\n  :hover,\r\n  :focus {\r\n    background: ${props => (props.primary ? '#fff' : palette.BUTTON_COLOR)};\r\n    color: ${props => (props.primary ? palette.BUTTON_COLOR : '#fff')};\r\n    outline: none;\r\n  }\r\n\r\n  :disabled {\r\n    pointer-events: none;\r\n    opacity: 0.7;\r\n  }\r\n`;\r\n\r\nexport const Text = styled.span`\r\n  @media screen and (max-width: 767px) {\r\n    font-size: 0.67em;\r\n  }\r\n\r\n  color: #e10000;\r\n  font-size: 0.77em;\r\n  margin-top: 5px;\r\n  position: relative;\r\n`;\r\n\r\nexport const Stub = styled.div`\r\n  height: 20px;\r\n  position: relative;\r\n`;\r\n\r\nexport const ShowPasswIcon = styled(RemoveRedEyeOutlinedIcon)`\r\n  position: absolute;\r\n  right: 15px;\r\n  color: ${props => props.theme.SECONDARY_COLOR};\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const HidePasswIcon = styled(VisibilityOffOutlinedIcon)`\r\n  position: absolute;\r\n  right: 15px;\r\n  color: ${props => props.theme.SECONDARY_COLOR};\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const RedirectLink = styled(Link)`\r\n  font-family: 'GothamPro';\r\n  font-weight: 700;\r\n  font-size: 14px;\r\n  letter-spacing: 0.04em;\r\n  color: ${props => props.theme.BUTTON_COLOR};\r\n`;\r\n\r\nexport const isMediaMatch = () => {\r\n  const mediaMatch = window.matchMedia('(max-width: 1279px)');\r\n  return mediaMatch.matches ? 'email' : 'text';\r\n};\r\n","export function translate(dictionary, product) {\r\n    for (const [key, value] of Object.entries(dictionary)) {\r\n        if(product === key){\r\n            return value.ua;\r\n        }\r\n    }\r\n}","const product_dictionary = {\r\n    \"алкогольные напитки\": {\r\n        \"ua\": \"алкогольні напої\",\r\n        \"en\": \"alcoholic drinks\"\r\n    },\r\n    \"безалкогольные напитки\": {\r\n        \"ua\": \"безалкогольні напої\",\r\n        \"en\": \"soft drinks\"\r\n    },\r\n    \"грибы\": {\r\n        \"ua\": \"гриби\",\r\n        \"en\": \"mushrooms\"\r\n    },\r\n    \"зерновые\": {\r\n        \"ua\": \"зернові\",\r\n        \"en\": \"cereals\"\r\n    },\r\n    \"колбаса\": {\r\n        \"ua\": \"ковбаса\",\r\n        \"en\": \"sausage\"\r\n    },\r\n    \"кунжут\": {\r\n        \"ua\": \"кунжут\",\r\n        \"en\": \"sesame\"\r\n    },\r\n    \"мак\": {\r\n        \"ua\": \"мак\",\r\n        \"en\": \"poppy\"\r\n    },\r\n    \"молочные\": {\r\n        \"ua\": \"молочні\",\r\n        \"en\": \"dairy products\"\r\n    },\r\n    \"масла и жиры\": {\r\n        \"ua\": \"олії та жири\",\r\n        \"en\": \"oils and fats\"\r\n    },\r\n    \"мучные\": {\r\n        \"ua\": \"борошняні\",\r\n        \"en\": \"flour products\"\r\n    },\r\n    \"мясо\": {\r\n        \"ua\": \"м'ясо\",\r\n        \"en\": \"meat\"\r\n    },\r\n    \"орехи\": {\r\n        \"ua\": \"горіхи\",\r\n        \"en\": \"nuts\"\r\n    },\r\n    \"овощи и зелень\": {\r\n        \"ua\": \"овочі та зелень\",\r\n        \"en\": \"vegetables and herbs\"\r\n    },\r\n    \"рыба\": {\r\n        \"ua\": \"риба\",\r\n        \"en\": \"fish\"\r\n    },\r\n    \"семена\": {\r\n        \"ua\": \"насіння\",\r\n        \"en\": \"seeds\"\r\n    },\r\n    \"фрукты\": {\r\n        \"ua\": \"фрукти\",\r\n        \"en\": \"fruit\"\r\n    },\r\n    \"сухофрукты\": {\r\n        \"ua\": \"сухофрукти\",\r\n        \"en\": \"dried fruits\"\r\n    },\r\n    \"ягоды\": {\r\n        \"ua\": \"ягоди\",\r\n        \"en\": \"berries\"\r\n    },\r\n    \"яйца\": {\r\n        \"ua\": \"яйця\",\r\n        \"en\": \"eggs\"\r\n    }\r\n}\r\n\r\nexport default product_dictionary;","import styled from 'styled-components';\r\nimport * as palette from '../../variables/Variables';\r\nimport { Button } from '../../styles/Button.styled';\r\n\r\nexport const CalorieIntake = styled.div`\r\n  color: ${palette.MAIN_COLOR};\r\n  line-height: 1.2;\r\n  max-width: 410px;\r\n`;\r\n\r\nexport const Head = styled.h2`\r\n  font-size: ${palette.SUBTITLE_FONTSIZE_MOB};\r\n  margin-bottom: 20px;\r\n  text-align: center;\r\n  color: ${props => props.theme.MAIN_COLOR};\r\n  @media screen and (min-width: 768px) {\r\n    font-size: ${palette.SUBTITLE_FONTSIZE_DESC};\r\n  }\r\n`;\r\n\r\nexport const DailyNorm = styled.div`\r\n  font-size: 16px;\r\n  font-weight: 700;\r\n  margin-bottom: 30px;\r\n  text-align: center;\r\n  letter-spacing: 0.04em;\r\n  color: ${props => props.theme.CALORIES_TEXT_COLOR};\r\n`;\r\n\r\nexport const DailyNormValue = styled.span`\r\n  font-size: 48px;\r\n  color: ${props => props.theme.CALORIES_TEXT_COLOR};\r\n`;\r\n\r\nexport const HeadProducts = styled.h3`\r\n  font-size: 14px;\r\n  padding-top: 12px;\r\n  border-top: 1px solid ${props => props.theme.LINE_COLOR};\r\n  letter-spacing: 0.04em;\r\n  color: ${props => props.theme.SECONDARY_TEXT_COLOR};\r\n`;\r\n\r\nexport const ProductsList = styled.ol`\r\n  font-size: 14px;\r\n  list-style: auto;\r\n  padding: 0 0 0 23px;\r\n  color: ${props => props.theme.SECONDARY_COLOR};\r\n  letter-spacing: 0.04em;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n  margin-top: 20px;\r\n  margin-bottom: 40px;\r\n  max-height: 125px;\r\n  overflow: auto;\r\n  ::-webkit-scrollbar {\r\n    width: 6px;\r\n  }\r\n  ::-webkit-scrollbar-track {\r\n    background: ${props => props.theme.SIDEBAR_COLOR};\r\n  }\r\n  ::-webkit-scrollbar-thumb {\r\n    background: ${props => props.theme.INTAKE_DAILY_COLOR};\r\n  }\r\n`;\r\n\r\nexport const EmptyProducts = styled.div`\r\n  color: ${palette.SECONDARY_COLOR};\r\n  margin: 20px 0 40px;\r\n`;\r\n\r\nexport const ButtonStart = styled(Button)`\r\n  margin: 0 auto;\r\n  display: block;\r\n  width: 210px;\r\n  /* background: transparent; */\r\n`;\r\n","import { NavLink } from 'react-router-dom';\r\nimport { translate } from '../../helpers/translate';\r\nimport product_dictionary from '../../data/product_dictionary';\r\nimport {\r\n  CalorieIntake,\r\n  Head,\r\n  DailyNorm,\r\n  DailyNormValue,\r\n  HeadProducts,\r\n  ProductsList,\r\n  EmptyProducts,\r\n  ButtonStart,\r\n} from './DailyCalorieIntake.slyled';\r\n\r\nexport default function DailyCalorieIntake({ dailyRate }) {\r\n  const products = dailyRate.uniqCategories;\r\n  const dailyCalories = dailyRate.dailyCalories;\r\n\r\n  return (\r\n    <CalorieIntake>\r\n      <Head>Ваша рекомендована добова норма споживання калорій становить</Head>\r\n      <DailyNorm>\r\n        <DailyNormValue>{dailyCalories}</DailyNormValue> кКал\r\n      </DailyNorm>\r\n      <HeadProducts>Не рекомендовано вживати</HeadProducts>\r\n      {products.length > 0 ? (\r\n        <ProductsList>\r\n          {products.map((product, index) => {\r\n            return <li key={index}>{translate(product_dictionary, product)}</li>;\r\n          })}\r\n        </ProductsList>\r\n      ) : (\r\n        <EmptyProducts>Тут відображатиметься ваша дієта</EmptyProducts>\r\n      )}\r\n      <NavLink to={'/registration'}>\r\n        <ButtonStart primary>Почати худнути</ButtonStart>\r\n      </NavLink>\r\n    </CalorieIntake>\r\n  );\r\n}\r\n","import * as yup from 'yup';\r\n\r\nconst validationSchema = yup.object().shape({\r\n  height: yup\r\n    .number()\r\n    .min(100, 'Зріст має бути від 100 см')\r\n    .max(250, 'Зріст має бути до 250 см')\r\n    .typeError('Зріст має бути числом')\r\n    .required(`Обов'язкове поле`),\r\n  age: yup\r\n    .number()\r\n    .min(18, 'Вік має бути від 18 років')\r\n    .max(100, 'Вік має бути до 100 років')\r\n    .typeError('Вік має бути числом')\r\n    .required(`Обов'язкове поле`),\r\n  currentWeight: yup\r\n    .number()\r\n    .min(20, 'Вага має бути від 20 кг')\r\n    .max(500, 'Вага має бути до 500 кг')\r\n    .typeError('Вага має бути числом')\r\n    .required(`Обов'язкове поле`),\r\n  goalWeight: yup\r\n    .number()\r\n    .min(20, 'Вага має бути від 20 кг')\r\n    .max(500, 'Вага має бути до 500 кг')\r\n    .typeError('Вага має бути числом')\r\n    .required(`Обов'язкове поле`)\r\n    .when('currentWeight', (currentWeight, schema) => {\r\n      return schema.test({\r\n        test: goalWeight => !!currentWeight && goalWeight < currentWeight,\r\n        message: 'Бажана вага має бути меншою за поточний',\r\n      });\r\n    }),\r\n  bloodType: yup.number().required(`Обов'язково`),\r\n});\r\n\r\nexport default validationSchema;\r\n","import styled from 'styled-components';\r\nimport { Field } from 'formik';\r\nimport * as palette from '../../variables/Variables';\r\n\r\nconst MainPageContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding-top: 32px;\r\n  margin-left: 20px;\r\n  margin-right: auto;\r\n  width: 280px;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    margin-left: 32px;\r\n    padding-top: 100px;\r\n    width: 545px;\r\n    align-items: start;\r\n  }\r\n\r\n  @media screen and (min-width: 1280px) {\r\n    padding-top: 7%;\r\n    margin-left: 16px;\r\n  }\r\n`;\r\n\r\nconst FormTitle = styled.h2`\r\n  margin: 0 0 32px;\r\n  font-family: 'Verdana';\r\n  font-weight: 700;\r\n  font-size: ${palette.TITLE_FONTSIZE_MOB};\r\n  line-height: 1.44;\r\n  color: ${props => props.theme.MAIN_COLOR};\r\n\r\n  @media screen and (min-width: 768px) {\r\n    font-size: ${palette.TITLE_FONTSIZE};\r\n    line-height: 1.2;\r\n    margin: 0 0 68px;\r\n  }\r\n`;\r\n\r\nconst FormWrapper = styled.div`\r\n  @media screen and (min-width: 768px) {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    margin-top: -32px;\r\n    margin-left: -32px;\r\n  }\r\n`;\r\n\r\nconst InputWrapper = styled.div`\r\n  height: 40px;\r\n  :last-child {\r\n    position: relative;\r\n  }\r\n  @media screen and (max-width: 767px) {\r\n    :not(:last-child) {\r\n      margin-bottom: 32px;\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    flex-basis: calc((100% - 64px) / 2);\r\n    margin-top: 32px;\r\n    margin-left: 32px;\r\n\r\n    :first-child {\r\n      order: 1;\r\n    }\r\n    :nth-child(2) {\r\n      order: 3;\r\n    }\r\n    :nth-child(3) {\r\n      order: 5;\r\n    }\r\n    :nth-child(4) {\r\n      order: 2;\r\n    }\r\n    :nth-child(5) {\r\n      order: 4;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Input = styled(Field)`\r\n  padding: 0;\r\n  width: 240px;\r\n  height: 40px;\r\n  border: none;\r\n  border-bottom: 1px solid ${props => props.theme.LINE_COLOR};\r\n\r\n  font-family: Verdana, Geneva, Tahoma, sans-serif;\r\n  font-size: ${palette.TEXT_FONTSIZE};\r\n  font-weight: 700;\r\n  line-height: 1.21;\r\n  color: ${props => props.theme.MAIN_COLOR};\r\n  background-color: rgba(117, 190, 218, 0);\r\n\r\n  ::placeholder {\r\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\r\n    font-weight: 700;\r\n    font-size: ${palette.TEXT_FONTSIZE};\r\n    line-height: 1.21;\r\n    color: ${props => props.theme.SECONDARY_COLOR};\r\n  }\r\n\r\n  :hover,\r\n  :focus {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nconst ErrorDescr = styled.p`\r\n  font-size: ${palette.TEXT_FONTSIZE};\r\n  color: #ec2a2a;\r\n  margin: 4px 0 0;\r\n`;\r\n\r\nconst LabelRadioBoxes = styled.div`\r\n  height: 40px;\r\n  width: 240px;\r\n  display: flex;\r\n  align-items: center;\r\n  font-family: Verdana;\r\n  font-style: normal;\r\n  font-weight: 700;\r\n  font-size: ${palette.TEXT_FONTSIZE};\r\n  line-height: 1.21;\r\n  color: ${props => props.theme.SECONDARY_COLOR};\r\n\r\n  @media screen and (min-width: 768px) {\r\n    border-bottom: 1px solid ${props => props.theme.LINE_COLOR};\r\n  }\r\n`;\r\n\r\nconst RadioFieldWrapper = styled.div`\r\n  position: absolute;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  width: 240px;\r\n  top: 30px;\r\n  left: -3px;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    top: 40px;\r\n  }\r\n`;\r\n\r\nconst RadioField = styled(Field)`\r\n  appearance: none;\r\n  display: inline-block;\r\n  position: relative;\r\n  top: 4px;\r\n  color: ${props => props.theme.LINE_COLOR};\r\n  height: 18px;\r\n  width: 18px;\r\n  border: 1px solid ${props => props.theme.SECONDARY_COLOR};\r\n  border-radius: 10px;\r\n  cursor: pointer;\r\n  outline: none;\r\n\r\n  &:checked::before {\r\n    content: '';\r\n    position: absolute;\r\n    width: 10px;\r\n    height: 10px;\r\n    background: ${props => props.theme.BUTTON_COLOR};\r\n\r\n    border-radius: 100%;\r\n    left: 3px;\r\n    top: 3px;\r\n  }\r\n`;\r\n\r\nconst LabelRadioInputs = styled.label`\r\n  padding-left: 8px;\r\n\r\n  font-family: Verdana;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  font-size: ${palette.TEXT_FONTSIZE};\r\n  line-height: 1.21;\r\n  color: ${props => props.theme.SECONDARY_COLOR};\r\n\r\n  &:not(:last-of-type) {\r\n    margin-right: 24px;\r\n  }\r\n\r\n  ${RadioField}:checked + & {\r\n    color: orange;\r\n  }\r\n`;\r\n\r\nconst SubmitButton = styled.button`\r\n  margin-top: 65px;\r\n  display: block;\r\n  padding: 0;\r\n  width: 210px;\r\n  height: 44px;\r\n  font-family: Verdana;\r\n  font-weight: 700;\r\n  font-size: ${palette.TEXT_FONTSIZE};\r\n  line-height: 1.21;\r\n  letter-spacing: 0.04em;\r\n  color: ${props => props.theme.TEXT_COLOR};\r\n  background: ${props => props.theme.BUTTON_COLOR};\r\n  box-shadow: 0 4px 10px rgb(252 132 45 / 50%);\r\n  border: 2px solid ${props => props.theme.BUTTON_COLOR};\r\n  border-radius: 30px;\r\n  cursor: pointer;\r\n  transition: color 250ms ease-in;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  @media screen and (min-width: 768px) {\r\n    margin-top: 60px;\r\n    margin-left: 0;\r\n    margin-right: 0;\r\n  }\r\n\r\n  @media screen and (min-width: 1280px) {\r\n    margin-left: auto;\r\n  }\r\n\r\n  :disabled {\r\n    background: #ffa05c;\r\n    box-shadow: none;\r\n    pointer-events: none;\r\n    border: none;\r\n  }\r\n\r\n  :hover {\r\n    background: #ea7827;\r\n  }\r\n`;\r\n\r\nexport {\r\n  MainPageContainer,\r\n  FormWrapper,\r\n  FormTitle,\r\n  InputWrapper,\r\n  Input,\r\n  ErrorDescr,\r\n  LabelRadioBoxes,\r\n  LabelRadioInputs,\r\n  RadioFieldWrapper,\r\n  RadioField,\r\n  SubmitButton,\r\n};\r\n","import { Formik, Form } from 'formik';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport validationSchema from '../../validators/dailyCaloriesFormValidator';\r\nimport {\r\n  MainPageContainer,\r\n  FormWrapper,\r\n  FormTitle,\r\n  InputWrapper,\r\n  Input,\r\n  ErrorDescr,\r\n  LabelRadioBoxes,\r\n  LabelRadioInputs,\r\n  RadioFieldWrapper,\r\n  RadioField,\r\n  SubmitButton,\r\n} from './DailyCaloriesForm.styled';\r\nimport { dailyRateOperations } from '../../redux/dailyRate';\r\nimport { getIsLoggedIn } from '../../redux/auth/authSelectors';\r\n\r\nexport default function DailyCaloriesForm({ onOpen, getData }) {\r\n  const bloodType = [1, 2, 3, 4];\r\n\r\n  const initialValues = {\r\n    height: '',\r\n    age: '',\r\n    currentWeight: '',\r\n    goalWeight: '',\r\n    bloodType: '1',\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const isLoggedIn = useSelector(getIsLoggedIn);\r\n\r\n  const handleSubmit = (values, { resetForm }) => {\r\n    try {\r\n      if (isLoggedIn) {\r\n        dispatch(dailyRateOperations.fetchDailyRateAuthorized(values));\r\n        navigate('/diary');\r\n      } else {\r\n        getData(values);\r\n        onOpen();\r\n      }\r\n    } catch (error) {\r\n      toast.error('Помилка серверу, спробуйте пізніше!');\r\n    } finally {\r\n      resetForm();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <MainPageContainer>\r\n      <FormTitle>Порахуй свою денну норму калорій прямо зараз</FormTitle>\r\n\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={validationSchema}\r\n        onSubmit={handleSubmit}\r\n        validateOnBlur\r\n      >\r\n        {({ errors, touched, isValid, dirty }) => (\r\n          <Form>\r\n            <FormWrapper>\r\n              <InputWrapper>\r\n                <Input name=\"height\" placeholder=\"Зріст *\" />\r\n                {touched.height && errors.height && (\r\n                  <ErrorDescr>{errors.height}</ErrorDescr>\r\n                )}\r\n              </InputWrapper>\r\n\r\n              <InputWrapper>\r\n                <Input id=\"age\" name=\"age\" placeholder=\"Вік *\" />\r\n                {touched.age && errors.age && (\r\n                  <ErrorDescr>{errors.age}</ErrorDescr>\r\n                )}\r\n              </InputWrapper>\r\n\r\n              <InputWrapper>\r\n                <Input\r\n                  id=\"currentWeight\"\r\n                  name=\"currentWeight\"\r\n                  placeholder=\"Поточна вага *\"\r\n                />\r\n                {touched.currentWeight && errors.currentWeight && (\r\n                  <ErrorDescr>{errors.currentWeight}</ErrorDescr>\r\n                )}\r\n              </InputWrapper>\r\n\r\n              <InputWrapper>\r\n                <Input\r\n                  id=\"goalWeight\"\r\n                  name=\"goalWeight\"\r\n                  placeholder=\"Бажана вага *\"\r\n                />\r\n                {touched.goalWeight && errors.goalWeight && (\r\n                  <ErrorDescr>{errors.goalWeight}</ErrorDescr>\r\n                )}\r\n              </InputWrapper>\r\n\r\n              <InputWrapper>\r\n                <LabelRadioBoxes id=\"blood-group\">\r\n                  Група крові *\r\n                </LabelRadioBoxes>\r\n                <RadioFieldWrapper role=\"group\" aria-labelledby=\"blood-group\">\r\n                  {bloodType.map((value, index) => (\r\n                    <div key={index}>\r\n                      <RadioField\r\n                        key={index}\r\n                        type=\"radio\"\r\n                        id={`bloodType${value}`}\r\n                        name=\"bloodType\"\r\n                        value={value.toString()}\r\n                      />\r\n\r\n                      <LabelRadioInputs htmlFor={`bloodType${value}`}>\r\n                        {value}\r\n                      </LabelRadioInputs>\r\n                    </div>\r\n                  ))}\r\n                </RadioFieldWrapper>\r\n              </InputWrapper>\r\n            </FormWrapper>\r\n            <SubmitButton type=\"submit\" disabled={!isValid || !dirty}>\r\n              Почати худнути\r\n            </SubmitButton>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </MainPageContainer>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\nimport * as palette from '../../variables/Variables';\r\nimport { Button } from '../../styles/Button.styled';\r\nimport AsyncSelect from 'react-select/async';\r\n\r\nexport const StyledForm = styled.form`\r\n  display: flex;\r\n  margin-bottom: 32px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  @media screen and (min-width: 768px) {\r\n    margin-bottom: 60px;\r\n    flex-direction: row;\r\n    justify-content: flex-start;\r\n  }\r\n`;\r\n\r\nexport const FormLabel = styled.label`\r\n  width: 100%;\r\n  @media screen and (min-width: 768px) {\r\n    width: auto;\r\n    height: 37px;\r\n  }\r\n`;\r\n\r\nexport const FormInputProduct = styled(AsyncSelect)`\r\n  font-size: ${palette.TEXT_FONTSIZE};\r\n  font-family: 'Verdana';\r\n  font-weight: 700;\r\n  letter-spacing: 0.04em;\r\n  margin-bottom: 32px;\r\n  background: transparent;\r\n  padding: 0 0 8px 0;\r\n  height: 100%;\r\n  position: relative;\r\n  z-index: 5;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    margin-right: 22px;\r\n    margin-bottom: 0;\r\n    width: 240px;\r\n    margin-right: 30px;\r\n  }\r\n\r\n  @media screen and (min-width: 1280px) {\r\n    margin-right: 48px;\r\n  }\r\n\r\n  .react-select__control {\r\n    border: none;\r\n    border-bottom: 1px solid ${props => props.theme.LINE_COLOR};\r\n    border-radius: 0;\r\n    background: transparent;\r\n    &:hover {\r\n      border-bottom-color: ${props => props.theme.MAIN_COLOR};\r\n    }\r\n    &--is-focused {\r\n      outline: none;\r\n      border-bottom-color: ${props => props.theme.MAIN_COLOR};\r\n      box-shadow: none;\r\n    }\r\n  }\r\n  .react-select__value-container {\r\n    margin: 0;\r\n    padding: 8px 0;\r\n\r\n    @media screen and (min-width: 768px) {\r\n      padding-bottom: 20px;\r\n    }\r\n  }\r\n\r\n  .react-select__single-value {\r\n    color: ${props => props.theme.MAIN_COLOR};\r\n  }\r\n  .react-select__input-container {\r\n    color: ${props => props.theme.MAIN_COLOR};\r\n\r\n    margin: 0;\r\n    padding: 0;\r\n    width: 100%;\r\n  }\r\n\r\n  .react-select__placeholder {\r\n    color: ${props => props.theme.SECONDARY_COLOR};\r\n  }\r\n  .react-select__indicators {\r\n    display: none;\r\n  }\r\n\r\n  .react-select__menu {\r\n    background: ${props => props.theme.SELECT_CONTAINER_COLOR};\r\n    color: ${props => props.theme.SELECT_PLACEHOLDER_COLOR};\r\n  }\r\n\r\n  .react-select__menu-list{\r\n    ::-webkit-scrollbar {\r\n      width: 6px;\r\n    }\r\n    ::-webkit-scrollbar-track {\r\n      background: ${props => props.theme.SIDEBAR_COLOR};\r\n    }\r\n    ::-webkit-scrollbar-thumb {\r\n      background: ${props => props.theme.INTAKE_DAILY_COLOR};\r\n    }\r\n  }\r\n`;\r\n\r\nexport const FormInputWeight = styled.input`\r\n  margin-bottom: 60px;\r\n  font-size: ${palette.TEXT_FONTSIZE};\r\n  font-family: 'Verdana';\r\n  font-weight: 700;\r\n  font-size: 14px;\r\n  letter-spacing: 0.04em;\r\n  color: ${props => props.theme.MAIN_COLOR};\r\n  background: transparent;\r\n  width: 100%;\r\n  padding: 8px 0;\r\n  border-bottom: 1px solid ${props => props.theme.LINE_COLOR};\r\n  outline: none;\r\n  transition: border-color 0.3s;\r\n  ::-webkit-outer-spin-button,\r\n  ::-webkit-inner-spin-button {\r\n    -webkit-appearance: none;\r\n    margin: 0;\r\n  }\r\n  ::placeholder {\r\n    color: ${props => props.theme.SECONDARY_COLOR};\r\n  }\r\n  &:focus {\r\n    border-bottom-color: ${props => props.theme.MAIN_COLOR};\r\n  }\r\n  @media screen and (min-width: 768px) {\r\n    width: 106px;\r\n    margin-bottom: 0;\r\n    padding-bottom: 20px;\r\n    text-align: end;\r\n    margin-right: 48px;\r\n  }\r\n  @media screen and (min-width: 1280px) {\r\n    margin-right: 60px;\r\n  }\r\n`;\r\n\r\nexport const FormBtnBase = styled.button`\r\n  font-family: 'Verdana';\r\n  display: inline-block;\r\n  background: ${props =>\r\n    props.primary ? props => props.theme.BUTTON_COLOR : '#fff'};\r\n  color: ${props =>\r\n    props.primary ? '#fff' : props => props.theme.BUTTON_COLOR};\r\n  box-shadow: ${props =>\r\n    props.primary ? '0 4px 10px rgba(252, 132, 45, .5)' : null};\r\n  border: 2px solid ${props => props.theme.BUTTON_COLOR};\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n  width: 176px;\r\n  height: 44px;\r\n  border-radius: 30px;\r\n  transition: background 200ms linear, color 200ms linear;\r\n  cursor: pointer;\r\n  letter-spacing: 0.04em;\r\n  margin-top: 60px;\r\n  :hover {\r\n    background: ${props =>\r\n      props.primary ? '#fff' : props => props.theme.BUTTON_COLOR};\r\n    color: ${props =>\r\n      props.primary ? props => props.theme.BUTTON_COLOR : '#fff'};\r\n    box-shadow: 0px 4px 10px rgba(252, 132, 45, 0.5);\r\n  }\r\n  :disabled {\r\n    pointer-events: none;\r\n    opacity: 0.7;\r\n  }\r\n`;\r\n\r\nexport const FormBtnMobile = styled(FormBtnBase)`\r\n  display: block;\r\n  /* background: transparent; */\r\n  @media screen and (min-width: 768px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const FormBtn = styled(Button)`\r\n  display: none;\r\n  border-radius: 100%;\r\n  width: 48px;\r\n  height: 48px;\r\n  flex-shrink: 0;\r\n  flex-grow: 0;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin-top: 0;\r\n    padding: 0;\r\n  }\r\n`;\r\n","import { useState, Fragment } from 'react';\r\nimport { BsPlusLg } from 'react-icons/bs';\r\nimport {\r\n  StyledForm,\r\n  FormBtnMobile,\r\n  FormBtn,\r\n  FormLabel,\r\n  FormInputWeight,\r\n  FormInputProduct,\r\n} from './DairyProductForm.styled';\r\nimport { getProductByQuery } from '../../services/productsApi';\r\n\r\nconst loadOptions = async (inputValue, callback) => {\r\n  const { products } = await getProductByQuery(inputValue);\r\n  callback(\r\n    products.map(product => {\r\n      const title = product.title.ua;\r\n      return { label: title, value: title };\r\n    })\r\n  );\r\n};\r\n\r\nexport default function DiaryProductForm({ onSubmit, className }) {\r\n  let [selectedProduct, setSelectedProduct] = useState(null);\r\n  let [weight, setWeight] = useState('');\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    const weightNumber = parseInt(weight);\r\n    if (!selectedProduct || isNaN(weightNumber)) return;\r\n    onSubmit({\r\n      product: selectedProduct.value,\r\n      weight: weightNumber,\r\n    });\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setSelectedProduct(null);\r\n    setWeight('');\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <StyledForm onSubmit={handleSubmit} className={className}>\r\n        <FormLabel>\r\n          <FormInputProduct\r\n            classNamePrefix={'react-select'}\r\n            value={selectedProduct}\r\n            isClearable\r\n            backspaceRemovesValue\r\n            escapeClearsValue\r\n            onChange={option => setSelectedProduct(option)}\r\n            loadOptions={loadOptions}\r\n            placeholder=\"Введіть назву продукту\"\r\n            noOptionsMessage={({ inputValue }) =>\r\n              inputValue\r\n                ? 'Такого продукту нема'\r\n                : 'Введіть назву продукту'\r\n            }\r\n            loadingMessage={() => 'Шукаю...'}\r\n          />\r\n        </FormLabel>\r\n        <FormLabel>\r\n          <FormInputWeight\r\n            type=\"number\"\r\n            min={1}\r\n            name=\"weight\"\r\n            title=\"Введіть кількість вжитого продукту\"\r\n            required\r\n            value={weight}\r\n            onChange={e => setWeight(e.target.value)}\r\n            placeholder=\"Грами\"\r\n          />\r\n        </FormLabel>\r\n        <FormBtnMobile type=\"submit\"  primary  disabled={selectedProduct === null || weight === '' ? true : false}>Додати</FormBtnMobile>\r\n\r\n        <FormBtn\r\n          type=\"submit\" primary\r\n          disabled={selectedProduct === null || weight === '' ? true : false}\r\n        >\r\n          <BsPlusLg size={14} />\r\n        </FormBtn>\r\n      </StyledForm>\r\n    </Fragment>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\nimport {\r\n  TEXT_FONTSIZE,\r\n  BUTTON_COLOR\r\n} from '../../variables/Variables';\r\n\r\nexport const Product = styled.li`\r\n  display: flex;\r\n  align-items: baseline;\r\n  justify-content: flex-start;\r\n  margin-bottom: 20px;\r\n  color: ${props => props.theme.MAIN_COLOR};\r\n\r\n  > button {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: transparent;\r\n    padding: 0;\r\n    height: 10px;\r\n    width: 10px;\r\n    min-width: 10px;\r\n    margin-left: 17px;\r\n    cursor: pointer;\r\n\r\n    :hover > svg > path{\r\n      stroke: ${props => props.theme.ICONS_COLOR_HOVER};\r\n    }\r\n\r\n    > svg {\r\n      display: block;\r\n      width: 100%;\r\n      height: 100%;\r\n      object-fit: contain;\r\n\r\n      > path {\r\n        stroke: ${props => props.theme.ICONS_COLOR};\r\n      }\r\n    }\r\n  }\r\n  @media screen and (max-width: 767px) {\r\n    position: relative;\r\n  }\r\n  @media screen and (min-width: 768px) {\r\n    width: 540px;\r\n    & > button {\r\n      height: 12px;\r\n      width: 12px;\r\n      margin-left: 32px;\r\n    }\r\n  }\r\n  @media screen and (min-width: 1280px) {\r\n    width: 595px;\r\n  }\r\n`;\r\nexport const ProductInfo = styled.div`\r\n  display: flex;\r\n  align-items: flex-start;\r\n  > div {\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    border-bottom: 1px solid ${props => props.theme.LINE_COLOR};\r\n    padding-bottom: 8px;\r\n    width: 49px;\r\n    font-size: ${TEXT_FONTSIZE};\r\n    line-height: 17px;\r\n    text-align: right;\r\n    letter-spacing: 0.04em;\r\n    :first-child {\r\n      width: 120px;\r\n      margin-right: 48px;\r\n    }\r\n\r\n    :last-child {\r\n      flex: 0 0 65px;\r\n\r\n      white-space: nowrap;\r\n      text-overflow: none;\r\n    }\r\n    :not(:last-child) {\r\n      margin-right: 32px;\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    width: 100%;\r\n    justify-content: space-between;\r\n    > div {\r\n      text-align: end;\r\n      padding-bottom: 20px;\r\n      margin-right: 0;\r\n      flex: 0 0 106px;\r\n      margin: 0;\r\n      :first-child {\r\n        flex: 0 0 240px;\r\n        text-align: start;\r\n      }\r\n\r\n      :last-child {\r\n        flex: 0 0 106px;\r\n      }\r\n    }\r\n  }\r\n  @media screen and (max-width: 1279px) {\r\n    width: 620px;\r\n    > div {\r\n      :not(:last-child),\r\n      :first-child {\r\n        margin-right: 30px;\r\n      }\r\n    }\r\n  }\r\n  @media screen and (max-width: 767px) {\r\n    width: 100%;\r\n    > div {\r\n      :not(:last-child),\r\n      :first-child {\r\n        margin-right: 8px;\r\n      }\r\n      :last-child {\r\n        span {\r\n          font-size: 10px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Calories = styled.span`\r\n  font-size: 10px;\r\n  @media screen and (min-width: 768px) {\r\n    font-size: ${TEXT_FONTSIZE};\r\n  }\r\n`;\r\n\r\nexport const EditButton = styled.button`\r\n  background-color: transparent;\r\n  cursor: pointer;\r\n  margin-left: -5px;\r\n  \r\n  :hover path{\r\n    stroke: ${props => props.theme.ICONS_COLOR_HOVER};\r\n  }\r\n  path{\r\n    stroke: ${props => props.theme.ICONS_COLOR};\r\n  }\r\n  @media screen and (min-width: 768px) {\r\n    margin-left: -25px;\r\n    height: 20px;\r\n  }\r\n  @media screen and (min-width: 1280px) {\r\n    margin-left: -40px;\r\n  }\r\n  @media screen and (max-width: 767px) {\r\n    padding: 0 15px 0 8px;\r\n    svg {\r\n      height: 10px;\r\n      width: 10px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const FormInput = styled.div`\r\n  position: relative;\r\n  font-size: 14px;\r\n  > span{\r\n    position: absolute;\r\n    right: 3px;\r\n    bottom: 21px;\r\n    pointer-events: none;\r\n  }\r\n`;\r\n\r\nexport const FormInputWeight = styled.input`\r\n  text-align: right;\r\n  padding: 0 15px 20px 10px;\r\n  font-size: 14px;\r\n  letter-spacing: 0.04em;\r\n  border-bottom: 1px solid #E0E0E0;\r\n  width: 106px;\r\n  color: ${props => props.theme.MAIN_COLOR};\r\n  font-family: Verdana;\r\n  height: 38px;\r\n  background: transparent;\r\n  :focus{\r\n    border-bottom-color: ${props => props.theme.MAIN_COLOR};\r\n  }\r\n  ::placeholder{\r\n    color: ${props => props.theme.MAIN_COLOR};\r\n  }\r\n  ::-webkit-outer-spin-button,\r\n  ::-webkit-inner-spin-button {\r\n    -webkit-appearance: none;\r\n    margin: 0;\r\n  }\r\n  [type=number] {\r\n    -moz-appearance: textfield;\r\n  }\r\n`;\r\n\r\nexport const ButtonsWrap = styled.div`\r\n  display: flex;\r\n  @media screen and (min-width: 768px) {\r\n    flex-direction: column;\r\n    position: absolute;\r\n    top: 0;\r\n    justify-content: center;\r\n    right: -30px;\r\n    width: 20px;\r\n  }\r\n  @media screen and (max-width: 767px) {\r\n    margin-top: 20px;\r\n    gap: 20px;\r\n    button{\r\n      flex: 1 0 auto\r\n    }\r\n  }\r\n  button{\r\n    padding: 0;\r\n    margin: 0;\r\n    :disabled{\r\n      pointer-events: none;\r\n      opacity: .5;\r\n    }\r\n    @media screen and (min-width: 768px) {\r\n      span{\r\n        display: none;\r\n      }\r\n    }\r\n    @media screen and (max-width: 767px) {\r\n      display: inline-block;\r\n      background: transparent;\r\n      color: ${BUTTON_COLOR};\r\n      border: 1px solid #FC842D;\r\n      font-weight: 500;\r\n      padding: 8px;\r\n      border-radius: 20px;\r\n      letter-spacing: 0.04em;\r\n      &:last-child{\r\n        box-shadow: 0 1px 5px rgba(252, 132, 45, .5);\r\n      }\r\n      &:first-child{\r\n        background: ${BUTTON_COLOR};\r\n        color: #FFF;\r\n      }\r\n      svg{\r\n        display: none;\r\n      }\r\n    }\r\n    svg{\r\n      width: 18px;\r\n      height: 18px;\r\n    }\r\n    :first-child path{\r\n      stroke: #1bb91b;\r\n    }\r\n    :last-child path{\r\n      stroke: #f33\r\n    }\r\n  }\r\n`;\r\n\r\nexport const FormEdit = styled.form`\r\n  position: relative;\r\n  margin-right: 30px;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    + div, ~ button, > div:first-child{\r\n      display: none;\r\n    }\r\n  }\r\n  @media screen and (max-width: 767px) {\r\n    position: fixed;\r\n    right: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    background: ${props => props.theme.EDIT_BG_COLOR};\r\n    z-index: 1;\r\n    padding: 30px;\r\n    margin-right: 0;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    animation: slideUp 0.8s cubic-bezier(0.68,-0.55,0.265,1.55);\r\n    border-radius: 10px 10px 0 0;\r\n    > div:first-child{\r\n      margin-bottom: 20px;\r\n    }\r\n    input{\r\n      margin: 0;\r\n      padding-bottom: 5px;\r\n      height: auto;\r\n      width: 100%;\r\n    }\r\n    span{\r\n      bottom: 6px;\r\n    }\r\n  }\r\n`;    ","import moment from 'moment';\r\nimport { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { GrClose, GrEdit } from 'react-icons/gr';\r\nimport { useDetectClickOutside } from 'react-detect-click-outside';\r\nimport {\r\n  IoCheckmarkCircleOutline,\r\n  IoCloseCircleOutline,\r\n} from 'react-icons/io5';\r\nimport {\r\n  Product,\r\n  ProductInfo,\r\n  Calories,\r\n  EditButton,\r\n  FormEdit,\r\n  FormInput,\r\n  FormInputWeight,\r\n  ButtonsWrap,\r\n} from './DairyProductListItem.styled';\r\nimport {\r\n  deleteProduct,\r\n  changeProduct,\r\n} from '../../redux/products/productsOperations';\r\n\r\nexport default function DairyProductListItem({ product, date }) {\r\n  const dispatch = useDispatch();\r\n  const { title, weight_g, calories_kcal, _id } = product;\r\n  let [isEdditing, setIsEdditing] = useState(false);\r\n  let [weight, setWeight] = useState(weight_g);\r\n  const meal = { title, weight_g: weight, _id };\r\n\r\n  const formatedDate = moment(date).format('DD.MM.yyyy');\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    dispatch(changeProduct({ date: formatedDate, meal }));\r\n    setIsEdditing(false);\r\n  };\r\n\r\n  const closeEditting = () => {\r\n    setIsEdditing(false);\r\n  };\r\n  const ref = useDetectClickOutside({ onTriggered: closeEditting });\r\n\r\n  return (\r\n    <Product ref={ref}>\r\n      <ProductInfo>\r\n        <div title={title}>{title}</div>\r\n        {isEdditing ? (\r\n          <FormEdit onSubmit={handleSubmit}>\r\n            <div>{title}</div>\r\n            <FormInput>\r\n              <FormInputWeight\r\n                type=\"number\"\r\n                min={1}\r\n                name=\"weight\"\r\n                title=\"Введіть нову кількість вжитого продукту\"\r\n                required\r\n                value={weight}\r\n                onChange={e => setWeight(e.target.value)}\r\n                autoFocus\r\n                placeholder={weight}\r\n              />\r\n              <span>г</span>\r\n            </FormInput>\r\n            <ButtonsWrap>\r\n              <EditButton\r\n                type=\"submit\"\r\n                title=\"Зберегти\"\r\n                disabled={weight === weight_g}\r\n              >\r\n                <IoCheckmarkCircleOutline />\r\n                <span>Зберегти</span>\r\n              </EditButton>\r\n              <EditButton\r\n                type=\"button\"\r\n                onClick={() => setIsEdditing(false)}\r\n                title=\"Відмінити\"\r\n              >\r\n                <IoCloseCircleOutline />\r\n                <span>Відмінити</span>\r\n              </EditButton>\r\n            </ButtonsWrap>\r\n          </FormEdit>\r\n        ) : null}\r\n        <div>{weight_g} г</div>\r\n        <EditButton type=\"button\" onClick={() => setIsEdditing(!isEdditing)}>\r\n          <GrEdit />\r\n        </EditButton>\r\n        <div>\r\n          {calories_kcal} <Calories>кKал</Calories>\r\n        </div>\r\n      </ProductInfo>\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => dispatch(deleteProduct({ date: formatedDate, _id }))}\r\n      >\r\n        <GrClose />\r\n      </button>\r\n    </Product>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\nimport { TEXT_FONTSIZE } from '../../variables/Variables';\r\nexport const ProductsListThumb = styled.div`\r\n  @media screen and (min-width: 1280px) {\r\n    position: relative;\r\n    :before {\r\n        position: absolute;\r\n        bottom: -2px;\r\n        height: 60px;\r\n        left: 0;\r\n        right: 6px;\r\n        background: ${props => props.theme.PRODUCT_LIST_THUMB_GRADIENT};\r\n        pointer-events: none;\r\n        z-index: 1;\r\n        content: '';\r\n      }\r\n  }\r\n`;\r\n\r\nexport const ProductsList = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n    \r\n  @media screen and (min-width: 1280px) {\r\n    max-height: 240px;\r\n    overflow-x: hidden;\r\n    overflow-y: auto;\r\n    padding-right: 32px;\r\n\r\n    ::-webkit-scrollbar {\r\n      width: 6px;\r\n    }\r\n    ::-webkit-scrollbar-track {\r\n      background: ${props => props.theme.SIDEBAR_COLOR};\r\n    }\r\n    ::-webkit-scrollbar-thumb {\r\n      background: ${props => props.theme.INTAKE_DAILY_COLOR};\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ProductsQuote = styled.blockquote`\r\n  border-left: 10px solid #ccc;\r\n  padding: 0.5em 10px;\r\n  font-family: 'Verdana';\r\n  font-weight: 700;\r\n  font-size: ${TEXT_FONTSIZE};\r\n  line-height: 1.44;\r\n  color: ${props => props.theme.MAIN_COLOR};\r\n  margin: 10px 0;\r\n  width: 280px;\r\n\r\n  :before {\r\n    color: #ccc;\r\n    content: open-quote;\r\n    font-size: 4em;\r\n    line-height: 0.1em;\r\n    margin-right: 0.25em;\r\n    vertical-align: -0.4em;\r\n    > p {\r\n      display: inline;\r\n    }\r\n  }\r\n  @media screen and (min-width: 768px) {\r\n    width: 500px;\r\n  }\r\n`;\r\n\r\nexport const ProductsFigure = styled.figure`\r\n  margin: 0;\r\n`;\r\n\r\nexport const ProductsAuthor = styled.figcaption`\r\n  font-style: italic;\r\n  font-family: 'Verdana';\r\n  font-weight: 700;\r\n  font-size: ${TEXT_FONTSIZE};\r\n  line-height: 1.44;\r\n  color: ${props => props.theme.MAIN_COLOR};\r\n`;\r\n","export const quotes = [\r\n  {\r\n    author: 'Д.Дідро',\r\n    text: 'Лікарі безперервно працюють над збереженням нашого здоров’я, а кухарі – над його руйнуванням; проте останні більш впевнені в успіху.',\r\n  },\r\n  {\r\n    author: 'Аристип',\r\n    text: 'Від того, що людина багато їсть, вона не стає здоровішою… Так само і вчений – це не той, хто багато читає, а той, хто читає з користю.',\r\n  },\r\n  {\r\n    author: 'А.Чехов',\r\n    text: 'Вставши із-за столу голодним – ви наїлись; якщо ви встали наївшись – ви переїли; якщо встаєте переївши – ви отруїлись.',\r\n  },\r\n  {\r\n    author: 'Б.Франклін',\r\n    text: 'Якщо хочеш продовжити своє життя, приборкай свою трапезу.',\r\n  },\r\n  {\r\n    author: 'М. де Сервантес',\r\n    text: 'За обідом їж мало, а вечеряй ще менше, тому що здоров’я всього тіла кується в кузні нашого шлунку.',\r\n  },\r\n  {\r\n    author: 'Піфагор',\r\n    text: 'Ніхто не повинен переступати міру ні в їжі, ні в питті.',\r\n  },\r\n  {\r\n    author: 'Ціцерон',\r\n    text: 'Їсти і пити потрібно стільки, щоб наші сили цим відновлювались, а не пригнічувались.',\r\n  },\r\n  {\r\n    author: 'А.Цельс',\r\n    text: 'Надмірне наповнення шлунку шкідливе для здоров’я.',\r\n  },\r\n  {\r\n    author: 'Іоанн Златоуст',\r\n    text: 'Обмежуйтесь рослинами, якщо хочете харчуватись достатньо і здорово.',\r\n  },\r\n  {\r\n    author: 'А.Джамі',\r\n    text: 'Їж стільки, щоб тіло не гинуло від переїдання.',\r\n  },\r\n  {\r\n    author: 'Ф. де Ларошфуко',\r\n    text: ' Стриманість в їжі породжена або турботою про здоров’я, або нездатністю багато з’їсти.',\r\n  },\r\n  {\r\n    author: 'А.Брійя-Соварєн',\r\n    text: 'Якщо ми засуджені на те, щоб їсти, будемо їсти добре.',\r\n  },\r\n  {\r\n    author: 'А.Брійя-Соварєн',\r\n    text: ' Творець, який зобов’язав людину їсти для того, щоб жити, пробуджує її до цього апетитом і нагороджує за це задоволенням.',\r\n  },\r\n  {\r\n    author: 'Марк Твен',\r\n    text: 'Єдиний спосіб зберегти здоров’я – це їсти те, чого не хочемо, пити те, чого не любимо, і робити те, що не подобається.',\r\n  },\r\n  {\r\n    author: 'І.П.Павлов',\r\n    text: '  Якщо надмірне захоплення їжею є звірство, то й зневага до їжі є нерозумною,  і істина тут, як і скрізь, лежить посередині: не захоплюйся, але приділяй належну увагу.',\r\n  },\r\n  {\r\n    author: 'Ф.Г.Раневська',\r\n    text: 'Природа досить вдало продумала будову нашого організму. Щоб ми бачили, скільки ми переїдаємо, наш живіт розміщений на тій же стороні тіла, що й очі.',\r\n  },\r\n  {\r\n    author: 'Арнольд Глазгоу',\r\n    text: 'Тіло – багаж, який несеш усе життя. Чим він важчий, тим коротша подорож.',\r\n  },\r\n  {\r\n    author: 'Н. де Ротшильд',\r\n    text: 'Хороших дієт не буває.',\r\n  },\r\n  {\r\n    author: 'Френк Ллойд Райт',\r\n    text: ' Щоб по-справжньому схуднути, достатньо відмовитися від трьох речей – сніданку, обіду, вечері.',\r\n  },\r\n  {\r\n    author: 'О.Вулкотт',\r\n    text: 'Все, що мені подобається, або протипоказано, або аморально, або веде до ожиріння.',\r\n  },\r\n];\r\n","import DairyProductListItem from '../DairyProductListItem/DairyProductListItem';\r\nimport {\r\n  ProductsList,\r\n  ProductsListThumb,\r\n  ProductsQuote,\r\n  ProductsFigure,\r\n  ProductsAuthor,\r\n} from './DairyProductList.styled';\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport { quotes } from '../../data/quotes';\r\n\r\nfunction getRandomInt(max) {\r\n  return Math.floor(Math.random() * max);\r\n}\r\n\r\nexport default function DairyProductList({ products, date }) {\r\n  const [quoteIndex, setQuoteIndex] = useState(getRandomInt(quotes.length));\r\n  useEffect(() => {\r\n    setQuoteIndex(getRandomInt(quotes.length));\r\n  }, [date]);\r\n  const quote = quotes[quoteIndex];\r\n  return (\r\n    <>\r\n      {products.length !== 0 ? (\r\n        <ProductsListThumb>\r\n          <ProductsList>\r\n            {products.map(product => (\r\n              <DairyProductListItem\r\n                key={product._id}\r\n                product={product}\r\n                date={date}\r\n              />\r\n            ))}\r\n          </ProductsList>\r\n        </ProductsListThumb>\r\n      ) : (\r\n        <ProductsFigure>\r\n          <ProductsQuote>\r\n            <p> {quote.text}</p>\r\n          </ProductsQuote>\r\n          <ProductsAuthor>{quote.author}</ProductsAuthor>\r\n        </ProductsFigure>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\n\r\nexport const HeaderEl = styled.header`\r\n  border-bottom: 2px solid;\r\n  color: ${props => props.theme.LINE_COLOR};\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 20px 20px 16px 20px;\r\n  @media screen and (min-width: 768px) {\r\n    padding: 20px 32px 16px 20px;\r\n  }\r\n  @media screen and (min-width: 1280px) {\r\n    border: none;\r\n    padding: 60px 16px 0px 16px;\r\n    flex-direction: row;\r\n    justify-content: flex-start;\r\n    align-items: flex-end;\r\n  }\r\n`;\r\n\r\nexport const HeaderDivider = styled.div`\r\n  display: none;\r\n  @media screen and (min-width: 1280px) {\r\n    display: block;\r\n    height: 32px;\r\n    border-right: 2px solid;\r\n    border-color: ${props => props.theme.SECONDARY_COLOR};\r\n  }\r\n`;\r\n\r\nexport const UserInfoWrap = styled.div`\r\n  display: none;\r\n  @media screen and (min-width: 768px) {\r\n    display: flex;\r\n    align-items: center;\r\n    margin-right: 53px;\r\n  }\r\n  @media screen and (min-width: 1280px) {\r\n    margin-right: 0;\r\n  }\r\n`;\r\n\r\nexport const BurgerWrap = styled.button`\r\n  background-color: transparent;\r\n  @media screen and (min-width: 1280px) {\r\n    display: none;\r\n  }\r\n`;\r\nexport const HeaderWrap = styled.div`\r\n  @media screen and (min-width: 768px) {\r\n    display: flex;\r\n  }\r\n  @media screen and (min-width: 1280px) {\r\n    width: 100%;\r\n    align-items: flex-end;\r\n    flex-direction: row-reverse;\r\n    justify-content: space-between;\r\n  }\r\n`;\r\n","import {Navigation, Logo, MobileMenu, UserInfo} from '../index';\r\nimport {\r\n  HeaderEl,\r\n  HeaderDivider,\r\n  UserInfoWrap,\r\n  HeaderWrap,\r\n} from './Header.styled';\r\nimport { useSelector } from 'react-redux';\r\nimport { getIsLoggedIn } from '../../redux/auth/authSelectors';\r\n\r\nexport default function Header() {\r\n  const isLoggedIn = useSelector(getIsLoggedIn);\r\n  return (\r\n    <HeaderEl>\r\n      <Logo />\r\n      <HeaderDivider />\r\n      <HeaderWrap>\r\n        <UserInfoWrap>{isLoggedIn && <UserInfo />}</UserInfoWrap>\r\n        {isLoggedIn && <MobileMenu />}\r\n        <Navigation />\r\n      </HeaderWrap>\r\n    </HeaderEl>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport const LogoWrap = styled.div`\r\n  @media screen and (min-width: 1280px) {\r\n    margin-right: 60px;\r\n  }\r\n`;\r\n\r\nexport const LogoLink = styled(NavLink)`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 105.3px;\r\n  font-size: 16px;\r\n  letter-spacing: 0.04em;\r\n  font-weight: 100;\r\n  margin-right: 16px;\r\n  color: ${props => props.theme.MAIN_COLOR};\r\n`;\r\n\r\nexport const LogoImg = styled.div`\r\n  background-image: url(${props => props.theme.LOGO_MOBILE});\r\n  width: 44px;\r\n  height: 46.6px;\r\n  margin-right: 10.3px;\r\n  @media screen and (min-width: 1280px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const LogoText = styled.div`\r\n  display: none;\r\n  @media screen and (min-width: 768px) {\r\n    background-image: url(${props => props.theme.LOGO_TABLET});\r\n    display: block;\r\n    width: 105.3px;\r\n    height: 16px;\r\n  }\r\n\r\n  @media screen and (min-width: 1280px) {\r\n    background-image: url(${props => props.theme.LOGO_DESKTOP});\r\n    display: block;\r\n    align-items: center;\r\n    width: 167px;\r\n    height: 66px;\r\n  }\r\n`;\r\n\r\nexport const LogoTextWrap = styled.div`\r\n  @media screen and (min-width: 1280px) {\r\n    display: block;\r\n    width: 167px;\r\n    margin-right: 20px;\r\n    padding-bottom: 3px;\r\n  }\r\n`;\r\n\r\nexport const LogoTextLogged = styled.div`\r\n  background-image: url(${props => props.theme.LOGO_TABLET});\r\n  width: 105.3px;\r\n  height: 16px;\r\n\r\n  @media screen and (min-width: 1280px) {\r\n    background-image: url(${props => props.theme.LOGO_DESKTOP});\r\n    align-items: center;\r\n    width: 167px;\r\n    height: 66px;\r\n  }\r\n`;\r\n","import { useSelector } from 'react-redux';\r\nimport { getIsLoggedIn } from '../../redux/auth/authSelectors';\r\nimport {\r\n  LogoLink,\r\n  LogoImg,\r\n  LogoText,\r\n  LogoWrap,\r\n  LogoTextWrap,\r\n  LogoTextLogged,\r\n} from './Logo.styled';\r\n\r\nexport default function Logo() {\r\n  const isLoggedIn = useSelector(getIsLoggedIn);\r\n\r\n  return (\r\n    <LogoWrap>\r\n      <LogoLink to={isLoggedIn ? '/diary' : '/'}>\r\n        <div>\r\n          <LogoImg />\r\n        </div>\r\n        <LogoTextWrap>\r\n          {isLoggedIn ? <LogoTextLogged /> : <LogoText />}\r\n        </LogoTextWrap>\r\n      </LogoLink>\r\n    </LogoWrap>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\nimport { GrClose } from 'react-icons/gr';\r\nimport { IoMdReturnLeft } from 'react-icons/io';\r\n\r\nexport const Overlay = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 1200;\r\n  background-color: ${props => props.theme.TEXT_COLOR};\r\n  @media screen and (min-width: 768px) {\r\n    background-color: rgba(33, 33, 33, 0.12);\r\n  }\r\n`;\r\n\r\nexport const ModalContainer = styled.div`\r\n  position: relative;\r\n  background-color: ${props => props.theme.TEXT_COLOR};\r\n  height: 100%;\r\n  /* @media screen and (min-width: 120px) and (max-width: 767px) {\r\n    max-width: 350px;\r\n    border: 1px solid ${props => props.theme.LINE_COLOR};\r\n  } */\r\n\r\n  @media screen and (min-width: 768px) {\r\n    max-width: 672px;\r\n    height: auto;\r\n  }\r\n`;\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding-right: 20px;\r\n  padding-left: 20px;\r\n  padding-bottom: 120px;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    padding: 72px 130px 72px 130px;\r\n  }\r\n  @media screen and (min-width: 1280px) {\r\n    padding-top: 64px;\r\n  }\r\n`;\r\nexport const MobileBloc = styled.div`\r\n  @media screen and (min-width: 768px) {\r\n    display: none;\r\n  }\r\n`;\r\nexport const ExitMobile = styled.div`\r\n  width: 100%;\r\n  height: 40px;\r\n  background: #eff1f3;\r\n  margin-bottom: 40px;\r\n  background: ${props => props.theme.TEXT_COLOR};\r\n`;\r\nexport const CloseBtn = styled(GrClose)`\r\n  position: absolute;\r\n  right: 13px;\r\n  top: 20px;\r\n  width: 12px;\r\n  height: 12px;\r\n  cursor: pointer;\r\n  transition: 0.5s;\r\n\r\n  filter: ${props => props.theme.FILTER};\r\n\r\n  @media screen and (min-width: 320px) and (max-width: 767px) {\r\n    display: none;\r\n  }\r\n  :hover {\r\n    transform: scale(1.3);\r\n  }\r\n`;\r\nexport const ExitMobBtn = styled.button`\r\n  background: transparent;\r\n`;\r\n\r\nexport const ExitMobBtnIcon = styled(IoMdReturnLeft)`\r\n  margin-top: 12px;\r\n  margin-left: 15px;\r\n  cursor: pointer;\r\n  color: ${props => props.theme.MAIN_COLOR};\r\n`;\r\n","import { Component } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nconst modalRoot = document.querySelector(\"#modal-root\");\r\n\r\nclass Portal extends Component {\r\n    componentDidMount() {\r\n    window.addEventListener(\"keydown\", this.handleKeyDown);\r\n    }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\r\n    }\r\n    \r\n    render() {\r\n        return createPortal(\r\n            <>\r\n                {this.props.children}\r\n            </>, modalRoot\r\n        );\r\n    }\r\n}\r\n\r\nexport default Portal;","import {\r\n  Content,\r\n  ModalContainer,\r\n  MobileBloc,\r\n  ExitMobile,\r\n  CloseBtn,\r\n  ExitMobBtn,\r\n  ExitMobBtnIcon,\r\n  Overlay,\r\n} from './Modal.styled';\r\nimport {Header, DailyCalorieIntake } from '../index';\r\nimport Portal from './Portal';\r\n\r\nexport default function Modal({ isOpen, onCancel, dailyRate }) {\r\n  return (\r\n    <>\r\n      {isOpen && (\r\n        <Portal>\r\n          <Overlay onClick={onCancel}>\r\n            <ModalContainer\r\n              onClick={e => {\r\n                e.stopPropagation();\r\n              }}\r\n            >\r\n              <MobileBloc>\r\n                <Header />\r\n                <ExitMobile>\r\n                  <ExitMobBtn type=\"button\" onClick={onCancel}>\r\n                    <ExitMobBtnIcon />\r\n                  </ExitMobBtn>\r\n                </ExitMobile>\r\n              </MobileBloc>\r\n              <CloseBtn onClick={onCancel} fill=\"none\" />\r\n              <Content>\r\n                <DailyCalorieIntake dailyRate={dailyRate} />\r\n              </Content>\r\n            </ModalContainer>\r\n          </Overlay>\r\n        </Portal>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\nimport { NavLink } from 'react-router-dom';\r\nimport * as palette from '../../variables/Variables';\r\n\r\nexport const MenuWrap = styled.div`\r\n  @media screen and (max-width: 1279px) {\r\n    width: 24px;\r\n    height: 24px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    align-self: center;\r\n  }\r\n`;\r\n\r\nexport const MenuNav = styled.nav`\r\n  display: none;\r\n  @media screen and (max-width: 1279px) {\r\n    height: 100vh;\r\n    position: fixed;\r\n    z-index: 100;\r\n    opacity: 0;\r\n    width: 0;\r\n    transition: all 0.8s cubic-bezier(0.68, -0.55, 0.265, 1.55);\r\n    top: 84px;\r\n    right: 0;\r\n    flex-direction: column;\r\n    background: ${props => props.theme.INTAKE_DAILY_COLOR};\r\n    align-items: center;\r\n    padding-top: 100px;\r\n    display: flex;\r\n    gap: 15px;\r\n    margin-bottom: 2px;\r\n  }\r\n  @media screen and (max-width: 480px) {\r\n    padding-top: 60px;\r\n  }\r\n`;\r\n\r\nexport const MenuLink = styled(NavLink)`\r\n  font-family: 'GothamPro';\r\n  font-weight: 700;\r\n  font-size: 24px;\r\n  line-height: 29px;\r\n  text-align: center;\r\n  letter-spacing: 0.04em;\r\n  text-transform: uppercase;\r\n  color: ${props => props.theme.MOBILE_MENU_TEXT_COLOR};\r\n\r\n  &.active {\r\n    color: ${props => props.theme.MOBILE_MENU_ACTIVE_TEXT_COLOR};\r\n  }\r\n\r\n  @media screen and (min-width: 1280px) {\r\n    font-size: ${palette.TEXT_FONTSIZE};\r\n    text-transform: uppercase;\r\n    letter-spacing: 0.04em;\r\n    font-family: 'GothamPro';\r\n    font-weight: 700;\r\n    margin-right: 16px;\r\n    color: ${props => props.theme.MOBILE_MENU_TEXT_COLOR};\r\n    &:hover {\r\n      color: ${props => props.theme.MAIN_COLOR};\r\n      transition: color 0.5s cubic-bezier(0.4, 0, 0.2, 1);\r\n    }\r\n    &.active {\r\n      color: ${props => props.theme.MAIN_COLOR};\r\n    }\r\n    &:first-child {\r\n      margin-left: 20px;\r\n    }\r\n  }\r\n  @media screen and (max-width: 1279px) {\r\n    font-size: 24px;\r\n    line-height: 1.2;\r\n    color: ${props => props.theme.MOBILE_MENU_TEXT_COLOR};\r\n    &.active {\r\n      color: ${props => props.theme.MOBILE_MENU_ACTIVE_TEXT_COLOR};\r\n    }\r\n  }\r\n  @media screen and (max-width: 480px) {\r\n    font-size: 18px;\r\n  }\r\n`;\r\n\r\nexport const BurgerIcon = styled.span`\r\n  @media screen and (max-width: 1279px) {\r\n    display: block;\r\n    width: 18px;\r\n    height: 2px;\r\n    background-color: ${props => props.theme.MAIN_COLOR};\r\n    transition: top 0.3s;\r\n    position: relative;\r\n    &:before,\r\n    &:after {\r\n      width: 100%;\r\n      height: 2px;\r\n      background-color: ${props => props.theme.MAIN_COLOR};\r\n      display: inline-block;\r\n      margin: 0;\r\n      transition: top 0.3s;\r\n      content: '';\r\n      position: absolute;\r\n      left: 0;\r\n    }\r\n    &::before {\r\n      top: -6px;\r\n    }\r\n    &::after {\r\n      top: 6px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const BurgerButton = styled.button`\r\n  display: none;\r\n  @media screen and (max-width: 1279px) {\r\n    display: block;\r\n    background-color: transparent;\r\n    user-select: none;\r\n    outline: none;\r\n    border: 0 none;\r\n    width: 24px;\r\n    height: 24px;\r\n  }\r\n  &.close {\r\n    span {\r\n      background-color: transparent;\r\n      &:before,\r\n      &:after {\r\n        top: 0;\r\n      }\r\n      &:before {\r\n        transform: rotate(45deg);\r\n      }\r\n      &:after {\r\n        transform: rotate(-45deg);\r\n      }\r\n    }\r\n    ~ ${MenuNav} {\r\n      width: 100%;\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n","import { useState } from 'react';\r\nimport {\r\n  MenuWrap,\r\n  MenuLink,\r\n  MenuNav,\r\n  BurgerIcon,\r\n  BurgerButton,\r\n} from './MobileMenu.styled';\r\n\r\nexport default function MobileMenu() {\r\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\r\n  isMenuOpen\r\n    ? document.body.classList.add('no-scroll')\r\n    : document.body.classList.remove('no-scroll');\r\n\r\n  const toggleMenu = () => {\r\n    setIsMenuOpen(!isMenuOpen);\r\n  };\r\n\r\n  return (\r\n    <MenuWrap>\r\n      <BurgerButton\r\n        className={isMenuOpen ? 'close' : 'open'}\r\n        onClick={() => toggleMenu()}\r\n      >\r\n        <BurgerIcon />\r\n      </BurgerButton>\r\n      <MenuNav className={isMenuOpen ? 'add-pointer' : 'remove-pointer'}>\r\n        <MenuLink to=\"/diary\">Щоденник</MenuLink>\r\n        <MenuLink to=\"/calculator\">Калькулятор</MenuLink>\r\n      </MenuNav>\r\n    </MenuWrap>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\nimport * as palette from '../../variables/Variables';\r\nimport { Box } from '@mui/material';\r\nimport { Button } from '../../styles/Button.styled';\r\nexport const UserInfoWrap = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  @media screen and (min-width: 1280px) {\r\n    z-index: 1;\r\n    align-items: unset;\r\n  }\r\n`;\r\n\r\nexport const UserText = styled.h2`\r\n  font-style: normal;\r\n  font-weight: 700;\r\n  font-size: ${palette.TEXT_FONTSIZE};\r\n  line-height: 2.2;\r\n  text-align: right;\r\n  letter-spacing: 0.04em;\r\n\r\n  color: ${props => props.theme.MAIN_COLOR};\r\n  white-space: nowrap;\r\n  margin-right: 15px;\r\n  @media screen and (min-width: 1280px) {\r\n    margin-left: 20px;\r\n  }\r\n`;\r\n\r\nexport const VerticalLine = styled.div`\r\n  display: block;\r\n  height: 32px;\r\n  border-right: 2px solid;\r\n  border-color: ${props => props.theme.SECONDARY_COLOR};\r\n`;\r\n\r\nexport const UserExit = styled.button`\r\n  background-color: transparent;\r\n  font-style: normal;\r\n  padding: 0;\r\n  cursor: pointer;\r\n  font-weight: 700;\r\n  font-size: 14px;\r\n  line-height: 2.2;\r\n  letter-spacing: 0.04em;\r\n  color: ${props => props.theme.SECONDARY_COLOR};\r\n  margin-left: 15px;\r\n  &:hover {\r\n    color: ${props => props.theme.MAIN_COLOR};\r\n    transition: color 0.5s cubic-bezier(0.4, 0, 0.2, 1);\r\n  }\r\n\r\n  cursor: pointer;\r\n\r\n  @media screen and (min-width: 1280px) {\r\n    margin-left: 20px;\r\n  }\r\n`;\r\n\r\nexport const Wrap = styled(Box)`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  width: 300px;\r\n  background: ${props => props.theme.TEXT_COLOR};\r\n  padding: 40px;\r\n  @media screen and (min-width: 768px) {\r\n    width: 400px;\r\n  }\r\n`;\r\nexport const BtnWrap = styled.div`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  margin-top: 50px;\r\n`;\r\nexport const ModalTxt = styled.p`\r\n  text-align: center;\r\n  font-size: 22px;\r\n  font-weight: 700;\r\n  color: ${props => props.theme.MAIN_COLOR};\r\n  @media screen and (min-width: 768px) {\r\n    font-size: ${palette.SUBTITLE_FONTSIZE_DESC};\r\n  }\r\n`;\r\nexport const Btn = styled(Button)`\r\n  padding: 13px 30px;\r\n  @media screen and (min-width: 768px) {\r\n    padding: 13px 45px;\r\n  }\r\n`;\r\n","import { useState } from 'react';\r\nimport { Modal } from '@mui/material';\r\nimport {\r\n  UserInfoWrap,\r\n  UserText,\r\n  UserExit,\r\n  VerticalLine,\r\n  Wrap,\r\n  BtnWrap,\r\n  ModalTxt,\r\n  Btn,\r\n} from './UserInfo.styled';\r\nimport { getUserName } from '../../redux/auth/authSelectors';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { logOut } from '../../redux/auth/authOperations';\r\n\r\nexport default function UserInfo() {\r\n  const name = useSelector(getUserName);\r\n  const dispatch = useDispatch();\r\n\r\n  let sliced = name.slice(0,18);\r\n  if (sliced.length < name.length) {\r\n  sliced += '...';\r\n  }\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  return (\r\n    <UserInfoWrap>\r\n      <UserText>{sliced}</UserText>\r\n      <VerticalLine />\r\n      <UserExit onClick={handleOpen}>Вихід</UserExit>\r\n      <Modal open={open} onClose={handleClose}>\r\n        <Wrap>\r\n          <ModalTxt>Бажаєте вийти?</ModalTxt>\r\n          <BtnWrap>\r\n            <Btn onClick={() => dispatch(logOut())}>Так</Btn>\r\n            <Btn onClick={handleClose}>Ні</Btn>\r\n          </BtnWrap>\r\n        </Wrap>\r\n      </Modal>\r\n    </UserInfoWrap>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\n\r\nexport const MobileSidebarWrap = styled.div`\r\n  width: 100%;\r\n  height: 40px;\r\n  background-color: ${props => props.theme.SIDEBAR_COLOR};\r\n  display: flex;\r\n  padding: 4px 20px;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 40px;\r\n  @media screen and (min-width: 768px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const MobileSidebarBtn = styled.button`\r\n  filter: ${props => props.theme.FILTER};\r\n  display: block;\r\n  width: 20px;\r\n  height: 20px;\r\n  cursor: pointer;\r\n  background-color: transparent;\r\n  border: none;\r\n  padding: 1px;\r\n`;\r\n\r\nexport const MobileSidebarInfoWrap = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-top: 0;\r\n  padding: 0;\r\n  border-radius: 100%;\r\n  width: 48px;\r\n  height: 48px;\r\n  flex-shrink: 0;\r\n  flex-grow: 0;\r\n`;\r\n","import UserInfo from '../UserInfo/UserInfo';\r\nimport { BsArrowReturnLeft } from 'react-icons/bs';\r\nimport { MobileSidebarWrap, MobileSidebarBtn } from './MobileSidebar.styled';\r\n\r\nexport default function MobileSidebar({ onGoBack, mobileAddSelected }) {\r\n  return (\r\n    <MobileSidebarWrap>\r\n      <MobileSidebarBtn onClick={() => onGoBack()}>\r\n        <BsArrowReturnLeft\r\n          size={12}\r\n          className={!mobileAddSelected ? 'hideOnMobile' : ''}\r\n        />\r\n      </MobileSidebarBtn>\r\n      <div>\r\n        <UserInfo />\r\n      </div>\r\n    </MobileSidebarWrap>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\nimport bgImageDesktop from '../../images/desktop/bg-3-health-calculator.png';\r\nimport bgImageTablet from '../../images/tablet/bg-1-tablet.png';\r\n\r\nexport const Container = styled.aside`\r\n  background-color: ${props => props.theme.SIDEBAR_COLOR};\r\n  background-size: contain;\r\n  background-repeat: no-repeat;\r\n  overflow: hidden;\r\n  line-height: 1.2;\r\n  font-size: 14px;\r\n  color: ${props => props.theme.MAIN_COLOR};\r\n  padding: 40px 20px;\r\n  letter-spacing: 0.04em;\r\n  @media (min-width: 481px) {\r\n    padding: 80px 30px;\r\n  }\r\n  @media (min-width: 481px) and (max-width: 1279px) {\r\n    background-image: url(${bgImageTablet});\r\n    background-position: bottom right;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    gap: 30px;\r\n    > div {\r\n      flex: 0 0 45%;\r\n    }\r\n  }\r\n  @media screen and (min-width: 1280px) {\r\n    flex-direction: column;\r\n    max-width: 520px;\r\n    width: 35%;\r\n    position: fixed;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    padding: 292px 8% 50px 5%;\r\n    background-image: url(${bgImageDesktop});\r\n    background-position: center right;\r\n  }\r\n`;\r\n\r\nexport const Head = styled.h3`\r\n  margin-bottom: 20px;\r\n  @media screen and (min-width: 481px) {\r\n    margin-bottom: 30px;\r\n  }\r\n`;\r\n\r\nexport const CalloriesList = styled.ul`\r\n  color: ${props => props.theme.SECONDARY_COLOR};\r\n  margin-bottom: 30px;\r\n  @media (min-width: 481px) and (max-width: 1279px) {\r\n    margin-bottom: 0;\r\n  }\r\n  @media screen and (min-width: 1280px) {\r\n    margin-bottom: 50px;\r\n  }\r\n  li {\r\n    margin-bottom: 15px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: flex-end;\r\n    gap: 10px;\r\n    span:last-child {\r\n      white-space: nowrap;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ProductsList = styled.div`\r\n  color: ${props => props.theme.SECONDARY_COLOR};\r\n  line-height: 1.4;\r\n  :first-letter {\r\n    text-transform: uppercase;\r\n  }\r\n`;\r\n\r\nexport const EmptyProducts = styled.div`\r\n  color: ${props => props.theme.SECONDARY_COLOR};\r\n`;\r\n","export const getCalories = state => state.dailyRate.dailyCalories;\r\nexport const getProducts = state => state.dailyRate.uniqCategories;\r\n","import moment from 'moment';\r\nimport { Fragment } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useLocation } from 'react-router-dom';\r\nimport {Loader} from '../index';\r\nimport { translate } from '../../helpers/translate';\r\nimport product_dictionary from '../../data/product_dictionary';\r\nimport {\r\n  Container,\r\n  Head,\r\n  CalloriesList,\r\n  ProductsList,\r\n  EmptyProducts,\r\n} from './RightSidebar.styled';\r\nimport {\r\n  getCalories,\r\n  getProducts,\r\n} from '../../redux/dailyRate/dailyRateSelectors';\r\nimport {\r\n  getIsLoading,\r\n  getProductsList,\r\n} from '../../redux/products/productsSelectors';\r\n\r\nvar currentDate = moment().format('DD.MM.yyyy');\r\n\r\nexport default function RightSidebar({ date = currentDate }) {\r\n  const products = useSelector(getProducts) || [];\r\n  const dailyNormCalories = useSelector(getCalories);\r\n  const productsList = useSelector(getProductsList);\r\n  const isLoading = useSelector(getIsLoading);\r\n  const location = useLocation();\r\n\r\n  const totalDayCalories = productsList.reduce(\r\n    (total, x) => total + x.calories_kcal,\r\n    0\r\n  );\r\n  let left = dailyNormCalories - totalDayCalories;\r\n  let leftCalories =\r\n    left < 0\r\n      ? 'Ви вжили більше норми'\r\n      : left === 0\r\n      ? 'Ви вжили свою норму калорій'\r\n      : `${left} кКал`;\r\n  const norm_persent =\r\n    dailyNormCalories > 0\r\n      ? ((totalDayCalories * 100) / dailyNormCalories).toFixed(1)\r\n      : 0;\r\n\r\n  return (\r\n    <Container>\r\n      {isLoading ? (\r\n        <Loader />\r\n      ) : (\r\n        <>\r\n          <div>\r\n            <Head>Всього за {date}</Head>\r\n            {dailyNormCalories !== null ? (\r\n              <CalloriesList>\r\n                {location.pathname === '/calculator' ? (\r\n                  <></>\r\n                ) : (\r\n                  <li>\r\n                    <span>Залишилось</span>\r\n                    <span>{dailyNormCalories === 0 ? 0 : leftCalories}</span>\r\n                  </li>\r\n                )}\r\n\r\n                {location.pathname === '/calculator' ? (\r\n                  <></>\r\n                ) : (\r\n                  <li>\r\n                    <span>Вжито</span>\r\n                    <span>\r\n                      {dailyNormCalories === 0 ? 0 : totalDayCalories} кКал\r\n                    </span>\r\n                  </li>\r\n                )}\r\n                <li>\r\n                  <span>Добова норма</span>\r\n                  <span>{dailyNormCalories} кКал</span>\r\n                </li>\r\n                {location.pathname === '/calculator' ? (\r\n                  <></>\r\n                ) : (\r\n                  <li>\r\n                    <span>n% від норми</span>\r\n                    <span>{norm_persent} %</span>\r\n                  </li>\r\n                )}\r\n              </CalloriesList>\r\n            ) : (\r\n              <Head> Необхідно ввести дані в форму!</Head>\r\n            )}\r\n          </div>\r\n          <div>\r\n            <Head>Не рекомендовано вживати</Head>\r\n            {products.length > 0 ? (\r\n              <ProductsList>\r\n                {products.map((product, index) => {\r\n                  return (\r\n                    <Fragment key={index}>\r\n                      {translate(product_dictionary, product)}\r\n                      {index !== products.length - 1 && ', '}\r\n                    </Fragment>\r\n                  );\r\n                })}\r\n              </ProductsList>\r\n            ) : (\r\n              <EmptyProducts>Тут відображатиметься ваша дієта</EmptyProducts>\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\nimport { NavLink } from 'react-router-dom';\r\nimport * as palette from '../../variables/Variables';\r\n\r\nexport const Nav = styled.nav`\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: flex-end;\r\n  @media screen and (min-width: 1280px) {\r\n    width: 100%;\r\n    height: 26px;\r\n    padding-bottom: 5px;\r\n  }\r\n`;\r\n\r\nexport const NavWrap = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: flex-end;\r\n  @media screen and (min-width: 1280px) {\r\n    width: 100%;\r\n    height: 26px;\r\n  }\r\n`;\r\n\r\nexport const LoggedNav = styled.nav`\r\n  display: none;\r\n  @media screen and (min-width: 1280px) {\r\n    display: block;\r\n    align-items: center;\r\n    width: 268px;\r\n    height: 26px;\r\n  }\r\n`;\r\n\r\nexport const Link = styled(NavLink)`\r\n  font-size: ${palette.TEXT_FONTSIZE};\r\n  text-transform: uppercase;\r\n  letter-spacing: 0.04em;\r\n  font-family: 'GothamPro';\r\n  font-weight: 700;\r\n  margin-right: 16px;\r\n  color: ${props => props.theme.SECONDARY_COLOR};\r\n  &:hover {\r\n    color: ${props => props.theme.MAIN_COLOR};\r\n    transition: color 0.5s cubic-bezier(0.4, 0, 0.2, 1);\r\n  }\r\n  &.active {\r\n    color: ${props => props.theme.MAIN_COLOR};\r\n  }\r\n\r\n  &:last-child {\r\n    margin-right: 0px;\r\n  }\r\n\r\n  @media screen and (min-width: 1280px) {\r\n    border: none;\r\n    &:first-child {\r\n      margin-left: 20px;\r\n    }\r\n  }\r\n`;\r\n","import { Nav, Link, LoggedNav, NavWrap } from './Navigation.styled';\r\nimport { useSelector } from 'react-redux';\r\nimport { getIsLoggedIn } from '../../redux/auth/authSelectors';\r\n\r\nexport default function Navigation() {\r\n  const isLoggedIn = useSelector(getIsLoggedIn);\r\n  return (\r\n    <NavWrap>\r\n      {isLoggedIn ? (\r\n        <>\r\n          <LoggedNav>\r\n            <Link to=\"/diary\">Щоденник</Link>\r\n            <Link to=\"/calculator\">Калькулятор</Link>\r\n          </LoggedNav>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Nav>\r\n            <Link to=\"/signin\">Увійти</Link>\r\n            <Link to=\"/registration\">Реєстрація</Link>\r\n          </Nav>\r\n        </>\r\n      )}\r\n    </NavWrap>\r\n  );\r\n}\r\n","import { useDispatch } from 'react-redux';\r\nimport { useState } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport { logIn } from '../../redux/auth/authOperations';\r\nimport {\r\n  emailValidation,\r\n  passwordValidation,\r\n} from '../../validators/authValidation';\r\nimport {\r\n  Wrapper,\r\n  Title,\r\n  Form,\r\n  Label,\r\n  Input,\r\n  ButtonWrapper,\r\n  AuthButton,\r\n  LinkButton,\r\n  Text,\r\n  Stub,\r\n  ShowPasswIcon,\r\n  HidePasswIcon,\r\n  RedirectLink,\r\n  isMediaMatch,\r\n} from '../RegistrationForm/RegistrationForm.styled';\r\n\r\nconst validationSchema = yup.object({\r\n  email: emailValidation,\r\n  password: passwordValidation,\r\n});\r\n\r\nexport default function LoginForm() {\r\n  const dispatch = useDispatch();\r\n  const [showPassw, setShowPassw] = useState(false);\r\n  const toggleShowPassw = () => {\r\n    setShowPassw(!showPassw);\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: '',\r\n      password: '',\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values, { resetForm }) => {\r\n      dispatch(logIn(values));\r\n      resetForm();\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Title>Вхід</Title>\r\n      <Form onSubmit={formik.handleSubmit}>\r\n        <Label htmlFor=\"email\"></Label>\r\n        <Input\r\n          placeholder=\"Пошта *\"\r\n          id=\"email\"\r\n          name=\"email\"\r\n          type={isMediaMatch()}\r\n          onChange={formik.handleChange}\r\n          value={formik.values.email}\r\n          autoComplete=\"email\"\r\n        />\r\n        {formik.touched.email && Boolean(formik.errors.email) ? (\r\n          <Text>{formik.touched.email && formik.errors.email}</Text>\r\n        ) : (\r\n          <Stub />\r\n        )}\r\n\r\n        <Label htmlFor=\"password\" style={{ position: 'relative' }}>\r\n          <Input\r\n            placeholder=\"Пароль *\"\r\n            id=\"password\"\r\n            name=\"password\"\r\n            type={showPassw ? 'text' : 'password'}\r\n            onChange={formik.handleChange}\r\n            value={formik.values.password.trim()}\r\n            autoComplete=\"current-password\"\r\n          />\r\n          {showPassw ? (\r\n            <HidePasswIcon\r\n              onClick={() => {\r\n                toggleShowPassw();\r\n              }}\r\n            />\r\n          ) : (\r\n            <ShowPasswIcon\r\n              onClick={() => {\r\n                toggleShowPassw();\r\n              }}\r\n            />\r\n          )}\r\n        </Label>\r\n        {formik.touched.password && Boolean(formik.errors.password) ? (\r\n          <Text>{formik.touched.password && formik.errors.password}</Text>\r\n        ) : (\r\n          <Stub />\r\n        )}\r\n        <RedirectLink to=\"/verify\">\r\n          Не підвердили електронну адресу?\r\n        </RedirectLink>\r\n\r\n        <ButtonWrapper>\r\n          <AuthButton primary type=\"submit\">\r\n            Вхід\r\n          </AuthButton>\r\n          <LinkButton to={'/registration'}>Зареєструватися </LinkButton>\r\n        </ButtonWrapper>\r\n      </Form>\r\n    </Wrapper>\r\n  );\r\n}\r\n","import { useDispatch } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useState } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport { register } from '../../redux/auth/authOperations';\r\nimport {\r\n  nameValidation,\r\n  emailValidation,\r\n  passwordValidation,\r\n} from '../../validators/authValidation';\r\nimport {\r\n  Wrapper,\r\n  Title,\r\n  Form,\r\n  Label,\r\n  Input,\r\n  ButtonWrapper,\r\n  AuthButton,\r\n  LinkButton,\r\n  Text,\r\n  Stub,\r\n  ShowPasswIcon,\r\n  HidePasswIcon,\r\n  isMediaMatch,\r\n} from './RegistrationForm.styled';\r\n\r\nconst validationSchema = yup.object({\r\n  name: nameValidation,\r\n  email: emailValidation,\r\n  password: passwordValidation,\r\n});\r\n\r\nexport default function RegistrationForm() {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const [showPassw, setShowPassw] = useState(false);\r\n  const toggleShowPassw = () => {\r\n    setShowPassw(!showPassw);\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: '',\r\n      email: '',\r\n      password: '',\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: async (values, { resetForm }) => {\r\n      await dispatch(register(values));\r\n      navigate('/signin', { state: { from: '/calculator' }, replace: true });\r\n      resetForm();\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Title>Реєстрація</Title>\r\n      <Form onSubmit={formik.handleSubmit}>\r\n        <Label htmlFor=\"name\"></Label>\r\n        <Input\r\n          placeholder=\"Ім'я *\"\r\n          id=\"name\"\r\n          name=\"name\"\r\n          type=\"text\"\r\n          onChange={formik.handleChange}\r\n          value={formik.values.name}\r\n          autoComplete=\"name\"\r\n        />\r\n        {formik.touched.name && Boolean(formik.errors.name) ? (\r\n          <Text>{formik.touched.name && formik.errors.name}</Text>\r\n        ) : (\r\n          <Stub />\r\n        )}\r\n\r\n        <Label htmlFor=\"email\"></Label>\r\n        <Input\r\n          placeholder=\"Пошта *\"\r\n          id=\"email\"\r\n          name=\"email\"\r\n          type={isMediaMatch()}\r\n          onChange={formik.handleChange}\r\n          value={formik.values.email}\r\n          autoComplete=\"email\"\r\n        />\r\n        {formik.touched.email && Boolean(formik.errors.email) ? (\r\n          <Text>{formik.touched.email && formik.errors.email}</Text>\r\n        ) : (\r\n          <Stub />\r\n        )}\r\n\r\n        <Label htmlFor=\"password\" style={{ position: 'relative' }}>\r\n          <Input\r\n            placeholder=\"Пароль *\"\r\n            id=\"password\"\r\n            name=\"password\"\r\n            type={showPassw ? 'text' : 'password'}\r\n            onChange={formik.handleChange}\r\n            value={formik.values.password.trim()}\r\n            autoComplete=\"current-password\"\r\n          />\r\n          {showPassw ? (\r\n            <HidePasswIcon\r\n              onClick={() => {\r\n                toggleShowPassw();\r\n              }}\r\n            />\r\n          ) : (\r\n            <ShowPasswIcon\r\n              onClick={() => {\r\n                toggleShowPassw();\r\n              }}\r\n            />\r\n          )}\r\n        </Label>\r\n        {formik.touched.password && Boolean(formik.errors.password) ? (\r\n          <Text>{formik.touched.password && formik.errors.password}</Text>\r\n        ) : (\r\n          <Stub />\r\n        )}\r\n\r\n        <ButtonWrapper>\r\n          <AuthButton primary type=\"submit\">\r\n            Зареєструватися\r\n          </AuthButton>\r\n          <LinkButton to={'/signin'}>Вхід</LinkButton>\r\n        </ButtonWrapper>\r\n      </Form>\r\n    </Wrapper>\r\n  );\r\n}\r\n","export const getProductsList = state => state.products.meal;\r\n\r\nexport const getIsLoading = state => state.products.isLoading;\r\n","import styled from 'styled-components';\r\n\r\nexport const Button = styled.button`\r\n  display: inline-block;\r\n  background: ${props =>\r\n    props.primary ? props.theme.BUTTON_COLOR : 'transparent'};\r\n  color: ${props => (props.primary ? '#fff' : props.theme.BUTTON_COLOR)};\r\n  box-shadow: ${props =>\r\n    props.primary ? '0 4px 10px rgba(252, 132, 45, .5)' : null};\r\n  border: 2px solid #fc842d;\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n  padding: 13px 25px;\r\n  border-radius: 30px;\r\n  transition: background 200ms linear, color 200ms linear;\r\n  cursor: pointer;\r\n  letter-spacing: 0.04em;\r\n\r\n  :hover {\r\n    background: ${props =>\r\n      props.primary ? 'transparent' : props.theme.BUTTON_COLOR};\r\n    color: ${props => (props.primary ? props.theme.BUTTON_COLOR : '#fff')};\r\n  }\r\n\r\n  :disabled {\r\n    pointer-events: none;\r\n    opacity: 0.7;\r\n  }\r\n`;\r\n","import * as yup from 'yup';\r\n\r\nconst REG_EXP = '^[A-Za-z0-9]+$';\r\n\r\nexport const nameValidation = yup\r\n  .string(`Введіть своє ім'я`)\r\n  .min(3, 'Довжина імені має бути мінімум 3 символи')\r\n  .max(254, 'Надто довго!')\r\n  .required(`Необхідно вказати ім'я`);\r\n\r\nexport const emailValidation = yup\r\n  .string('Введіть адресу електронної пошти')\r\n  .min(3, 'Довжина пошти має бути мінімум 3 символи')\r\n  .max(254, 'Надто довго!')\r\n  .email(`Повинна обов'язково містити знак \"@\" і \"крапку\"`)\r\n  .required('Необхідно вказати адресу електронної пошти');\r\n\r\nexport const passwordValidation = yup\r\n  .string('Введіть ваш пароль')\r\n  .matches(REG_EXP, 'Може містити лише латинський алфавіт та цифри')\r\n  .min(8, 'Довжина повинна бути мінімум 8 символів')\r\n  .max(100, 'Надто довго!')\r\n  .required('Необхідно ввести пароль');\r\n"],"names":["Wrapper","styled","Title","palette","props","theme","BUTTON_COLOR","Form","Label","Input","MAIN_COLOR","LINE_COLOR","SECONDARY_COLOR","ButtonWrapper","AuthButton","Button","LinkButton","NavLink","primary","Text","Stub","ShowPasswIcon","RemoveRedEyeOutlinedIcon","HidePasswIcon","VisibilityOffOutlinedIcon","RedirectLink","Link","isMediaMatch","window","matchMedia","matches","translate","dictionary","product","Object","entries","key","value","ua","CalorieIntake","Head","DailyNorm","CALORIES_TEXT_COLOR","DailyNormValue","HeadProducts","SECONDARY_TEXT_COLOR","ProductsList","SIDEBAR_COLOR","INTAKE_DAILY_COLOR","EmptyProducts","ButtonStart","DailyCalorieIntake","dailyRate","products","uniqCategories","dailyCalories","length","map","index","product_dictionary","to","yup","shape","height","min","max","typeError","required","age","currentWeight","goalWeight","when","schema","test","message","bloodType","MainPageContainer","FormTitle","FormWrapper","InputWrapper","Field","ErrorDescr","LabelRadioBoxes","RadioFieldWrapper","RadioField","LabelRadioInputs","SubmitButton","TEXT_COLOR","DailyCaloriesForm","onOpen","getData","dispatch","useDispatch","navigate","useNavigate","isLoggedIn","useSelector","getIsLoggedIn","initialValues","validationSchema","onSubmit","values","resetForm","dailyRateOperations","fetchDailyRateAuthorized","error","toast","validateOnBlur","errors","touched","isValid","dirty","name","placeholder","id","role","type","toString","htmlFor","disabled","StyledForm","FormLabel","FormInputProduct","AsyncSelect","SELECT_CONTAINER_COLOR","SELECT_PLACEHOLDER_COLOR","FormInputWeight","FormBtnBase","FormBtnMobile","FormBtn","loadOptions","inputValue","callback","getProductByQuery","title","label","DiaryProductForm","className","useState","selectedProduct","setSelectedProduct","weight","setWeight","reset","Fragment","event","preventDefault","weightNumber","parseInt","isNaN","classNamePrefix","isClearable","backspaceRemovesValue","escapeClearsValue","onChange","option","noOptionsMessage","loadingMessage","e","target","size","Product","ICONS_COLOR_HOVER","ICONS_COLOR","ProductInfo","TEXT_FONTSIZE","Calories","EditButton","FormInput","ButtonsWrap","FormEdit","EDIT_BG_COLOR","DairyProductListItem","date","weight_g","calories_kcal","_id","isEdditing","setIsEdditing","meal","formatedDate","moment","format","ref","useDetectClickOutside","onTriggered","changeProduct","autoFocus","onClick","deleteProduct","ProductsListThumb","PRODUCT_LIST_THUMB_GRADIENT","ProductsQuote","ProductsFigure","ProductsAuthor","quotes","author","text","getRandomInt","Math","floor","random","DairyProductList","quoteIndex","setQuoteIndex","useEffect","quote","HeaderEl","HeaderDivider","UserInfoWrap","HeaderWrap","Header","Logo","UserInfo","MobileMenu","Navigation","LogoWrap","LogoLink","LogoImg","LOGO_MOBILE","LogoText","LOGO_TABLET","LOGO_DESKTOP","LogoTextWrap","LogoTextLogged","Overlay","ModalContainer","Content","MobileBloc","ExitMobile","CloseBtn","GrClose","FILTER","ExitMobBtn","ExitMobBtnIcon","IoMdReturnLeft","modalRoot","document","querySelector","Portal","addEventListener","this","handleKeyDown","removeEventListener","createPortal","children","Component","Modal","isOpen","onCancel","stopPropagation","fill","MenuWrap","MenuNav","MenuLink","MOBILE_MENU_TEXT_COLOR","MOBILE_MENU_ACTIVE_TEXT_COLOR","BurgerIcon","BurgerButton","isMenuOpen","setIsMenuOpen","body","classList","add","remove","UserText","VerticalLine","UserExit","Wrap","Box","BtnWrap","ModalTxt","Btn","getUserName","sliced","slice","open","setOpen","handleClose","onClose","logOut","MobileSidebarWrap","MobileSidebarBtn","MobileSidebar","onGoBack","mobileAddSelected","Container","bgImageTablet","bgImageDesktop","CalloriesList","getCalories","state","getProducts","currentDate","RightSidebar","dailyNormCalories","productsList","getProductsList","isLoading","getIsLoading","location","useLocation","totalDayCalories","reduce","total","x","left","leftCalories","norm_persent","toFixed","Loader","pathname","Nav","NavWrap","LoggedNav","email","emailValidation","password","passwordValidation","LoginForm","showPassw","setShowPassw","toggleShowPassw","formik","useFormik","logIn","handleSubmit","handleChange","autoComplete","Boolean","style","position","trim","nameValidation","RegistrationForm","register","from","replace"],"sourceRoot":""}